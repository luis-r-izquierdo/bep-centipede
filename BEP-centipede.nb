(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1834279,      34279]
NotebookOptionsPosition[   1826258,      34021]
NotebookOutlinePosition[   1826635,      34038]
CellTagsIndexPosition[   1826592,      34035]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Best-experienced-payoff Dynamics", "Title",
 CellChangeTimes->{{3.692963139229731*^9, 3.6929631740013227`*^9}, {
  3.692963833305882*^9, 3.692963836048258*^9}}],

Cell[CellGroupData[{

Cell["Source code", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963104322612*^9, 3.6929631227469807`*^9}, 
   3.6929631827426558`*^9, 3.69296347114834*^9, {3.693031989625875*^9, 
   3.693031991231361*^9}}],

Cell[CellGroupData[{

Cell["General options", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929637613180933`*^9, 3.692963781949512*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Symbols", " ", "x"}], ",", " ", "y", ",", " ", 
     RowBox[{
     "z", " ", "and", " ", "t", " ", "must", " ", "not", " ", "be", " ", 
      "used", " ", "in", " ", "this", " ", "notebook"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"Root", ",", 
      RowBox[{"ExactRootIsolation", "\[Rule]", "True"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"precision", "=", "6"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpectedMove", "::", "invalidValueOf_testSetRule"}], "=", 
     "\"\<the variable testSetRule in ExpectedMove[\!\(\*
StyleBox[\"testSetRule\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\), tieBreakingRule, n] cannot take the \
value `1`. It can only be \\\"all\\\", \\\"two\\\" or \\\"adj\\\"\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpectedMove", "::", "invalidValueOf_tieBreakingRule"}], "=", 
     "\"\<the variable tieBreakingRule in ExpectedMove[testSetRule, \!\(\*
StyleBox[\"tieBreakingRule\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\), n] cannot take the value `1`. It \
can only be \\\"min\\\", \\\"stick\\\" or \\\"unif\\\"\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpectedMove", "::", "invalidValueOf_n"}], "=", 
     "\"\<the variable n (number of nodes in the game) in \
ExpectedMove[testSetRule, tieBreakingRule, \!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)] cannot take the value `1`. It must \
be an integer strictly greater than 1\>\""}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.692963095601802*^9}, 3.692963471148655*^9, {3.692965028060574*^9, 
   3.692965029507132*^9}, {3.692966522983467*^9, 3.6929666165570383`*^9}, {
   3.692966724564423*^9, 3.692966765740283*^9}, {3.693030030531804*^9, 
   3.6930300315556517`*^9}, {3.693030092575877*^9, 3.69303010318467*^9}, {
   3.693030148307716*^9, 3.69303019914688*^9}, {3.693030620688936*^9, 
   3.693030622881857*^9}, {3.693031015984412*^9, 3.6930310349845963`*^9}, {
   3.693031133311364*^9, 3.693031272406781*^9}, 3.6930319805566177`*^9, {
   3.69303305306196*^9, 3.693033057673807*^9}, {3.693035868154105*^9, 
   3.693035871572858*^9}, {3.693078145413859*^9, 3.6930781675558777`*^9}, {
   3.69354989608856*^9, 3.693549898484931*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Expected moves", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963227845255*^9, 3.69296325552354*^9}, 
   3.692963296342883*^9, 3.6929634614063253`*^9, 3.692963707587676*^9}],

Cell[CellGroupData[{

Cell["Payoff and general functions", "Subsubsection",
 CellChangeTimes->{{3.692965354024008*^9, 3.692965381764658*^9}, {
  3.6930320109304237`*^9, 3.693032015002742*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PayoffsX", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"centipedePlus", "=", "3"}], ",", 
       RowBox[{"centipedeMinus", "=", "1"}], ",", "gain", ",", 
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gain", "=", 
       RowBox[{"centipedePlus", "-", "centipedeMinus"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[GreaterEqual]", "i"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "gain"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"j", "-", "1"}], ")"}], "*", "gain"}], "-", 
           "centipedeMinus"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "s1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PayoffsY", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"centipedePlus", "=", "3"}], ",", 
       RowBox[{"centipedeMinus", "=", "1"}], ",", "gain", ",", 
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gain", "=", 
       RowBox[{"centipedePlus", "-", "centipedeMinus"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[GreaterEqual]", 
           RowBox[{"i", "+", "1"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "gain"}], "+", 
           "centipedePlus"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"j", "-", "1"}], ")"}], "*", "gain"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "s2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "s1"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExpectedMove", "[", 
     RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_"}], "]"}],
     ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"IntegerQ", "[", "n", "]"}], "]"}], " ", "||", 
          RowBox[{"n", "<", "2"}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"ExpectedMove", "::", "invalidValueOf_n"}], ",", "n"}], 
            "]"}], ";", 
           "\"\<Error parameterizing the length of the game (number of nodes \
must be at least 2)\>\"", ";", 
           RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "testSetRule", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\"\<all\>\"", ",", 
         RowBox[{"Switch", "[", 
          RowBox[{
          "tieBreakingRule", ",", "\[IndentingNewLine]", "\"\<min\>\"", ",", 
           RowBox[{"ExpectedMoveAllMin", "[", 
            RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
           "\[IndentingNewLine]", "\"\<stick\>\"", ",", 
           RowBox[{"ExpectedMoveAllStick", "[", 
            RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
           "\[IndentingNewLine]", "\"\<unif\>\"", ",", 
           RowBox[{"ExpectedMoveAllUnif", "[", 
            RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
           "\[IndentingNewLine]", "_", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               RowBox[{
               "ExpectedMove", "::", "invalidValueOf_tieBreakingRule"}], ",", 
               "tieBreakingRule"}], "]"}], ";", 
             "\"\<Error parameterizing the tie-breaking rule\>\"", ";", 
             RowBox[{"Abort", "[", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\"\<two\>\"", ",", 
         RowBox[{"Switch", "[", 
          RowBox[{
          "tieBreakingRule", ",", "\[IndentingNewLine]", "\"\<min\>\"", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"TieBreaker", "[", 
              RowBox[{
              "i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], "]"}],
              ":=", 
             RowBox[{"MinIfTie", "[", 
              RowBox[{"i", ",", "m", ",", "j", ",", "k", ",", "payoffs"}], 
              "]"}]}], ";", " ", 
            RowBox[{"ExpectedMoveTwo", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\"\<stick\>\"", ",", 
           RowBox[{"ExpectedMoveTwoStick", "[", 
            RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
           "\[IndentingNewLine]", "\"\<unif\>\"", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"TieBreaker", "[", 
              RowBox[{
              "i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], "]"}],
              ":=", 
             RowBox[{"UniformIfTie", "[", 
              RowBox[{"i", ",", "m", ",", "j", ",", "k", ",", "payoffs"}], 
              "]"}]}], ";", 
            RowBox[{"ExpectedMoveTwo", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}]}], ",", 
           "\[IndentingNewLine]", "_", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               RowBox[{
               "ExpectedMove", "::", "invalidValueOf_tieBreakingRule"}], ",", 
               "tieBreakingRule"}], "]"}], ";", 
             "\"\<Error parameterizing the tie-breaking rule\>\"", ";", 
             RowBox[{"Abort", "[", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\"\<adj\>\"", ",", 
         RowBox[{"Switch", "[", 
          RowBox[{
          "tieBreakingRule", ",", "\[IndentingNewLine]", "\"\<min\>\"", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"TieBreaker", "[", 
              RowBox[{
              "i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], "]"}],
              ":=", 
             RowBox[{"MinIfTie", "[", 
              RowBox[{"i", ",", "m", ",", "j", ",", "k", ",", "payoffs"}], 
              "]"}]}], ";", 
            RowBox[{"ExpectedMoveAdjacent", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\"\<stick\>\"", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"TieBreaker", "[", 
              RowBox[{
              "i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], "]"}],
              ":=", 
             RowBox[{"StickToCurrent", "[", 
              RowBox[{"i", ",", "m", ",", "j", ",", "k", ",", "payoffs"}], 
              "]"}]}], ";", 
            RowBox[{"ExpectedMoveAdjacent", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\"\<unif\>\"", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"TieBreaker", "[", 
              RowBox[{
              "i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], "]"}],
              ":=", 
             RowBox[{"UniformIfTie", "[", 
              RowBox[{"i", ",", "m", ",", "j", ",", "k", ",", "payoffs"}], 
              "]"}]}], ";", 
            RowBox[{"ExpectedMoveAdjacent", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}]}], ",", 
           "\[IndentingNewLine]", "_", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               RowBox[{
               "ExpectedMove", "::", "invalidValueOf_tieBreakingRule"}], ",", 
               "tieBreakingRule"}], "]"}], ";", 
             "\"\<Error parameterizing the tie-breaking rule\>\"", ";", 
             RowBox[{"Abort", "[", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "_", ",", 
         
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"ExpectedMove", "::", "invalidValueOf_testSetRule"}], 
             ",", "testSetRule"}], "]"}], ";", 
           "\"\<Error parameterizing the test-set rule\>\"", ";", 
           RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExpectedMoveWithoutFirstVariables", "[", 
     RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_"}], "]"}],
     ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
        "reducedEM"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"reducedEM", "=", 
        RowBox[{"ExpectedMove", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"reducedEM", "=", 
        RowBox[{"Rest", "[", 
         RowBox[{"Drop", "[", 
          RowBox[{"reducedEM", ",", 
           RowBox[{"{", 
            RowBox[{"s1", "+", "1"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"reducedEM", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"x", "[", "i", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", "s1"}], "}"}]}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"y", "[", "1", "]"}], "\[Rule]", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"y", "[", "i", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", "s2"}], "}"}]}], "]"}]}]}]}], 
         "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExpectedMoveWithoutLastVariables", "[", 
     RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_"}], "]"}],
     ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
        "reducedEM"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"reducedEM", "=", 
        RowBox[{"ExpectedMove", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"reducedEM", "=", 
        RowBox[{"Most", "[", 
         RowBox[{"Drop", "[", 
          RowBox[{"reducedEM", ",", 
           RowBox[{"{", "s1", "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"reducedEM", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "s1", "]"}], "\[Rule]", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"x", "[", "i", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"s1", "-", "1"}]}], "}"}]}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"y", "[", "s2", "]"}], "\[Rule]", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"y", "[", "i", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"s2", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "}"}]}]}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Tie", " ", "breakers"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinIfTie", "[", 
     RowBox[{"i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], "]"}], 
    ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pim", "=", 
         RowBox[{"payoffs", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "m"}], "]"}], "]"}]}], ",", 
        RowBox[{"pjk", "=", 
         RowBox[{"payoffs", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "k"}], "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Boole", "[", 
       RowBox[{
        RowBox[{"pim", ">", "pjk"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pim", "\[Equal]", "pjk"}], "&&", 
          RowBox[{"i", "\[LessEqual]", "j"}]}], ")"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StickToCurrent", "[", 
     RowBox[{"i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], "]"}], 
    ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pim", "=", 
         RowBox[{"payoffs", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "m"}], "]"}], "]"}]}], ",", 
        RowBox[{"pjk", "=", 
         RowBox[{"payoffs", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "k"}], "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Boole", "[", 
       RowBox[{"pim", ">", "pjk"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UniformIfTie", "[", 
    RowBox[{"i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pim", "=", 
        RowBox[{"payoffs", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "m"}], "]"}], "]"}]}], ",", 
       RowBox[{"pjk", "=", 
        RowBox[{"payoffs", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "k"}], "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pim", ">", "pjk"}], ",", "1", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pim", "\[Equal]", "pjk"}], ",", 
         RowBox[{"1", "/", "2"}], ",", "0"}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.6929630874974546`*^9}, {3.692963191215775*^9, 3.692963217125394*^9}, 
   3.692963447174942*^9, {3.6929635650700083`*^9, 3.6929635658683968`*^9}, 
   3.692963942883462*^9, {3.692965446235427*^9, 3.6929654697463293`*^9}, {
   3.6929657073233213`*^9, 3.692965744640543*^9}, {3.692965816730579*^9, 
   3.692965819847828*^9}, {3.692965859703281*^9, 3.6929659019656057`*^9}, {
   3.692966131948928*^9, 3.692966227208665*^9}, {3.692966260010957*^9, 
   3.6929662891655703`*^9}, {3.692966648235888*^9, 3.692966710166909*^9}, {
   3.692966784231855*^9, 3.692966823821845*^9}, {3.692966858602195*^9, 
   3.692966917506918*^9}, {3.692966953934803*^9, 3.692966975881844*^9}, 
   3.692967072814118*^9, 3.692967123450399*^9, {3.692967739845028*^9, 
   3.6929677537398653`*^9}, {3.692971310715054*^9, 3.692971318625497*^9}, {
   3.692971786307362*^9, 3.692971812328455*^9}, {3.692972457878489*^9, 
   3.692972466361067*^9}, {3.692972499167418*^9, 3.6929725194390182`*^9}, {
   3.692973314001739*^9, 3.692973335251636*^9}, {3.692973419426969*^9, 
   3.692973467238038*^9}, {3.692973930518475*^9, 3.692973962411765*^9}, 
   3.692974006322344*^9, {3.692974134721342*^9, 3.692974160336493*^9}, {
   3.6929743392580013`*^9, 3.692974339876562*^9}, {3.692974429104535*^9, 
   3.692974526740728*^9}, {3.692974578154134*^9, 3.692974582046*^9}, {
   3.692975543684683*^9, 3.692975591374995*^9}, {3.693029679654345*^9, 
   3.693029704649976*^9}, {3.693030041865196*^9, 3.693030045811145*^9}, {
   3.693030211694378*^9, 3.6930302207164392`*^9}, {3.6930303435772667`*^9, 
   3.693030374559471*^9}, {3.693031287888219*^9, 3.693031453287703*^9}, {
   3.693031497073848*^9, 3.6930315500730886`*^9}, {3.693032077736012*^9, 
   3.693032106873304*^9}, {3.693032138453549*^9, 3.6930321749361277`*^9}, {
   3.693032306349473*^9, 3.69303233673464*^9}, {3.693032388836957*^9, 
   3.693032521866275*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test all ", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963343213125*^9, 3.692963354722578*^9}, {
  3.6929634215352087`*^9, 3.692963453979772*^9}, {3.69296361380372*^9, 
  3.692963646665205*^9}}],

Cell[CellGroupData[{

Cell["Min if tie", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963621679696*^9, 3.692963650291464*^9}, 
   3.692963795604203*^9, {3.692972843352756*^9, 3.692972845004739*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FirstMoversInflowAllMin", "[", 
     RowBox[{"n_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"k", "=", "i"}], "s2"], 
             RowBox[{"y", "[", "k", "]"}]}], ")"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"m", "=", "1"}], "i"], 
              RowBox[{"y", "[", "m", "]"}]}], ")"}], 
            RowBox[{"s1", "-", "i"}]]}], "+", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "2"}], 
            RowBox[{"i", "-", "1"}]], 
           RowBox[{
            RowBox[{"y", "[", "k", "]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"l", "=", "1"}], 
                RowBox[{"k", "-", "1"}]], 
               RowBox[{"y", "[", "l", "]"}]}], ")"}], 
             RowBox[{"i", "-", "k"}]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"m", "=", "1"}], "k"], 
               RowBox[{"y", "[", "m", "]"}]}], ")"}], 
             RowBox[{"s1", "-", "i"}]]}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "/.", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"j", "=", "1"}], "s2"], 
         RowBox[{"y", "[", "j", "]"}]}], "\[Rule]", "1"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SecondMoversInflowAllMin", "[", 
     RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"k", "=", "2"}], "s1"], 
              RowBox[{"x", "[", "k", "]"}]}], ")"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "1", "]"}], "+", 
               RowBox[{"x", "[", "2", "]"}]}], ")"}], 
             RowBox[{"s2", "-", "1"}]]}], "+", 
           SuperscriptBox[
            RowBox[{"x", "[", "1", "]"}], "s2"]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"k", "=", 
                 RowBox[{"j", "+", "1"}]}], "s1"], 
               RowBox[{"x", "[", "k", "]"}]}], ")"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], 
                 RowBox[{"j", "+", "1"}]], 
                RowBox[{"x", "[", "m", "]"}]}], ")"}], 
              RowBox[{"s2", "-", "j"}]]}], "+", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"k", "=", "2"}], "j"], 
             RowBox[{
              RowBox[{"x", "[", "k", "]"}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"l", "=", "1"}], 
                  RowBox[{"k", "-", "1"}]], 
                 RowBox[{"x", "[", "l", "]"}]}], ")"}], 
               RowBox[{"j", "-", "k", "+", "1"}]], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"m", "=", "1"}], "k"], 
                 RowBox[{"x", "[", "m", "]"}]}], ")"}], 
               RowBox[{"s2", "-", "j"}]]}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "2", ",", "s2"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], "/.", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "s1"], 
         RowBox[{"x", "[", "i", "]"}]}], "\[Rule]", "1"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpectedMoveAllMin", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"FirstMoversInflowAllMin", "[", 
         RowBox[{"n", ",", "y"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SecondMoversInflowAllMin", "[", 
         RowBox[{"n", ",", "x"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"y", "[", "j", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.6929630874974546`*^9}, {3.692963191215775*^9, 3.692963217125394*^9}, 
   3.692963447174942*^9, {3.6929635650700083`*^9, 3.6929635658683968`*^9}, {
   3.692964629408436*^9, 3.69296463194263*^9}, 3.692964675053371*^9, {
   3.692964845947241*^9, 3.6929648533747807`*^9}, {3.692964940240322*^9, 
   3.692964940646299*^9}, {3.692964984011602*^9, 3.692964991546287*^9}, {
   3.692965561836548*^9, 3.692965562275013*^9}, {3.692965665231518*^9, 
   3.692965669581805*^9}, 3.692965701466701*^9, {3.692971184864274*^9, 
   3.692971262576693*^9}, {3.692971335290848*^9, 3.69297134302752*^9}, {
   3.692971558602255*^9, 3.692971567803259*^9}, {3.692971837110524*^9, 
   3.6929718392129307`*^9}, 3.69297254650884*^9, {3.694021794782971*^9, 
   3.694021824245927*^9}, 3.694021878595821*^9},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stick if tie", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963621679696*^9, 3.692963650291464*^9}, 
   3.692963795604203*^9, {3.692963934121407*^9, 3.692963935759516*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StickToCurrentThenMinIfTie", "[", 
     RowBox[{
     "q_", ",", "i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pim", "=", 
         RowBox[{"payoffs", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "m"}], "]"}], "]"}]}], ",", 
        RowBox[{"pjk", "=", 
         RowBox[{"payoffs", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "k"}], "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Boole", "[", 
       RowBox[{
        RowBox[{"pim", ">", "pjk"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pim", "\[Equal]", "pjk"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"q", "\[Equal]", "i"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"i", "<", "j"}], "&&", 
              RowBox[{"j", "\[NotEqual]", "q"}]}], ")"}]}], ")"}]}], ")"}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MinIfTie", "[", 
      RowBox[{
      "q_", ",", "i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pim", "=", 
          RowBox[{"payoffs", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "m"}], "]"}], "]"}]}], ",", 
         RowBox[{"pjk", "=", 
          RowBox[{"payoffs", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "k"}], "]"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Boole", "[", 
        RowBox[{
         RowBox[{"pim", ">", "pjk"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pim", "\[Equal]", "pjk"}], "&&", 
           RowBox[{"i", "\[LessEqual]", "j"}]}], ")"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FirstMoversInflowAllStick", "[", 
     RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"payoffsX", "=", 
         RowBox[{"PayoffsX", "[", "n", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"q", "=", "1"}], "s1"], 
           RowBox[{
            RowBox[{"x", "[", "q", "]"}], 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"m", "=", "1"}], "s2"], 
             RowBox[{
              RowBox[{"y", "[", "m", "]"}], 
              RowBox[{
               UnderoverscriptBox["\[Product]", 
                RowBox[{"j", "=", "1"}], "s1"], 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"j", "\[Equal]", "i"}], ",", "1", ",", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "s2"], 
                  RowBox[{
                   RowBox[{"y", "[", "k", "]"}], 
                   RowBox[{"StickToCurrentThenMinIfTie", "[", 
                    RowBox[{
                    "q", ",", "i", ",", "m", ",", "j", ",", "k", ",", 
                    "payoffsX"}], "]"}]}]}]}], "]"}]}]}]}]}]}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "/.", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"j", "=", "1"}], "s2"], 
         RowBox[{"y", "[", "j", "]"}]}], "\[Rule]", "1"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SecondMoversInflowAllStick", "[", 
     RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"payoffsY", "=", 
         RowBox[{"PayoffsY", "[", "n", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"q", "=", "1"}], "s2"], 
           RowBox[{
            RowBox[{"y", "[", "q", "]"}], 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"m", "=", "1"}], "s1"], 
             RowBox[{
              RowBox[{"x", "[", "m", "]"}], 
              RowBox[{
               UnderoverscriptBox["\[Product]", 
                RowBox[{"j", "=", "1"}], "s2"], 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"j", "\[Equal]", "i"}], ",", "1", ",", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "s1"], 
                  RowBox[{
                   RowBox[{"x", "[", "k", "]"}], 
                   RowBox[{"StickToCurrentThenMinIfTie", "[", 
                    RowBox[{
                    "q", ",", "i", ",", "m", ",", "j", ",", "k", ",", 
                    "payoffsY"}], "]"}]}]}]}], "]"}]}]}]}]}]}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], "/.", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"j", "=", "1"}], "s1"], 
         RowBox[{"x", "[", "j", "]"}]}], "\[Rule]", "1"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpectedMoveAllStick", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"FirstMoversInflowAllStick", "[", 
         RowBox[{"n", ",", "x", ",", "y"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SecondMoversInflowAllStick", "[", 
         RowBox[{"n", ",", "x", ",", "y"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"y", "[", "j", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.6929630874974546`*^9}, {3.692963191215775*^9, 3.692963217125394*^9}, 
   3.692963447174942*^9, {3.6929635650700083`*^9, 3.6929635658683968`*^9}, 
   3.692963942883462*^9, {3.6929713841475563`*^9, 3.692971421406011*^9}, {
   3.692971514378076*^9, 3.692971526280409*^9}, {3.69297164035741*^9, 
   3.692971730470628*^9}, {3.69297176429277*^9, 3.692971775574144*^9}, {
   3.692971815298686*^9, 3.692971842475584*^9}, {3.692973975693057*^9, 
   3.6929740028806667`*^9}, 3.6929741364527693`*^9},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Uniform if tie", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963621679696*^9, 3.692963650291464*^9}, 
   3.692963795604203*^9, {3.692963934121407*^9, 3.692963953308807*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FirstMoversInflowAllUnif", "[", 
     RowBox[{"n_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "i"}], "s2"], 
             RowBox[{"y", "[", "j", "]"}]}], ")"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"j", "=", "1"}], "i"], 
              RowBox[{"y", "[", "j", "]"}]}], ")"}], 
            RowBox[{"s1", "-", "i"}]]}], "+", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "2"}], 
            RowBox[{"i", "-", "1"}]], 
           RowBox[{
            RowBox[{"y", "[", "k", "]"}], 
            RowBox[{"(", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"j", "=", "1"}], 
               RowBox[{"k", "-", "1"}]], 
              RowBox[{"y", "[", "j", "]"}]}], ")"}], 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "0"}], 
              RowBox[{"s1", "-", "k", "-", "1"}]], 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"Binomial", "[", 
                 RowBox[{
                  RowBox[{"s1", "-", "k", "-", "1"}], ",", "j"}], "]"}], "*", 
                
                SuperscriptBox[
                 RowBox[{"y", "[", "k", "]"}], "j"]}], 
               RowBox[{"j", "+", "1"}]], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"l", "=", "1"}], 
                  RowBox[{"k", "-", "1"}]], 
                 RowBox[{"y", "[", "l", "]"}]}], ")"}], 
               RowBox[{"s1", "-", "k", "-", "1", "-", "j"}]]}]}]}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "/.", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"j", "=", "1"}], "s2"], 
         RowBox[{"y", "[", "j", "]"}]}], "\[Rule]", "1"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SecondMoversInflowAllUnif", "[", 
     RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "X"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "s2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"x", "[", "1", "]"}], "s2"], "s2"]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"X", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"k", "=", "2"}], "i"], 
              RowBox[{
               RowBox[{"x", "[", "k", "]"}], 
               RowBox[{"(", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"j", "=", "1"}], 
                  RowBox[{"k", "-", "1"}]], 
                 RowBox[{"x", "[", "j", "]"}]}], ")"}], 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"j", "=", "0"}], 
                 RowBox[{"s2", "-", "k"}]], 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"s2", "-", "k"}], ",", "j"}], "]"}], "*", 
                   SuperscriptBox[
                    RowBox[{"x", "[", "k", "]"}], "j"]}], 
                  RowBox[{"j", "+", "1"}]], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{"x", "[", "l", "]"}]}], ")"}], 
                  RowBox[{"s2", "-", "k", "-", "j"}]]}]}]}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"j", "=", 
                RowBox[{"i", "+", "1"}]}], "s1"], 
              RowBox[{"x", "[", "j", "]"}]}], ")"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"j", "=", "1"}], 
                RowBox[{"i", "+", "1"}]], 
               RowBox[{"x", "[", "j", "]"}]}], ")"}], 
             RowBox[{"s2", "-", "i"}]]}], "+", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], "/.", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"j", "=", "1"}], "s1"], 
          RowBox[{"x", "[", "j", "]"}]}], "\[Rule]", "1"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpectedMoveAllUnif", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"FirstMoversInflowAllUnif", "[", 
         RowBox[{"n", ",", "y"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SecondMoversInflowAllUnif", "[", 
         RowBox[{"n", ",", "x"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"y", "[", "j", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.6929630874974546`*^9}, {3.692963191215775*^9, 3.692963217125394*^9}, 
   3.692963447174942*^9, {3.6929635650700083`*^9, 3.6929635658683968`*^9}, 
   3.692963942883462*^9, {3.692971948476985*^9, 3.692971994858296*^9}, {
   3.692972049751625*^9, 3.692972084501997*^9}, {3.692975341789895*^9, 
   3.692975351060164*^9}},
 Background->GrayLevel[0.85]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test two ", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963343213125*^9, 3.692963354722578*^9}, {
  3.6929634215352087`*^9, 3.692963453979772*^9}, {3.69296361380372*^9, 
  3.692963646665205*^9}, {3.6929640285511713`*^9, 3.692964028829377*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpectedMoveTwo", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"payoffsX", "=", 
        RowBox[{"PayoffsX", "[", "n", "]"}]}], ",", 
       RowBox[{"payoffsY", "=", 
        RowBox[{"PayoffsY", "[", "n", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"j", "=", "1"}], "s1"], 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{"j", "\[NotEqual]", "i"}], "]"}], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"k", "=", "1"}], "s2"], 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"m", "=", "1"}], "s2"], 
               RowBox[{
                RowBox[{"y", "[", "k", "]"}], 
                FractionBox["1", 
                 RowBox[{"s1", "-", "1"}]], 
                RowBox[{"y", "[", "m", "]"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", "j", "]"}], 
                   RowBox[{"TieBreaker", "[", 
                    RowBox[{
                    "i", ",", "m", ",", "j", ",", "k", ",", "payoffsX"}], 
                    "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", "i", "]"}], 
                   RowBox[{"TieBreaker", "[", 
                    RowBox[{
                    "j", ",", "k", ",", "i", ",", "m", ",", "payoffsX"}], 
                    "]"}]}]}], ")"}]}]}]}]}]}], ")"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"j", "=", "1"}], "s2"], 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{"j", "\[NotEqual]", "i"}], "]"}], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"k", "=", "1"}], "s1"], 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"m", "=", "1"}], "s1"], 
               RowBox[{
                RowBox[{"x", "[", "k", "]"}], 
                FractionBox["1", 
                 RowBox[{"s2", "-", "1"}]], 
                RowBox[{"x", "[", "m", "]"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"y", "[", "j", "]"}], 
                   RowBox[{"TieBreaker", "[", 
                    RowBox[{
                    "i", ",", "m", ",", "j", ",", "k", ",", "payoffsY"}], 
                    "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"y", "[", "i", "]"}], 
                   RowBox[{"TieBreaker", "[", 
                    RowBox[{
                    "j", ",", "k", ",", "i", ",", "m", ",", "payoffsY"}], 
                    "]"}]}]}], ")"}]}]}]}]}]}], ")"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
       "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"j", "=", "1"}], "s1"], 
          RowBox[{"x", "[", "j", "]"}]}], "\[Rule]", "1"}], ",", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"j", "=", "1"}], "s2"], 
          RowBox[{"y", "[", "j", "]"}]}], "\[Rule]", "1"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.692973355198461*^9, 3.692973366651338*^9}, {
  3.692975374876264*^9, 3.692975381583684*^9}, {3.692975420701294*^9, 
  3.692975427450364*^9}},
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell["Min if tie", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963621679696*^9, 3.692963650291464*^9}, 
   3.692963795604203*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Tie", " ", "breaker", " ", "defined", " ", "in", " ", "section", " ", 
   "\"\<General functions\>\""}], " ", "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.6929630874974546`*^9}, {3.692963191215775*^9, 3.692963217125394*^9}, 
   3.692963447174942*^9, {3.6929635650700083`*^9, 3.6929635658683968`*^9}, 
   3.69296405838935*^9, {3.692972891863494*^9, 3.692972904003366*^9}, 
   3.692973221638762*^9, {3.692973271587261*^9, 3.692973283784287*^9}, {
   3.692973385832027*^9, 3.692973386799302*^9}, 3.692973950598632*^9, {
   3.692974202411601*^9, 3.692974227891403*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stick if tie", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963621679696*^9, 3.692963650291464*^9}, 
   3.692963795604203*^9, {3.692963934121407*^9, 3.692963935759516*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"For", " ", "a", " ", "general", " ", "case"}], ",", 
    RowBox[{"we", " ", "could", " ", 
     RowBox[{"use", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"StickToCurrent", "[", 
      RowBox[{"i_", ",", "m_", ",", "j_", ",", "k_", ",", "payoffs_"}], "]"}],
      ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pim", "=", 
          RowBox[{"payoffs", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "m"}], "]"}], "]"}]}], ",", 
         RowBox[{"pjk", "=", 
          RowBox[{"payoffs", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "k"}], "]"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Boole", "[", 
        RowBox[{"pim", ">", "pjk"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ExpectedMoveTwoStick", "[", 
     RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox["1", 
              RowBox[{"s1", "-", "1"}]], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", "1"}], 
               RowBox[{"i", "-", "1"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"h", "+", "1"}]}], "s2"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "s2"], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], "h"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", "i", "]"}], "+", 
                   RowBox[{"x", "[", "h", "]"}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], 
                   RowBox[{"h", "-", "1"}]], 
                  SuperscriptBox[
                   RowBox[{"y", "[", "k", "]"}], "2"]}]}]}], ")"}]}]}], "+", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"s1", "-", "1"}]], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "+", "1"}]}], "s1"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "i"}], "s2"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "i"], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], 
                    RowBox[{"i", "-", "1"}]], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", "i", "]"}], "+", 
                   RowBox[{"x", "[", "h", "]"}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], 
                   RowBox[{"i", "-", "1"}]], 
                  SuperscriptBox[
                   RowBox[{"y", "[", "k", "]"}], "2"]}]}]}], ")"}]}]}], "-", 
            RowBox[{"x", "[", "i", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox["1", 
              RowBox[{"s2", "-", "1"}]], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", "1"}], 
               RowBox[{"i", "-", "1"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"h", "+", "2"}]}], "s1"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "s1"], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], 
                    RowBox[{"h", "+", "1"}]], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"y", "[", "i", "]"}], "+", 
                   RowBox[{"y", "[", "h", "]"}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "h"], 
                  SuperscriptBox[
                   RowBox[{"x", "[", "k", "]"}], "2"]}]}]}], ")"}]}]}], "+", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"s2", "-", "1"}]], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "+", "1"}]}], "s2"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"i", "+", "1"}]}], "s1"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"i", "+", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], "i"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"y", "[", "i", "]"}], "+", 
                   RowBox[{"y", "[", "h", "]"}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "i"], 
                  SuperscriptBox[
                   RowBox[{"x", "[", "k", "]"}], "2"]}]}]}], ")"}]}]}], "-", 
            RowBox[{"y", "[", "i", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
         "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "s1"], 
           RowBox[{"x", "[", "j", "]"}]}], "\[Rule]", "1"}], ",", 
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "s2"], 
           RowBox[{"y", "[", "j", "]"}]}], "\[Rule]", "1"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.6929630874974546`*^9}, {3.692963191215775*^9, 3.692963217125394*^9}, 
   3.692963447174942*^9, {3.6929635650700083`*^9, 3.6929635658683968`*^9}, 
   3.692963942883462*^9, 3.692972946664332*^9, {3.6929730338289413`*^9, 
   3.692973068073237*^9}, {3.692973392368725*^9, 3.692973394416008*^9}, {
   3.692973516356391*^9, 3.692973539972237*^9}, {3.6929742458149443`*^9, 
   3.692974273882441*^9}, {3.692975384994193*^9, 3.692975393947578*^9}, {
   3.6929754284748173`*^9, 3.692975436866858*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Uniform if tie", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963621679696*^9, 3.692963650291464*^9}, 
   3.692963795604203*^9, {3.692963934121407*^9, 3.692963953308807*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Tie", " ", "breaker", " ", "defined", " ", "in", " ", "section", " ", 
   "\"\<General functions\>\""}], " ", "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.6929630874974546`*^9}, {3.692963191215775*^9, 3.692963217125394*^9}, 
   3.692963447174942*^9, {3.6929635650700083`*^9, 3.6929635658683968`*^9}, 
   3.692963942883462*^9, 3.6929731384319267`*^9, 3.692974154620908*^9, 
   3.692974234012753*^9},
 Background->GrayLevel[0.85]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test adjacent ", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963343213125*^9, 3.692963354722578*^9}, {
  3.6929634215352087`*^9, 3.692963453979772*^9}, {3.69296361380372*^9, 
  3.692963646665205*^9}, {3.69296404607685*^9, 3.692964047731427*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpectedMoveAdjacent", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"payoffsX", "=", 
        RowBox[{"PayoffsX", "[", "n", "]"}]}], ",", 
       RowBox[{"payoffsY", "=", 
        RowBox[{"PayoffsY", "[", "n", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "s1"}], ",", "0", ",", 
             RowBox[{
              RowBox[{"Switch", "[", 
               RowBox[{"i", ",", 
                RowBox[{"s1", "-", "1"}], ",", "1", ",", "_", ",", 
                RowBox[{"1", "/", "2"}]}], "]"}], 
              RowBox[{"x", "[", 
               RowBox[{"i", "+", "1"}], "]"}], 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"k", "=", "1"}], "s2"], 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], "s2"], 
                RowBox[{
                 RowBox[{"y", "[", "k", "]"}], 
                 RowBox[{"y", "[", "m", "]"}], 
                 RowBox[{"TieBreaker", "[", 
                  RowBox[{"i", ",", "m", ",", 
                   RowBox[{"i", "+", "1"}], ",", "k", ",", "payoffsX"}], 
                  "]"}]}]}]}]}]}], "]"}], "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", 
             RowBox[{
              RowBox[{"Switch", "[", 
               RowBox[{"i", ",", "2", ",", "1", ",", "_", ",", 
                RowBox[{"1", "/", "2"}]}], "]"}], 
              RowBox[{"x", "[", 
               RowBox[{"i", "-", "1"}], "]"}], 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"k", "=", "1"}], "s2"], 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], "s2"], 
                RowBox[{
                 RowBox[{"y", "[", "k", "]"}], 
                 RowBox[{"y", "[", "m", "]"}], 
                 RowBox[{"TieBreaker", "[", 
                  RowBox[{"i", ",", "m", ",", 
                   RowBox[{"i", "-", "1"}], ",", "k", ",", "payoffsX"}], 
                  "]"}]}]}]}]}]}], "]"}], "\[IndentingNewLine]", "-", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"k", "=", "1"}], "s2"], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"m", "=", "1"}], "s2"], 
              RowBox[{
               RowBox[{"y", "[", "k", "]"}], 
               RowBox[{"y", "[", "m", "]"}], 
               RowBox[{"(", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"i", "\[Equal]", "s1"}], ",", "0", ",", 
                   RowBox[{
                    RowBox[{"Switch", "[", 
                    RowBox[{"i", ",", "1", ",", "1", ",", "_", ",", 
                    RowBox[{"1", "/", "2"}]}], "]"}], 
                    RowBox[{"TieBreaker", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "k", ",", "i", ",", "m", 
                    ",", "payoffsX"}], "]"}]}]}], "]"}], "+", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", 
                   RowBox[{
                    RowBox[{"Switch", "[", 
                    RowBox[{"i", ",", "s1", ",", "1", ",", "_", ",", 
                    RowBox[{"1", "/", "2"}]}], "]"}], 
                    RowBox[{"TieBreaker", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "k", ",", "i", ",", "m", 
                    ",", "payoffsX"}], "]"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", ")"}]}]}]}]}]}], "\[IndentingNewLine]",
           ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "s1"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "s2"}], ",", "0", ",", 
             RowBox[{
              RowBox[{"Switch", "[", 
               RowBox[{"i", ",", 
                RowBox[{"s2", "-", "1"}], ",", "1", ",", "_", ",", 
                RowBox[{"1", "/", "2"}]}], "]"}], 
              RowBox[{"y", "[", 
               RowBox[{"i", "+", "1"}], "]"}], 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"k", "=", "1"}], "s1"], 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], "s1"], 
                RowBox[{
                 RowBox[{"x", "[", "k", "]"}], 
                 RowBox[{"x", "[", "m", "]"}], 
                 RowBox[{"TieBreaker", "[", 
                  RowBox[{"i", ",", "m", ",", 
                   RowBox[{"i", "+", "1"}], ",", "k", ",", "payoffsY"}], 
                  "]"}]}]}]}]}]}], "]"}], "+", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", 
             RowBox[{
              RowBox[{"Switch", "[", 
               RowBox[{"i", ",", "2", ",", "1", ",", "_", ",", 
                RowBox[{"1", "/", "2"}]}], "]"}], 
              RowBox[{"y", "[", 
               RowBox[{"i", "-", "1"}], "]"}], 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"k", "=", "1"}], "s1"], 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], "s1"], 
                RowBox[{
                 RowBox[{"x", "[", "k", "]"}], 
                 RowBox[{"x", "[", "m", "]"}], 
                 RowBox[{"TieBreaker", "[", 
                  RowBox[{"i", ",", "m", ",", 
                   RowBox[{"i", "-", "1"}], ",", "k", ",", "payoffsY"}], 
                  "]"}]}]}]}]}]}], "]"}], "\[IndentingNewLine]", "-", 
           RowBox[{
            RowBox[{"y", "[", "i", "]"}], 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"k", "=", "1"}], "s1"], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"m", "=", "1"}], "s1"], 
              RowBox[{
               RowBox[{"x", "[", "k", "]"}], 
               RowBox[{"x", "[", "m", "]"}], 
               RowBox[{"(", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"i", "\[Equal]", "s2"}], ",", "0", ",", 
                   RowBox[{
                    RowBox[{"Switch", "[", 
                    RowBox[{"i", ",", "1", ",", "1", ",", "_", ",", 
                    RowBox[{"1", "/", "2"}]}], "]"}], 
                    RowBox[{"TieBreaker", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "k", ",", "i", ",", "m", 
                    ",", "payoffsY"}], "]"}]}]}], "]"}], "+", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", 
                   RowBox[{
                    RowBox[{"Switch", "[", 
                    RowBox[{"i", ",", "s2", ",", "1", ",", "_", ",", 
                    RowBox[{"1", "/", "2"}]}], "]"}], 
                    RowBox[{"TieBreaker", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "k", ",", "i", ",", "m", 
                    ",", "payoffsY"}], "]"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", ")"}]}]}]}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "s2"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"j", "=", "1"}], "s1"], 
          RowBox[{"x", "[", "j", "]"}]}], "\[Rule]", "1"}], ",", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"j", "=", "1"}], "s2"], 
          RowBox[{"y", "[", "j", "]"}]}], "\[Rule]", "1"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6929742864038067`*^9, 3.6929743046410427`*^9}, {
  3.69297539609727*^9, 3.692975449760418*^9}},
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell["Min if tie", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963621679696*^9, 3.692963650291464*^9}, 
   3.692963795604203*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Tie", " ", "breaker", " ", "defined", " ", "in", " ", "section", " ", 
   "\"\<General functions\>\""}], " ", "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.6929630874974546`*^9}, {3.692963191215775*^9, 3.692963217125394*^9}, 
   3.692963447174942*^9, {3.6929635650700083`*^9, 3.6929635658683968`*^9}, 
   3.692964068038495*^9, 3.6929736410221148`*^9, {3.692973745228753*^9, 
   3.6929737474675217`*^9}, {3.6929738312379436`*^9, 
   3.6929738401589622`*^9}, {3.692974298532917*^9, 3.692974319863122*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stick if tie", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963621679696*^9, 3.692963650291464*^9}, 
   3.692963795604203*^9, {3.692963934121407*^9, 3.692963935759516*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Tie", " ", "breaker", " ", "defined", " ", "in", " ", "section", " ", 
   "\"\<General functions\>\""}], " ", "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.6929630874974546`*^9}, {3.692963191215775*^9, 3.692963217125394*^9}, 
   3.692963447174942*^9, {3.6929635650700083`*^9, 3.6929635658683968`*^9}, 
   3.692963942883462*^9, {3.692973711838814*^9, 3.69297372635133*^9}, 
   3.692974332136294*^9, {3.692974411967889*^9, 3.692974412967828*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Uniform if tie", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692963621679696*^9, 3.692963650291464*^9}, 
   3.692963795604203*^9, {3.692963934121407*^9, 3.692963953308807*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Tie", " ", "breaker", " ", "defined", " ", "in", " ", "section", " ", 
   "\"\<General functions\>\""}], " ", "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.6929630874974546`*^9}, {3.692963191215775*^9, 3.692963217125394*^9}, 
   3.692963447174942*^9, {3.6929635650700083`*^9, 3.6929635658683968`*^9}, 
   3.692963942883462*^9, 3.6929743258585653`*^9},
 Background->GrayLevel[0.85]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Jacobians", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.69296369103893*^9, {3.6929637216735687`*^9, 3.692963735591319*^9}, 
   3.692964078100669*^9, {3.6929746259898977`*^9, 3.69297462997047*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"JacobianOfExpectedMove", "[", "EM_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{"Length", "[", "EM", "]"}], "-", "2"}]}], ",", "s1", ",", 
        "s2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ";", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"EM", ",", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"x", "[", "i", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"y", "[", "j", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}], "]"}], "}"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProjectedJacobian", "[", "EM_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Length", "[", "EM", "]"}], "-", "2"}]}], ",", "s1", ",", 
       "s2", ",", "\[CapitalPhi]1", ",", "\[CapitalPhi]2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s1", "=", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ";", 
      RowBox[{"s2", "=", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalPhi]1", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
        RowBox[{
         FractionBox["1", "s1"], 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalPhi]2", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
        RowBox[{
         FractionBox["1", "s2"], 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[CapitalPhi]1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[CapitalPhi]2"}], "}"}]}], "}"}], "]"}], ".", 
       RowBox[{"JacobianOfExpectedMove", "[", "EM", "]"}], ".", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[CapitalPhi]1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[CapitalPhi]2"}], "}"}]}], "}"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.69296308749763*^9}, {3.692963219741576*^9, 3.6929632223092957`*^9}, {
   3.692964682290263*^9, 3.692964683447137*^9}, 3.6929654379599857`*^9, 
   3.692965474270513*^9, {3.6930306479026747`*^9, 3.693030679323847*^9}, {
   3.693030798181374*^9, 3.693030879070979*^9}, {3.693030931788656*^9, 
   3.693030954603158*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exact rest points (Gr\[ODoubleDot]bner bases)", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.69296369103893*^9, {3.6929637216735687`*^9, 3.692963735591319*^9}, 
   3.692964078100669*^9, {3.6929746259898977`*^9, 3.69297462997047*^9}, {
   3.693034961076106*^9, 3.693034985806531*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExactRestPoints", "[", 
     RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
      RowBox[{"verbosity_:", "5"}], ",", 
      RowBox[{"prec_:", "precision"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "EM", 
        ",", "vars", ",", "basis", ",", "sol"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EM", "=", 
        RowBox[{"ExpectedMove", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"verbosity", "\[GreaterEqual]", "5"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Expected Move: \\n\>\"", ",", " ", 
           RowBox[{"MatrixForm", "@", "EM"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"tieBreakingRule", "==", "\"\<stick\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "We", " ", "have", " ", "to", " ", "remove", " ", "the", " ", 
           "vertex"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"IMPORTANT\",
FontVariations->{\"Underline\"->True}]\): To get a polynomial system with a \
finite solution set we have to impose the additional restriction x[1]\
\[NotEqual]1.\\nThis is done by adding the polynomial \
(x[1]-1)*z\[Equal]1.\\nThus, even though x[1]=y[1]=1 is indeed a rest point, \
it will not appear below.\>\"", "]"}], ";", "  ", "\[IndentingNewLine]", 
          RowBox[{"vars", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"y", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", "z", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"basis", "=", 
           RowBox[{"GroebnerBasis", "[", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"EM", "\[Equal]", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"Length", "[", "EM", "]"}]}], "]"}]}], "}"}], ",", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "-", "1"}], ")"}], "*", 
                  "z"}], "\[Equal]", "1"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "\[Equal]", 
                  "1"}], ",", 
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"y", "[", "j", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "s2"}], "}"}]}], "]"}], "\[Equal]", 
                  "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             "vars"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"vars", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"y", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"basis", "=", 
           RowBox[{"GroebnerBasis", "[", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"EM", "\[Equal]", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"Length", "[", "EM", "]"}]}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "\[Equal]", 
                  "1"}], ",", 
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"y", "[", "j", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "s2"}], "}"}]}], "]"}], "\[Equal]", 
                  "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             "vars"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"verbosity", "\[GreaterEqual]", "4"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Gr\[ODoubleDot]bner basis: \\n\>\"", ",", " ", 
           RowBox[{"MatrixForm", "@", "basis"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Variables in Gr\[ODoubleDot]bner basis: \\n\>\"", ",", 
            RowBox[{"Map", "[", 
             RowBox[{"Variables", ",", "basis"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
          "Print", "[", "\"\<Max degrees in Gr\[ODoubleDot]bner basis:\>\"", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"MatrixForm", "@", 
            RowBox[{"Prepend", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Exponent", "[", 
                  RowBox[{"#", ",", "vars"}], "]"}], "&"}], ",", "basis"}], 
               "]"}], ",", "vars"}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"sol", "=", 
        RowBox[{"{", 
         RowBox[{"ToRules", "[", "\[IndentingNewLine]", 
          RowBox[{"Reduce", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"basis", "\[Equal]", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"Length", "[", "basis", "]"}]}], "]"}]}], "}"}], 
              ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"0", "\[LessEqual]", 
                 RowBox[{"x", "[", "i", "]"}], "\[LessEqual]", "1"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"0", "\[LessEqual]", 
                 RowBox[{"y", "[", "j", "]"}], "\[LessEqual]", "1"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}], "]"}], ",", 
            "Reals", ",", 
            RowBox[{"Backsubstitution", "\[Rule]", "True"}]}], "]"}], 
          "\[IndentingNewLine]", "]"}], "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Numerical approximation to exact solution computed using the \
Gr\[ODoubleDot]bner basis: \\n\>\"", ",", " ", 
            RowBox[{"(", 
             RowBox[{"sol", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                    ")"}], ":>", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x", "[", "i", "]"}], "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                ",", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                    ")"}], ":>", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y", "[", "i", "]"}], "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                ",", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"z", "\[Rule]", "num_"}], ")"}], ":>", 
                  RowBox[{"(", 
                   RowBox[{"z", "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}]}], 
               "}"}]}], ")"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "sol"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NExactRestPoints", "[", 
   RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
    RowBox[{"verbosity_:", "3"}], ",", 
    RowBox[{"prec_:", "precision"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "sol", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sol", "=", 
      RowBox[{"ExactRestPoints", "[", 
       RowBox[{
       "testSetRule", ",", "tieBreakingRule", ",", "n", ",", "verbosity", ",",
         "prec"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"verbosity", "\[GreaterEqual]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Exact solution of Gr\[ODoubleDot]bner basis in the simplex: \\n\
\>\"", ",", " ", "sol"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{"sol", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", "i_Integer", "]"}], "\[Rule]", "num_"}], ")"}],
            ":>", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], "->", 
             RowBox[{"N", "[", 
              RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "[", "i_Integer", "]"}], "\[Rule]", "num_"}], ")"}],
            ":>", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "[", "i", "]"}], "->", 
             RowBox[{"N", "[", 
              RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "\[Rule]", "num_"}], ")"}], ":>", 
           RowBox[{"(", 
            RowBox[{"z", "->", 
             RowBox[{"N", "[", 
              RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}]}], 
        "}"}]}], ")"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.69296308749763*^9}, {3.692963219741576*^9, 3.6929632223092957`*^9}, {
   3.692964682290263*^9, 3.692964683447137*^9}, 3.6929654379599857`*^9, 
   3.692965474270513*^9, {3.6930306479026747`*^9, 3.693030679323847*^9}, {
   3.693030798181374*^9, 3.693030879070979*^9}, {3.693030931788656*^9, 
   3.693030954603158*^9}, {3.693034999107688*^9, 3.693035077418137*^9}, {
   3.693035410896613*^9, 3.69303549234416*^9}, {3.693035541228005*^9, 
   3.6930356094477654`*^9}, {3.6930356624252367`*^9, 3.693035791113544*^9}, {
   3.693035839905964*^9, 3.693036109614914*^9}, {3.693036146246714*^9, 
   3.6930361463916597`*^9}, {3.693036194879775*^9, 3.6930361950595427`*^9}, 
   3.693036242693877*^9, 3.693036280662298*^9, {3.693036330084895*^9, 
   3.693036357623316*^9}, {3.693036408700644*^9, 3.693036434495562*^9}, {
   3.693043264799168*^9, 3.693043283381342*^9}, {3.69304341287125*^9, 
   3.6930436838174067`*^9}, {3.693043715050647*^9, 3.693043776744258*^9}, {
   3.693043822498876*^9, 3.693043849025916*^9}, {3.693043917125638*^9, 
   3.69304391757306*^9}, {3.693044030130754*^9, 3.693044030343109*^9}, {
   3.693044079437996*^9, 3.693044093286892*^9}, {3.693044256538232*^9, 
   3.6930442783762493`*^9}, {3.693044334030428*^9, 3.6930443481037273`*^9}, {
   3.693044383744624*^9, 3.693044463439193*^9}, {3.693044522975108*^9, 
   3.6930445253600473`*^9}, {3.693044596764471*^9, 3.693044612603849*^9}, {
   3.6930446590015917`*^9, 3.693044674332452*^9}, {3.693044814679574*^9, 
   3.69304482339705*^9}, {3.693044853998912*^9, 3.693044854143462*^9}, 
   3.693134475591817*^9, 3.693134523348681*^9, 3.693134598623486*^9, {
   3.69315957327136*^9, 3.693159598401268*^9}, {3.693933994694413*^9, 
   3.6939339979696627`*^9}, {3.693934112492138*^9, 3.693934114915821*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Approximate rest points (floating-point and rational approximations)\
\>", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.69296369103893*^9, {3.6929637216735687`*^9, 3.692963735591319*^9}, 
   3.692964078100669*^9, {3.6929746259898977`*^9, 3.69297462997047*^9}, {
   3.693034961076106*^9, 3.693034985806531*^9}, {3.693048092395323*^9, 
   3.693048098029875*^9}, {3.693122858808473*^9, 3.693122871430587*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClipTo01", "[", "v_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"v", "<", "0"}], ",", "0", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"v", ">", "1"}], ",", "1", ",", "v"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"ClipTo01", ",", "Listable"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProjectOnSimplex", "[", "v_", "]"}], ":=", 
    RowBox[{"Normalize", "[", 
     RowBox[{
      RowBox[{"ClipTo01", "[", "v", "]"}], ",", "Total"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FloatingPointApproximateRestPoint", "[", 
     RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
      RowBox[{"step_:", 
       RowBox[{"2.", "^", 
        RowBox[{"-", "4"}]}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "EM", 
        ",", "\[CapitalPhi]1", ",", "\[CapitalPhi]2", ",", "P", ",", "vars", 
        ",", "CompiledNextIteration", ",", "Compiledfpoint"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EM", "=", 
        RowBox[{"ExpectedMove", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\[CapitalPhi]1", "=", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
         RowBox[{
          FractionBox["1", "s1"], 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalPhi]2", "=", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
         RowBox[{
          FractionBox["1", "s2"], 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[CapitalPhi]1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[CapitalPhi]2"}], "}"}]}], "}"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"vars", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"y", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"CompiledNextIteration", "=", 
        RowBox[{"Compile", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", "vars", "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"ProjectOnSimplex", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "]"}], ",", 
              RowBox[{"ProjectOnSimplex", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], "]"}]}], "]"}], 
            "+", 
            RowBox[{"step", "*", 
             RowBox[{"P", ".", "EM"}]}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Compiledfpoint", "=", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{"FixedPoint", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"CompiledNextIteration", "@@", "#"}], ")"}], "&"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"1.", "/", "s1"}], ",", "s1"}], "]"}], ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"1.", "/", "s2"}], ",", "s2"}], "]"}]}], "]"}], ",", 
            RowBox[{"10", "^", "4"}], ",", 
            RowBox[{"SameTest", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", 
                 RowBox[{"#1", "-", "#2"}], "]"}], "<", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "20"}]}]}], "&"}], ")"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Thread", "[", 
        RowBox[{"vars", "\[Rule]", "Compiledfpoint"}], "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RationalApproximateRestPoint", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"step_:", "1"}], ",", 
     RowBox[{"minIterations_:", "1"}], ",", 
     RowBox[{"maxIterations_:", "200"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "EM", 
       ",", "fixedPoint", ",", "iterations", ",", 
       RowBox[{"oldFixedPointStr", "=", "\"\<old\>\""}], ",", 
       RowBox[{"newFixedPointStr", "=", "\"\<new\>\""}], ",", "vars", ",", 
       RowBox[{"scientificDigits", "=", "3"}], ",", 
       RowBox[{"decimalPlaces", "=", "6"}], ",", "headings", ",", "Nice"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EM", "=", 
       RowBox[{"ExpectedMove", "[", 
        RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fixedPoint", "=", 
       RowBox[{"vars", "/.", 
        RowBox[{"FloatingPointApproximateRestPoint", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Nice", "[", "a_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "<", 
          RowBox[{"10", "^", 
           RowBox[{"-", "4"}]}]}], ",", 
         RowBox[{"ScientificForm", "[", 
          RowBox[{
           RowBox[{"N", "[", "a", "]"}], ",", "scientificDigits"}], "]"}], 
         ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", "a", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"decimalPlaces", "+", "4"}], ",", "decimalPlaces"}], 
            "}"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SetAttributes", "[", 
       RowBox[{"Nice", ",", "Listable"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"headings", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<x[\>\"", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "Italic", ",", "14"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"i", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "14"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<]\>\"", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "14"}], "]"}]}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<y[\>\"", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "Italic", ",", "14"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"i", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "14"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<]\>\"", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "14"}], "]"}]}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}], ",", 
            "None"}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<\\nFloating-point approximation to rest point:\\n\\t\>\"", ",", 
           RowBox[{"TableForm", "[", 
            RowBox[{
             RowBox[{"Nice", "[", "fixedPoint", "]"}], ",", 
             RowBox[{"TableHeadings", "\[Rule]", "headings"}], ",", 
             RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", 
             RowBox[{"TableSpacing", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"3", ",", "Automatic"}], "}"}]}]}], "]"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"iterations", "=", "1"}], ",", 
        RowBox[{
         RowBox[{"iterations", "\[LessEqual]", "minIterations"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"iterations", "\[LessEqual]", "maxIterations"}], "&&", 
           RowBox[{"(", 
            RowBox[{"oldFixedPointStr", "\[NotEqual]", "newFixedPointStr"}], 
            ")"}]}], ")"}]}], ",", 
        RowBox[{"iterations", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "The", " ", "following", " ", "three", " ", "lines", " ", "of", " ",
            "code", " ", "should", " ", "not", " ", "be", " ", "necessary", 
           " ", "in", " ", "principle"}], ",", " ", 
          RowBox[{
          "but", " ", "they", " ", "are", " ", "vital", " ", "to", " ", 
           "speed", " ", "up", " ", "the", " ", "execution"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fixedPoint", "=", 
          RowBox[{"N", "[", 
           RowBox[{"fixedPoint", ",", "16"}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Here", " ", "we", " ", "are", " ", "taking", " ", "the", " ", 
            "16", " ", "most", " ", "significant", " ", "digits", " ", "of", 
            " ", "fixedPoint"}], ",", " ", 
           RowBox[{"which", " ", "is", " ", "a", " ", "rational", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "except", " ", "at", " ", "the", " ", "very", " ", "first", 
                " ", "iteration"}], ",", " ", 
               RowBox[{
               "where", " ", "it", " ", "is", " ", "a", " ", "machine", " ", 
                "number"}]}], ")"}], "."}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "fixedPoint", " ", "now", " ", "is", " ", "NOT", " ", "an", " ", 
              "IEEE", " ", "754", " ", "floating"}], "-", 
             RowBox[{"point", " ", "number", " ", 
              RowBox[{"(", 
               RowBox[{
               "except", " ", "at", " ", "the", " ", "very", " ", "first", 
                " ", "iteration"}], ")"}]}]}], ";", " ", 
            RowBox[{
            "it", " ", "is", " ", "a", " ", "number", " ", "with", " ", "16", 
             " ", "digits", " ", "of", " ", "precision"}]}], ",", " ", 
           RowBox[{
           "and", " ", "will", " ", "be", " ", "rationalized", " ", "at", " ",
             "the", " ", "next", " ", "line", " ", "of", " ", "code"}]}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{"fixedPoint", "=", 
          RowBox[{"Rationalize", "[", 
           RowBox[{"fixedPoint", ",", "0"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fixedPoint", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Normalize", "[", 
             RowBox[{
              RowBox[{"fixedPoint", "[", 
               RowBox[{"[", 
                RowBox[{";;", "s1"}], "]"}], "]"}], ",", "Total"}], "]"}], 
            ",", 
            RowBox[{"Normalize", "[", 
             RowBox[{
              RowBox[{"fixedPoint", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}], ",", 
              "Total"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"oldFixedPointStr", "=", 
          RowBox[{"ToString", "[", 
           RowBox[{"Nice", "[", "fixedPoint", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fixedPoint", "=", 
          RowBox[{"fixedPoint", " ", "+", " ", 
           RowBox[{"(", 
            RowBox[{"EM", "/.", 
             RowBox[{"(", 
              RowBox[{"Thread", "[", 
               RowBox[{"vars", "\[Rule]", "fixedPoint"}], "]"}], ")"}]}], 
            ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"newFixedPointStr", "=", 
          RowBox[{"ToString", "[", 
           RowBox[{"Nice", "[", "fixedPoint", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<\\n\>\"", ",", "iterations", " ", ",", 
              "\"\< iterations with rational arithmetic conducted:\\n\\t\>\"",
               ",", 
              RowBox[{"TableForm", "[", 
               RowBox[{
                RowBox[{"Nice", "[", "fixedPoint", "]"}], ",", 
                RowBox[{"TableHeadings", "\[Rule]", "headings"}], ",", 
                RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", 
                RowBox[{"TableSpacing", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "Automatic"}], "}"}]}]}], "]"}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "When", " ", "we", " ", "go", " ", "out", " ", "of", " ", "the", " ", 
         "loop", " ", "For", " ", "above", " ", "because", " ", 
         RowBox[{"(", 
          RowBox[{
          "oldFixedPointStr", " ", "\[Equal]", " ", "newFixedPointStr"}], 
          ")"}]}], ",", " ", 
        RowBox[{
         RowBox[{
         "we", " ", "know", " ", "that", " ", "we", " ", "have", " ", "found",
           " ", "a", " ", "rational", " ", "point", " ", "x", " ", "such", 
          " ", "that", " ", 
          RowBox[{"Nice", "[", "x", "]"}]}], " ", "==", " ", 
         RowBox[{"Nice", "[", 
          RowBox[{"x", " ", "+", " ", 
           RowBox[{"(", 
            RowBox[{"EM", "/.", 
             RowBox[{"(", 
              RowBox[{"Thread", "[", 
               RowBox[{"vars", "\[Rule]", "x"}], "]"}], ")"}]}], ")"}]}], 
          "]"}]}], ",", " ", 
        RowBox[{
        "with", " ", "all", " ", "the", " ", "operations", " ", "conducted", 
         " ", "using", " ", 
         RowBox[{"(", "exact", ")"}], " ", "rational", " ", "arithmetic"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Thread", "[", 
       RowBox[{"vars", "\[Rule]", "fixedPoint"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.69296308749763*^9}, {3.692963219741576*^9, 3.6929632223092957`*^9}, {
   3.692964682290263*^9, 3.692964683447137*^9}, 3.6929654379599857`*^9, 
   3.692965474270513*^9, {3.6930306479026747`*^9, 3.693030679323847*^9}, {
   3.693030798181374*^9, 3.693030879070979*^9}, {3.693030931788656*^9, 
   3.693030954603158*^9}, {3.693034999107688*^9, 3.693035077418137*^9}, {
   3.693035410896613*^9, 3.69303549234416*^9}, {3.693035541228005*^9, 
   3.6930356094477654`*^9}, {3.6930356624252367`*^9, 3.693035791113544*^9}, {
   3.693035839905964*^9, 3.693036109614914*^9}, {3.693036146246714*^9, 
   3.6930361463916597`*^9}, {3.693036194879775*^9, 3.6930361950595427`*^9}, 
   3.693036242693877*^9, 3.693036280662298*^9, {3.693036330084895*^9, 
   3.693036357623316*^9}, {3.693036408700644*^9, 3.693036434495562*^9}, {
   3.693043264799168*^9, 3.693043283381342*^9}, {3.69304341287125*^9, 
   3.6930436838174067`*^9}, {3.693043715050647*^9, 3.693043776744258*^9}, {
   3.693043822498876*^9, 3.693043849025916*^9}, {3.693043917125638*^9, 
   3.69304391757306*^9}, {3.693044030130754*^9, 3.693044030343109*^9}, {
   3.693044079437996*^9, 3.693044093286892*^9}, {3.693044256538232*^9, 
   3.6930442783762493`*^9}, {3.693044334030428*^9, 3.6930443481037273`*^9}, {
   3.693044383744624*^9, 3.693044463439193*^9}, {3.693044522975108*^9, 
   3.6930445253600473`*^9}, {3.693044596764471*^9, 3.693044612603849*^9}, {
   3.6930446590015917`*^9, 3.693044674332452*^9}, {3.693044814679574*^9, 
   3.69304482339705*^9}, {3.693044853998912*^9, 3.693044854143462*^9}, {
   3.6930481835330553`*^9, 3.693048480725987*^9}, {3.693048549151033*^9, 
   3.693048584080016*^9}, {3.6930486994860563`*^9, 3.6930487048623857`*^9}, 
   3.693048758030361*^9, {3.693048982809445*^9, 3.693049014471086*^9}, {
   3.693049058971043*^9, 3.6930490777241583`*^9}, {3.6930491080896*^9, 
   3.693049108267416*^9}, {3.6930491870988283`*^9, 3.6930492642066793`*^9}, {
   3.693049303110132*^9, 3.6930493125378933`*^9}, {3.693049424183223*^9, 
   3.693049495361576*^9}, {3.693049529575734*^9, 3.693049673012764*^9}, {
   3.693049708238514*^9, 3.6930497564094687`*^9}, {3.6930497893169823`*^9, 
   3.693049934903861*^9}, 3.6930499798706007`*^9, {3.693050009887102*^9, 
   3.69305007506955*^9}, 3.69305016346246*^9, {3.693050211567978*^9, 
   3.6930502125788603`*^9}, {3.6930503148544693`*^9, 3.693050342564679*^9}, {
   3.693050402663072*^9, 3.693050420346887*^9}, {3.693050452680172*^9, 
   3.693050499771912*^9}, {3.693050579907385*^9, 3.693050621837256*^9}, {
   3.693050691104643*^9, 3.693050827973007*^9}, {3.6930508618918343`*^9, 
   3.6930508633185062`*^9}, 3.6930510478727283`*^9, {3.693051082427108*^9, 
   3.693051085632002*^9}, {3.6930710340169477`*^9, 3.6930710389418297`*^9}, {
   3.693071166520637*^9, 3.693071177027629*^9}, {3.693071639896963*^9, 
   3.693071654065407*^9}, {3.693071689222386*^9, 3.6930717096625*^9}, {
   3.69307191679068*^9, 3.693071924000499*^9}, {3.6930721151974363`*^9, 
   3.693072139810733*^9}, {3.693072179041892*^9, 3.6930721792989473`*^9}, {
   3.693072216549736*^9, 3.693072259590742*^9}, {3.693072303220688*^9, 
   3.693072306718528*^9}, {3.693072611577721*^9, 3.693072632907782*^9}, {
   3.693072768921667*^9, 3.693072819059703*^9}, {3.693072958403688*^9, 
   3.693072966131928*^9}, {3.6930730020560293`*^9, 3.693073034251113*^9}, {
   3.693073074990279*^9, 3.693073098589579*^9}, {3.693073173356555*^9, 
   3.69307319022351*^9}, {3.693073591854301*^9, 3.693073599243868*^9}, {
   3.693074522080312*^9, 3.693074531433296*^9}, {3.693074563010098*^9, 
   3.693074565011388*^9}, {3.693074632377429*^9, 3.693074656496521*^9}, {
   3.6930747223915167`*^9, 3.693074729455771*^9}, {3.693074765848729*^9, 
   3.693074772237833*^9}, {3.6930748314266148`*^9, 3.693074835623746*^9}, {
   3.693075141173842*^9, 3.6930751920356293`*^9}, {3.693075274726447*^9, 
   3.6930752751645117`*^9}, {3.693075367752994*^9, 3.693075397013144*^9}, {
   3.693075431868629*^9, 3.693075451621839*^9}, {3.6930755163448133`*^9, 
   3.6930755258894*^9}, {3.693075631361353*^9, 3.693075632872354*^9}, {
   3.69307566764463*^9, 3.693075727103052*^9}, {3.693075762340706*^9, 
   3.6930758585040503`*^9}, {3.693076019304442*^9, 3.693076112385638*^9}, {
   3.693076146476161*^9, 3.693076210330202*^9}, {3.693076241133575*^9, 
   3.6930762590646963`*^9}, {3.693076307643962*^9, 3.693076318352318*^9}, {
   3.6930763741338263`*^9, 3.693076401538115*^9}, {3.6930764496657333`*^9, 
   3.693076453353778*^9}, {3.693076489638171*^9, 3.693076526727418*^9}, {
   3.6930765671956577`*^9, 3.693076636383827*^9}, {3.6930766693692513`*^9, 
   3.693076718002123*^9}, 3.693077051669463*^9, {3.693077087469307*^9, 
   3.6930770886823893`*^9}, {3.6930782387289886`*^9, 3.693078300364564*^9}, 
   3.693078716564457*^9, {3.693079235598392*^9, 3.693079247072733*^9}, {
   3.6930794380101223`*^9, 3.693079467990863*^9}, {3.693136319502043*^9, 
   3.6931363234150133`*^9}, {3.6931364139910517`*^9, 3.693136422482757*^9}, {
   3.6931364760342283`*^9, 3.6931364895659723`*^9}, {3.693137612361279*^9, 
   3.693137639350355*^9}, {3.693138063131918*^9, 3.693138078261816*^9}, {
   3.693138236617819*^9, 3.69313826843231*^9}, {3.693138335247323*^9, 
   3.6931383461365747`*^9}, {3.693138381338953*^9, 3.693138419050747*^9}, {
   3.693138541970661*^9, 3.6931385423167763`*^9}, {3.693138669589295*^9, 
   3.693138677665885*^9}, {3.693138875093635*^9, 3.693138985750143*^9}, {
   3.69314775298455*^9, 3.693147767314724*^9}, {3.6931478261887407`*^9, 
   3.693147826626112*^9}, {3.693147865128304*^9, 3.6931478769311333`*^9}, {
   3.6931492699806356`*^9, 3.693149292849177*^9}, {3.693149492415955*^9, 
   3.6931495075803022`*^9}, {3.693149547700653*^9, 3.69314956667762*^9}, 
   3.693149870172721*^9, {3.693150036166513*^9, 3.693150263738756*^9}, {
   3.6932069453918133`*^9, 3.6932069566155987`*^9}, {3.693206998202588*^9, 
   3.6932070158794947`*^9}, 3.693207198035336*^9, {3.6932072330008574`*^9, 
   3.6932072601728973`*^9}, {3.693207392339109*^9, 3.693207392541028*^9}, {
   3.693207575457324*^9, 3.693207619068685*^9}, {3.693207666072659*^9, 
   3.693207666274315*^9}, {3.693207727272704*^9, 3.693207731209276*^9}, {
   3.693207773554965*^9, 3.693207779589684*^9}, {3.6932078371624813`*^9, 
   3.6932078503901377`*^9}, {3.693207910610713*^9, 3.693207911060623*^9}, {
   3.693207985390582*^9, 3.693207985748513*^9}, {3.693208016707836*^9, 
   3.6932080255509253`*^9}, {3.6932080754216423`*^9, 3.693208080753087*^9}, {
   3.6932081684126987`*^9, 3.6932081687501087`*^9}, {3.693208297166788*^9, 
   3.693208338217551*^9}, {3.6932083994970827`*^9, 3.69320843799277*^9}, {
   3.693209085930689*^9, 3.693209102904922*^9}, {3.6932091393151503`*^9, 
   3.693209178427332*^9}, {3.693209212806425*^9, 3.693209247713369*^9}, {
   3.693209280339925*^9, 3.693209311592454*^9}, {3.693209371981536*^9, 
   3.693209430085087*^9}, {3.6932094713504066`*^9, 3.693209496618821*^9}, 
   3.6932119275955763`*^9, {3.693212031759049*^9, 3.693212071942574*^9}, {
   3.693212127831294*^9, 3.6932121407798357`*^9}, {3.693212174621189*^9, 
   3.693212197479657*^9}, {3.693212450264653*^9, 3.6932124594678097`*^9}, {
   3.693212498166594*^9, 3.693212510776452*^9}, 3.693212599965467*^9, 
   3.693212694409498*^9, {3.69321276407168*^9, 3.693212764573299*^9}, {
   3.6932671980200167`*^9, 3.693267204373417*^9}, {3.6932672654402847`*^9, 
   3.6932672715362597`*^9}, {3.693267390415722*^9, 3.693267395050537*^9}, {
   3.693267464026039*^9, 3.693267625509468*^9}, {3.69338734971747*^9, 
   3.693387412547888*^9}, {3.693387599520523*^9, 3.693387600389485*^9}, {
   3.693387631435237*^9, 3.693387634666725*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Eigenvalues at approximate rest points", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.69296369103893*^9, {3.6929637216735687`*^9, 3.692963735591319*^9}, 
   3.692964078100669*^9, {3.6929746259898977`*^9, 3.69297462997047*^9}, {
   3.693034961076106*^9, 3.693034985806531*^9}, {3.693048092395323*^9, 
   3.693048098029875*^9}, {3.693077380358386*^9, 3.6930773823300533`*^9}, {
   3.6930794923718157`*^9, 3.693079502571559*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EigenvaluesAtRationalApproximateRestPoint", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "projectedJacobian", ",", "fixedPointRules", ",", "eigenvalues", ",", 
       RowBox[{"scientificDigits", "=", "3"}], ",", 
       RowBox[{"decimalPlaces", "=", "4"}], ",", "niceEigenvalues", ",", 
       "Nice"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"projectedJacobian", "=", 
       RowBox[{"ProjectedJacobian", "[", 
        RowBox[{"ExpectedMove", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fixedPointRules", "=", 
       RowBox[{"RationalApproximateRestPoint", "[", 
        RowBox[{
        "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
         "verbosity"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eigenvalues", "=", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"projectedJacobian", "/.", "fixedPointRules"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Nice", "[", "a_", "]"}], ":=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", "a", "]"}], "<", 
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]]}], ",", 
            RowBox[{"ScientificForm", "[", 
             RowBox[{"a", ",", "scientificDigits"}], "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"a", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"decimalPlaces", "+", "4"}], ",", "decimalPlaces"}], 
               "}"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"niceEigenvalues", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Nice", "[", 
                RowBox[{"Re", "[", "#", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"Nice", "[", 
                 RowBox[{"Im", "[", "#", "]"}], "]"}], "*", "I"}]}], ")"}], 
             "&"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{"eigenvalues", ",", "16"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Approximate eigenvalues:\\n\>\"", ",", 
           RowBox[{"TableForm", "[", 
            RowBox[{"niceEigenvalues", ",", 
             RowBox[{"TableHeadings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<\[Lambda]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}]}], ",", "Bold", ",", 
                    "14"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"n", "+", "2"}]}], "}"}]}], "]"}], ",", "None"}], 
               "}"}]}], ",", 
             RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", 
             RowBox[{"TableSpacing", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"3", ",", "Automatic"}], "}"}]}]}], "]"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "eigenvalues"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.69296308749763*^9}, {3.692963219741576*^9, 3.6929632223092957`*^9}, {
   3.692964682290263*^9, 3.692964683447137*^9}, 3.6929654379599857`*^9, 
   3.692965474270513*^9, {3.6930306479026747`*^9, 3.693030679323847*^9}, {
   3.693030798181374*^9, 3.693030879070979*^9}, {3.693030931788656*^9, 
   3.693030954603158*^9}, {3.693034999107688*^9, 3.693035077418137*^9}, {
   3.693035410896613*^9, 3.69303549234416*^9}, {3.693035541228005*^9, 
   3.6930356094477654`*^9}, {3.6930356624252367`*^9, 3.693035791113544*^9}, {
   3.693035839905964*^9, 3.693036109614914*^9}, {3.693036146246714*^9, 
   3.6930361463916597`*^9}, {3.693036194879775*^9, 3.6930361950595427`*^9}, 
   3.693036242693877*^9, 3.693036280662298*^9, {3.693036330084895*^9, 
   3.693036357623316*^9}, {3.693036408700644*^9, 3.693036434495562*^9}, {
   3.693043264799168*^9, 3.693043283381342*^9}, {3.69304341287125*^9, 
   3.6930436838174067`*^9}, {3.693043715050647*^9, 3.693043776744258*^9}, {
   3.693043822498876*^9, 3.693043849025916*^9}, {3.693043917125638*^9, 
   3.69304391757306*^9}, {3.693044030130754*^9, 3.693044030343109*^9}, {
   3.693044079437996*^9, 3.693044093286892*^9}, {3.693044256538232*^9, 
   3.6930442783762493`*^9}, {3.693044334030428*^9, 3.6930443481037273`*^9}, {
   3.693044383744624*^9, 3.693044463439193*^9}, {3.693044522975108*^9, 
   3.6930445253600473`*^9}, {3.693044596764471*^9, 3.693044612603849*^9}, {
   3.6930446590015917`*^9, 3.693044674332452*^9}, {3.693044814679574*^9, 
   3.69304482339705*^9}, {3.693044853998912*^9, 3.693044854143462*^9}, {
   3.6930481835330553`*^9, 3.693048480725987*^9}, {3.693048549151033*^9, 
   3.693048584080016*^9}, {3.6930486994860563`*^9, 3.6930487048623857`*^9}, 
   3.693048758030361*^9, {3.693048982809445*^9, 3.693049014471086*^9}, {
   3.693049058971043*^9, 3.6930490777241583`*^9}, {3.6930491080896*^9, 
   3.693049108267416*^9}, {3.6930491870988283`*^9, 3.6930492642066793`*^9}, {
   3.693049303110132*^9, 3.6930493125378933`*^9}, {3.693049424183223*^9, 
   3.693049495361576*^9}, {3.693049529575734*^9, 3.693049673012764*^9}, {
   3.693049708238514*^9, 3.6930497564094687`*^9}, {3.6930497893169823`*^9, 
   3.693049934903861*^9}, 3.6930499798706007`*^9, {3.693050009887102*^9, 
   3.69305007506955*^9}, 3.69305016346246*^9, {3.693050211567978*^9, 
   3.6930502125788603`*^9}, {3.6930503148544693`*^9, 3.693050342564679*^9}, {
   3.693050402663072*^9, 3.693050420346887*^9}, {3.693050452680172*^9, 
   3.693050499771912*^9}, {3.693050579907385*^9, 3.693050621837256*^9}, {
   3.693050691104643*^9, 3.693050827973007*^9}, {3.6930508618918343`*^9, 
   3.6930508633185062`*^9}, 3.6930510478727283`*^9, {3.693051082427108*^9, 
   3.693051085632002*^9}, {3.6930710340169477`*^9, 3.6930710389418297`*^9}, {
   3.693071166520637*^9, 3.693071177027629*^9}, {3.693071639896963*^9, 
   3.693071654065407*^9}, {3.693071689222386*^9, 3.6930717096625*^9}, {
   3.69307191679068*^9, 3.693071924000499*^9}, {3.6930721151974363`*^9, 
   3.693072139810733*^9}, {3.693072179041892*^9, 3.6930721792989473`*^9}, {
   3.693072216549736*^9, 3.693072259590742*^9}, {3.693072303220688*^9, 
   3.693072306718528*^9}, {3.693072611577721*^9, 3.693072632907782*^9}, {
   3.693072768921667*^9, 3.693072819059703*^9}, {3.693072958403688*^9, 
   3.693072966131928*^9}, {3.6930730020560293`*^9, 3.693073034251113*^9}, {
   3.693073074990279*^9, 3.693073098589579*^9}, {3.693073173356555*^9, 
   3.69307319022351*^9}, {3.693073591854301*^9, 3.693073599243868*^9}, {
   3.693074522080312*^9, 3.693074531433296*^9}, {3.693074563010098*^9, 
   3.693074565011388*^9}, {3.693074632377429*^9, 3.693074656496521*^9}, {
   3.6930747223915167`*^9, 3.693074729455771*^9}, {3.693074765848729*^9, 
   3.693074772237833*^9}, {3.6930748314266148`*^9, 3.693074835623746*^9}, {
   3.693075141173842*^9, 3.6930751920356293`*^9}, {3.693075274726447*^9, 
   3.6930752751645117`*^9}, {3.693075367752994*^9, 3.693075397013144*^9}, {
   3.693075431868629*^9, 3.693075451621839*^9}, {3.6930755163448133`*^9, 
   3.6930755258894*^9}, {3.693075631361353*^9, 3.693075632872354*^9}, {
   3.69307566764463*^9, 3.693075727103052*^9}, {3.693075762340706*^9, 
   3.6930758585040503`*^9}, {3.693076019304442*^9, 3.693076112385638*^9}, {
   3.693076146476161*^9, 3.693076210330202*^9}, {3.693076241133575*^9, 
   3.6930762590646963`*^9}, {3.693076307643962*^9, 3.693076318352318*^9}, {
   3.6930763741338263`*^9, 3.693076401538115*^9}, {3.6930764496657333`*^9, 
   3.693076453353778*^9}, {3.693076489638171*^9, 3.693076526727418*^9}, {
   3.6930765671956577`*^9, 3.693076636383827*^9}, {3.6930766693692513`*^9, 
   3.693076718002123*^9}, 3.693077051669463*^9, {3.693077087469307*^9, 
   3.6930770886823893`*^9}, {3.693077401808311*^9, 3.6930774193324137`*^9}, {
   3.693077461690168*^9, 3.693077490457897*^9}, {3.6930775384838057`*^9, 
   3.693077579218793*^9}, {3.693077694038085*^9, 3.69307770618845*^9}, {
   3.69307774228828*^9, 3.6930777949758987`*^9}, {3.6930778321017523`*^9, 
   3.693077864321579*^9}, {3.6930779203038282`*^9, 3.693078089852343*^9}, {
   3.69307831236777*^9, 3.693078409747609*^9}, 3.69307845669662*^9, {
   3.693078590999906*^9, 3.693078615379839*^9}, 3.693078729321035*^9, {
   3.693078845455121*^9, 3.6930788511232986`*^9}, {3.693078964433717*^9, 
   3.693079007523757*^9}, {3.693079165813501*^9, 3.6930792255070133`*^9}, 
   3.6930793794001627`*^9, {3.6930794800185337`*^9, 3.693079480545126*^9}, 
   3.693119174720704*^9, 3.693119643490077*^9},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Local stability of interior rest point (perturbation theorem)\
\>", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.69296369103893*^9, {3.6929637216735687`*^9, 3.692963735591319*^9}, 
   3.692964078100669*^9, {3.6929746259898977`*^9, 3.69297462997047*^9}, {
   3.693034961076106*^9, 3.693034985806531*^9}, {3.693048092395323*^9, 
   3.693048098029875*^9}, {3.693077380358386*^9, 3.6930773823300533`*^9}, {
   3.6930794923718157`*^9, 3.693079502571559*^9}, {3.6931181747720957`*^9, 
   3.6931181811497602`*^9}, {3.6931183630090923`*^9, 3.693118364695942*^9}, {
   3.693122904584697*^9, 3.693122910064415*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LocalStabilityOfInteriorRestPoint", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"verbosity_:", "5"}], ",", 
     RowBox[{"prec_:", "precision"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "interiorRestPoint", ",", "projectedJacobian", ",", "closeRational", 
       ",", "eigensystem", ",", "eigenvalues", ",", "eigenvectors", ",", 
       "tolerance", ",", "xVector", ",", "yVector"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xVector", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"yVector", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"y", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interiorRestPoint", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"ExactRestPoints", "[", 
          RowBox[{
          "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
           "verbosity"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", "1", "]"}], "/.", "#"}], ")"}], "\[NotEqual]",
             "1"}], ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "interiorRestPoint", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"interiorRestPoint", "=", 
          RowBox[{"First", "[", "interiorRestPoint", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Numerical approximation to interior exact solution: \\n\>\"",
              ",", " ", 
             RowBox[{"(", 
              RowBox[{"interiorRestPoint", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                 ",", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i", "]"}], "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                 ",", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"z", "\[Rule]", "num_"}], ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{"z", "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}]}], 
                "}"}]}], ")"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"projectedJacobian", "=", 
          RowBox[{"ProjectedJacobian", "[", 
           RowBox[{"ExpectedMove", "[", 
            RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"closeRational", "=", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"xVector", ",", "yVector"}], "]"}], "\[Rule]", " ", 
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{
                RowBox[{"Rationalize", "[", 
                 RowBox[{
                  RowBox[{"N", "[", 
                   RowBox[{
                    RowBox[{"xVector", "/.", "interiorRestPoint"}], ",", 
                    "10"}], "]"}], ",", "0"}], "]"}], ",", "Total"}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Normalize", "[", 
               RowBox[{
                RowBox[{"Rationalize", "[", 
                 RowBox[{
                  RowBox[{"N", "[", 
                   RowBox[{
                    RowBox[{"yVector", "/.", "interiorRestPoint"}], ",", 
                    "10"}], "]"}], ",", "0"}], "]"}], ",", "Total"}], "]"}]}],
              "\[IndentingNewLine]", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "4"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Rational point close to interior exact solution: \\n\>\"", 
              ",", " ", "closeRational"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Numerical approximation to rational point close to interior \
exact solution: \\n\>\"", ",", " ", 
              RowBox[{"N", "[", "closeRational", "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"eigensystem", "=", 
          RowBox[{"Eigensystem", "[", 
           RowBox[{"projectedJacobian", "/.", "closeRational"}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"eigenvalues", "=", 
          RowBox[{"First", "[", "eigensystem", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"eigenvectors", "=", 
          RowBox[{"Last", "[", "eigensystem", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "6"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Eigenvalues at close rational point:\\n\>\"", ",", 
             "eigenvalues"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<N@ Eigenvalues at close rational point:\\n\>\"", ",", 
             RowBox[{"N", "@", "eigenvalues"}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "6"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Eigenvectors at close rational point (in rows):\\n\>\"", ",", 
             RowBox[{"MatrixForm", "@", "eigenvectors"}]}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "5"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<N@ Eigenvectors at close rational point (in rows):\\n\>\"", 
             ",", 
             RowBox[{"MatrixForm", "[", 
              RowBox[{"N", "[", "eigenvectors", "]"}], "]"}]}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "eigenvectors", "]"}], "\[NotEqual]", 
            RowBox[{"n", "+", "2"}]}], ",", 
           RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"WARNING\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"!\",
FontVariations->{\"Underline\"->True}]\) Number of eigenvectors \[NotEqual] \
Number of dimensions\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"Print", "[", "\"\<Computing tolerance... \>\"", "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"$MaxExtraPrecision", "=", "50"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"tolerance", "=", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{"eigenvectors", ",", "\[Infinity]"}], "]"}], ",", 
               "40"}], "]"}], "*", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{
                 RowBox[{"Simplify", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"projectedJacobian", "/.", "closeRational"}], 
                    ")"}], "-", 
                   RowBox[{"(", 
                    RowBox[{"projectedJacobian", "/.", "interiorRestPoint"}], 
                    ")"}]}], "]"}], ",", "\[Infinity]"}], "]"}], ",", "40"}], 
              "]"}], "*", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{
                 RowBox[{"Inverse", "[", "eigenvectors", "]"}], ",", 
                 "\[Infinity]"}], "]"}], ",", "40"}], "]"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Tolerance computed with perturbation theorem: \>\"", ",", 
             "tolerance"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "4"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Precision of tolerance: \>\"", ",", 
              RowBox[{"Precision", "[", "tolerance", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Accuracy of tolerance: \>\"", ",", 
              RowBox[{"Accuracy", "[", "tolerance", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Real Digits of tolerance: \>\"", ",", 
              RowBox[{"RealDigits", "[", "tolerance", "]"}]}], "]"}], ";"}]}],
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<The real part of the relevant eigenvalues at the interior \
rest point is no more than:\\n\>\"", ",", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"eigenvalues", "[", 
                 RowBox[{"[", 
                  RowBox[{";;", 
                   RowBox[{"-", "3"}]}], "]"}], "]"}], " ", ",", "6"}], "]"}],
               "+", " ", 
              RowBox[{"10", "*", "tolerance"}]}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "@", 
            RowBox[{"Reduce", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Or", "@@", 
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#1", "\[GreaterEqual]", "#2"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"eigenvalues", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", 
                    RowBox[{"-", "3"}]}], "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"10", "*", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"tolerance", ",", "0"}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"eigenvalues", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", 
                    RowBox[{"-", "3"}]}], "]"}], "]"}], "]"}]}], "]"}]}], 
                   "}"}]}], "]"}]}], "}"}], ",", "Reals"}], "]"}]}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             
             "\"\<Apart from the two zero eigenvalues, all eigenvalues have \
strictly negative real part\>\"", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{
            "Return", "[", 
             "\"\<The interior rest point is (locally) asymptotically \
stable\>\"", "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<There seems to be at least one eigenvalue with positive \
real part\>\"", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{
            "Return", "[", "\"\<Local stability analysis is inconclusive\>\"",
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Return", "[", "\"\<There is no interior rest point\>\"", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.69296308749763*^9}, {3.692963219741576*^9, 3.6929632223092957`*^9}, {
   3.692964682290263*^9, 3.692964683447137*^9}, 3.6929654379599857`*^9, 
   3.692965474270513*^9, {3.6930306479026747`*^9, 3.693030679323847*^9}, {
   3.693030798181374*^9, 3.693030879070979*^9}, {3.693030931788656*^9, 
   3.693030954603158*^9}, {3.693034999107688*^9, 3.693035077418137*^9}, {
   3.693035410896613*^9, 3.69303549234416*^9}, {3.693035541228005*^9, 
   3.6930356094477654`*^9}, {3.6930356624252367`*^9, 3.693035791113544*^9}, {
   3.693035839905964*^9, 3.693036109614914*^9}, {3.693036146246714*^9, 
   3.6930361463916597`*^9}, {3.693036194879775*^9, 3.6930361950595427`*^9}, 
   3.693036242693877*^9, 3.693036280662298*^9, {3.693036330084895*^9, 
   3.693036357623316*^9}, {3.693036408700644*^9, 3.693036434495562*^9}, {
   3.693043264799168*^9, 3.693043283381342*^9}, {3.69304341287125*^9, 
   3.6930436838174067`*^9}, {3.693043715050647*^9, 3.693043776744258*^9}, {
   3.693043822498876*^9, 3.693043849025916*^9}, {3.693043917125638*^9, 
   3.69304391757306*^9}, {3.693044030130754*^9, 3.693044030343109*^9}, {
   3.693044079437996*^9, 3.693044093286892*^9}, {3.693044256538232*^9, 
   3.6930442783762493`*^9}, {3.693044334030428*^9, 3.6930443481037273`*^9}, {
   3.693044383744624*^9, 3.693044463439193*^9}, {3.693044522975108*^9, 
   3.6930445253600473`*^9}, {3.693044596764471*^9, 3.693044612603849*^9}, {
   3.6930446590015917`*^9, 3.693044674332452*^9}, {3.693044814679574*^9, 
   3.69304482339705*^9}, {3.693044853998912*^9, 3.693044854143462*^9}, {
   3.6930481835330553`*^9, 3.693048480725987*^9}, {3.693048549151033*^9, 
   3.693048584080016*^9}, {3.6930486994860563`*^9, 3.6930487048623857`*^9}, 
   3.693048758030361*^9, {3.693048982809445*^9, 3.693049014471086*^9}, {
   3.693049058971043*^9, 3.6930490777241583`*^9}, {3.6930491080896*^9, 
   3.693049108267416*^9}, {3.6930491870988283`*^9, 3.6930492642066793`*^9}, {
   3.693049303110132*^9, 3.6930493125378933`*^9}, {3.693049424183223*^9, 
   3.693049495361576*^9}, {3.693049529575734*^9, 3.693049673012764*^9}, {
   3.693049708238514*^9, 3.6930497564094687`*^9}, {3.6930497893169823`*^9, 
   3.693049934903861*^9}, 3.6930499798706007`*^9, {3.693050009887102*^9, 
   3.69305007506955*^9}, 3.69305016346246*^9, {3.693050211567978*^9, 
   3.6930502125788603`*^9}, {3.6930503148544693`*^9, 3.693050342564679*^9}, {
   3.693050402663072*^9, 3.693050420346887*^9}, {3.693050452680172*^9, 
   3.693050499771912*^9}, {3.693050579907385*^9, 3.693050621837256*^9}, {
   3.693050691104643*^9, 3.693050827973007*^9}, {3.6930508618918343`*^9, 
   3.6930508633185062`*^9}, 3.6930510478727283`*^9, {3.693051082427108*^9, 
   3.693051085632002*^9}, {3.6930710340169477`*^9, 3.6930710389418297`*^9}, {
   3.693071166520637*^9, 3.693071177027629*^9}, {3.693071639896963*^9, 
   3.693071654065407*^9}, {3.693071689222386*^9, 3.6930717096625*^9}, {
   3.69307191679068*^9, 3.693071924000499*^9}, {3.6930721151974363`*^9, 
   3.693072139810733*^9}, {3.693072179041892*^9, 3.6930721792989473`*^9}, {
   3.693072216549736*^9, 3.693072259590742*^9}, {3.693072303220688*^9, 
   3.693072306718528*^9}, {3.693072611577721*^9, 3.693072632907782*^9}, {
   3.693072768921667*^9, 3.693072819059703*^9}, {3.693072958403688*^9, 
   3.693072966131928*^9}, {3.6930730020560293`*^9, 3.693073034251113*^9}, {
   3.693073074990279*^9, 3.693073098589579*^9}, {3.693073173356555*^9, 
   3.69307319022351*^9}, {3.693073591854301*^9, 3.693073599243868*^9}, {
   3.693074522080312*^9, 3.693074531433296*^9}, {3.693074563010098*^9, 
   3.693074565011388*^9}, {3.693074632377429*^9, 3.693074656496521*^9}, {
   3.6930747223915167`*^9, 3.693074729455771*^9}, {3.693074765848729*^9, 
   3.693074772237833*^9}, {3.6930748314266148`*^9, 3.693074835623746*^9}, {
   3.693075141173842*^9, 3.6930751920356293`*^9}, {3.693075274726447*^9, 
   3.6930752751645117`*^9}, {3.693075367752994*^9, 3.693075397013144*^9}, {
   3.693075431868629*^9, 3.693075451621839*^9}, {3.6930755163448133`*^9, 
   3.6930755258894*^9}, {3.693075631361353*^9, 3.693075632872354*^9}, {
   3.69307566764463*^9, 3.693075727103052*^9}, {3.693075762340706*^9, 
   3.6930758585040503`*^9}, {3.693076019304442*^9, 3.693076112385638*^9}, {
   3.693076146476161*^9, 3.693076210330202*^9}, {3.693076241133575*^9, 
   3.6930762590646963`*^9}, {3.693076307643962*^9, 3.693076318352318*^9}, {
   3.6930763741338263`*^9, 3.693076401538115*^9}, {3.6930764496657333`*^9, 
   3.693076453353778*^9}, {3.693076489638171*^9, 3.693076526727418*^9}, {
   3.6930765671956577`*^9, 3.693076636383827*^9}, {3.6930766693692513`*^9, 
   3.693076718002123*^9}, 3.693077051669463*^9, {3.693077087469307*^9, 
   3.6930770886823893`*^9}, {3.693077401808311*^9, 3.6930774193324137`*^9}, {
   3.693077461690168*^9, 3.693077490457897*^9}, {3.6930775384838057`*^9, 
   3.693077579218793*^9}, {3.693077694038085*^9, 3.69307770618845*^9}, {
   3.69307774228828*^9, 3.6930777949758987`*^9}, {3.6930778321017523`*^9, 
   3.693077864321579*^9}, {3.6930779203038282`*^9, 3.693078089852343*^9}, {
   3.69307831236777*^9, 3.693078409747609*^9}, 3.69307845669662*^9, {
   3.693078590999906*^9, 3.693078615379839*^9}, 3.693078729321035*^9, {
   3.693078845455121*^9, 3.6930788511232986`*^9}, {3.693078964433717*^9, 
   3.693079007523757*^9}, {3.693079165813501*^9, 3.6930792255070133`*^9}, 
   3.6930793794001627`*^9, {3.6930794800185337`*^9, 3.693079480545126*^9}, {
   3.693118208735978*^9, 3.6931182135957537`*^9}, {3.693118367283942*^9, 
   3.693118367778916*^9}, {3.693119180371903*^9, 3.693119207072216*^9}, {
   3.6931192868366423`*^9, 3.693119457887116*^9}, {3.693119497903677*^9, 
   3.6931195137195873`*^9}, {3.693119557160996*^9, 3.693119626828535*^9}, {
   3.693119687975849*^9, 3.693119806189426*^9}, {3.693119849626981*^9, 
   3.693119878842458*^9}, 3.693119933980702*^9, {3.6931199759426394`*^9, 
   3.6931200499919243`*^9}, {3.693120095228389*^9, 3.693120138495245*^9}, {
   3.693120181561833*^9, 3.693120246102249*^9}, {3.693120497387494*^9, 
   3.6931205895259733`*^9}, {3.693120632006068*^9, 3.693120725301723*^9}, {
   3.693120798621179*^9, 3.693120800239562*^9}, {3.693120845690885*^9, 
   3.6931211828019257`*^9}, {3.693121303808119*^9, 3.693121318173365*^9}, {
   3.693121423283926*^9, 3.693121432564311*^9}, {3.69312160964279*^9, 
   3.693121636045285*^9}, {3.693121723988852*^9, 3.69312176239581*^9}, {
   3.6931218008386917`*^9, 3.693121800927327*^9}, {3.693122233854539*^9, 
   3.693122238354645*^9}, {3.693122306531374*^9, 3.693122339930252*^9}, {
   3.693122435806773*^9, 3.6931225060854797`*^9}, {3.6931226468128557`*^9, 
   3.693122647420671*^9}, {3.693123940611732*^9, 3.693123942309989*^9}, 
   3.693134579229377*^9, 3.69313461170756*^9},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Global stability of interior rest point (exact Lyapunov function)\
\>", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.69296369103893*^9, {3.6929637216735687`*^9, 3.692963735591319*^9}, 
   3.692964078100669*^9, {3.6929746259898977`*^9, 3.69297462997047*^9}, {
   3.693034961076106*^9, 3.693034985806531*^9}, {3.693048092395323*^9, 
   3.693048098029875*^9}, {3.693077380358386*^9, 3.6930773823300533`*^9}, {
   3.6930794923718157`*^9, 3.693079502571559*^9}, {3.6931181747720957`*^9, 
   3.6931181811497602`*^9}, {3.6931183630090923`*^9, 3.693118364695942*^9}, {
   3.693122904584697*^9, 3.6931229410689173`*^9}, 3.6931346290431128`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GlobalStabilityOfInteriorRestPoint", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"prec_:", "precision"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "interiorRestPointRules", ",", "interiorRestPoint", ",", 
       "reducedInteriorRestPoint", ",", "otherPointsWhereDerivativeEquals0", 
       ",", "xVector", ",", "yVector"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xVector", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"yVector", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"y", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interiorRestPointRules", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"ExactRestPoints", "[", 
          RowBox[{
          "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
           "verbosity"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", "1", "]"}], "/.", "#"}], ")"}], "\[NotEqual]",
             "1"}], ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "interiorRestPointRules", "]"}], ">", "0"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"interiorRestPointRules", "=", 
          RowBox[{"First", "[", "interiorRestPointRules", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Numerical approximation to interior exact solution: \\n\>\"",
              ",", " ", 
             RowBox[{"(", 
              RowBox[{"interiorRestPointRules", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                 ",", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i", "]"}], "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                 ",", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"z", "\[Rule]", "num_"}], ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{"z", "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}]}], 
                "}"}]}], ")"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"testSetRule", "\[Equal]", "\"\<two\>\""}], "&&", 
            RowBox[{"tieBreakingRule", "\[Equal]", "\"\<min\>\""}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Distance", " ", "to", " ", "interior", " ", "rest", " ", 
             "point"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"interiorRestPoint", "=", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"xVector", ",", "yVector"}], "]"}], "/.", 
              "interiorRestPointRules"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<Lyapunov function: euclidean distance to interior rest \
point, i.e. distance to:\\n\>\"", ",", " ", "interiorRestPointRules"}], "]"}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{"\"\<\\twith numerical approximation:\\n\\t\>\"", ",", 
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"xVector", ",", "yVector"}], "]"}], "\[Rule]", 
                   RowBox[{"N", "@", "interiorRestPoint"}]}], "]"}]}], "]"}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{
               "Print", "[", 
                "\"\<Checking whether the derivative of the Lyapunov function \
is always different from zero (except at the rest points)...\>\"", "]"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"otherPointsWhereDerivativeEquals0", "=", 
             RowBox[{"CylindricalDecomposition", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ExpectedMove", "[", 
                    RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}],
                     "]"}], ".", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"xVector", ",", "yVector"}], "]"}], "-", 
                    "interiorRestPoint"}], ")"}]}], "\[Equal]", "0"}], "}"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"x", "[", "i", "]"}], "\[LessEqual]", "1"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"y", "[", "i", "]"}], "\[LessEqual]", "1"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Total", "[", "xVector", "]"}], "\[Equal]", "1"}],
                    ",", 
                   RowBox[{
                    RowBox[{"Total", "[", "yVector", "]"}], "\[Equal]", 
                    "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"xVector", ",", "yVector"}], "]"}], "\[NotEqual]",
                    "interiorRestPoint"}], "}"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"xVector", ",", "yVector"}], "]"}], "\[NotEqual]", 
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"s1", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"s2", "-", "1"}]}], "]"}]}], "]"}]}], "}"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Join", "[", 
                RowBox[{"xVector", ",", "yVector"}], "]"}]}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Reduced", " ", "Distance", " ", "to", " ", "interior", " ", 
             "rest", " ", "point"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reducedInteriorRestPoint", "=", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], "/.", 
              "interiorRestPointRules"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<Lyapunov function: euclidean distance to interior rest \
point ignoring x[1] and y[1], i.e. distance to:\\n\>\"", ",", " ", 
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                    RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], "\[Rule]",
                    "reducedInteriorRestPoint"}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{"\"\<\\twith numerical approximation:\\n\\t\>\"", ",", 
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                    RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], "\[Rule]", 
                   RowBox[{"N", "@", "reducedInteriorRestPoint"}]}], "]"}]}], 
                "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{
               "Print", "[", 
                "\"\<Checking whether the derivative of the Lyapunov function \
is always different from zero (except at the rest points)...\>\"", "]"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"otherPointsWhereDerivativeEquals0", "=", 
             RowBox[{"CylindricalDecomposition", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ExpectedMoveWithoutFirstVariables", "[", 
                    RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}],
                     "]"}], ".", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                    RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], "-", 
                    "reducedInteriorRestPoint"}], ")"}]}], "\[Equal]", "0"}], 
                  "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"x", "[", "i", "]"}], "\[LessEqual]", "1"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", "s1"}], "}"}]}], "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"y", "[", "i", "]"}], "\[LessEqual]", "1"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", "s2"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", "s1"}], "}"}]}], "]"}], 
                    "\[LessEqual]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{"y", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", "s2"}], "}"}]}], "]"}], 
                    "\[LessEqual]", "1"}]}], "}"}], ","}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                    RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], 
                   "\[NotEqual]", "reducedInteriorRestPoint"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                    RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], 
                   "\[NotEqual]", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", "n"}], "]"}]}], "}"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                 RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}]}], "]"}]}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"otherPointsWhereDerivativeEquals0", "===", "False"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
              RowBox[{
              "Print", "[", 
               "\"\<The derivative of the Lyapunov function is always \
different from zero (except at the rest points)\>\"", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
            "Return", "[", 
             "\"\<The interior point is almost globally asymptotically stable\
\>\"", "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<There are other points where the derivative of the \
Lyapunov function equals 0:\\n\>\"", ",", 
                 "otherPointsWhereDerivativeEquals0"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{"\"\<\\twith numerical approximation:\\n\\t\>\"", ",", 
                 RowBox[{"N", "@", "otherPointsWhereDerivativeEquals0"}]}], 
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
            "Return", "[", 
             "\"\<Global stability analysis is inconclusive\>\"", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Return", "[", "\"\<There is no interior rest point\>\"", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.69296308749763*^9}, {3.692963219741576*^9, 3.6929632223092957`*^9}, {
   3.692964682290263*^9, 3.692964683447137*^9}, 3.6929654379599857`*^9, 
   3.692965474270513*^9, {3.6930306479026747`*^9, 3.693030679323847*^9}, {
   3.693030798181374*^9, 3.693030879070979*^9}, {3.693030931788656*^9, 
   3.693030954603158*^9}, {3.693034999107688*^9, 3.693035077418137*^9}, {
   3.693035410896613*^9, 3.69303549234416*^9}, {3.693035541228005*^9, 
   3.6930356094477654`*^9}, {3.6930356624252367`*^9, 3.693035791113544*^9}, {
   3.693035839905964*^9, 3.693036109614914*^9}, {3.693036146246714*^9, 
   3.6930361463916597`*^9}, {3.693036194879775*^9, 3.6930361950595427`*^9}, 
   3.693036242693877*^9, 3.693036280662298*^9, {3.693036330084895*^9, 
   3.693036357623316*^9}, {3.693036408700644*^9, 3.693036434495562*^9}, {
   3.693043264799168*^9, 3.693043283381342*^9}, {3.69304341287125*^9, 
   3.6930436838174067`*^9}, {3.693043715050647*^9, 3.693043776744258*^9}, {
   3.693043822498876*^9, 3.693043849025916*^9}, {3.693043917125638*^9, 
   3.69304391757306*^9}, {3.693044030130754*^9, 3.693044030343109*^9}, {
   3.693044079437996*^9, 3.693044093286892*^9}, {3.693044256538232*^9, 
   3.6930442783762493`*^9}, {3.693044334030428*^9, 3.6930443481037273`*^9}, {
   3.693044383744624*^9, 3.693044463439193*^9}, {3.693044522975108*^9, 
   3.6930445253600473`*^9}, {3.693044596764471*^9, 3.693044612603849*^9}, {
   3.6930446590015917`*^9, 3.693044674332452*^9}, {3.693044814679574*^9, 
   3.69304482339705*^9}, {3.693044853998912*^9, 3.693044854143462*^9}, {
   3.6930481835330553`*^9, 3.693048480725987*^9}, {3.693048549151033*^9, 
   3.693048584080016*^9}, {3.6930486994860563`*^9, 3.6930487048623857`*^9}, 
   3.693048758030361*^9, {3.693048982809445*^9, 3.693049014471086*^9}, {
   3.693049058971043*^9, 3.6930490777241583`*^9}, {3.6930491080896*^9, 
   3.693049108267416*^9}, {3.6930491870988283`*^9, 3.6930492642066793`*^9}, {
   3.693049303110132*^9, 3.6930493125378933`*^9}, {3.693049424183223*^9, 
   3.693049495361576*^9}, {3.693049529575734*^9, 3.693049673012764*^9}, {
   3.693049708238514*^9, 3.6930497564094687`*^9}, {3.6930497893169823`*^9, 
   3.693049934903861*^9}, 3.6930499798706007`*^9, {3.693050009887102*^9, 
   3.69305007506955*^9}, 3.69305016346246*^9, {3.693050211567978*^9, 
   3.6930502125788603`*^9}, {3.6930503148544693`*^9, 3.693050342564679*^9}, {
   3.693050402663072*^9, 3.693050420346887*^9}, {3.693050452680172*^9, 
   3.693050499771912*^9}, {3.693050579907385*^9, 3.693050621837256*^9}, {
   3.693050691104643*^9, 3.693050827973007*^9}, {3.6930508618918343`*^9, 
   3.6930508633185062`*^9}, 3.6930510478727283`*^9, {3.693051082427108*^9, 
   3.693051085632002*^9}, {3.6930710340169477`*^9, 3.6930710389418297`*^9}, {
   3.693071166520637*^9, 3.693071177027629*^9}, {3.693071639896963*^9, 
   3.693071654065407*^9}, {3.693071689222386*^9, 3.6930717096625*^9}, {
   3.69307191679068*^9, 3.693071924000499*^9}, {3.6930721151974363`*^9, 
   3.693072139810733*^9}, {3.693072179041892*^9, 3.6930721792989473`*^9}, {
   3.693072216549736*^9, 3.693072259590742*^9}, {3.693072303220688*^9, 
   3.693072306718528*^9}, {3.693072611577721*^9, 3.693072632907782*^9}, {
   3.693072768921667*^9, 3.693072819059703*^9}, {3.693072958403688*^9, 
   3.693072966131928*^9}, {3.6930730020560293`*^9, 3.693073034251113*^9}, {
   3.693073074990279*^9, 3.693073098589579*^9}, {3.693073173356555*^9, 
   3.69307319022351*^9}, {3.693073591854301*^9, 3.693073599243868*^9}, {
   3.693074522080312*^9, 3.693074531433296*^9}, {3.693074563010098*^9, 
   3.693074565011388*^9}, {3.693074632377429*^9, 3.693074656496521*^9}, {
   3.6930747223915167`*^9, 3.693074729455771*^9}, {3.693074765848729*^9, 
   3.693074772237833*^9}, {3.6930748314266148`*^9, 3.693074835623746*^9}, {
   3.693075141173842*^9, 3.6930751920356293`*^9}, {3.693075274726447*^9, 
   3.6930752751645117`*^9}, {3.693075367752994*^9, 3.693075397013144*^9}, {
   3.693075431868629*^9, 3.693075451621839*^9}, {3.6930755163448133`*^9, 
   3.6930755258894*^9}, {3.693075631361353*^9, 3.693075632872354*^9}, {
   3.69307566764463*^9, 3.693075727103052*^9}, {3.693075762340706*^9, 
   3.6930758585040503`*^9}, {3.693076019304442*^9, 3.693076112385638*^9}, {
   3.693076146476161*^9, 3.693076210330202*^9}, {3.693076241133575*^9, 
   3.6930762590646963`*^9}, {3.693076307643962*^9, 3.693076318352318*^9}, {
   3.6930763741338263`*^9, 3.693076401538115*^9}, {3.6930764496657333`*^9, 
   3.693076453353778*^9}, {3.693076489638171*^9, 3.693076526727418*^9}, {
   3.6930765671956577`*^9, 3.693076636383827*^9}, {3.6930766693692513`*^9, 
   3.693076718002123*^9}, 3.693077051669463*^9, {3.693077087469307*^9, 
   3.6930770886823893`*^9}, {3.693077401808311*^9, 3.6930774193324137`*^9}, {
   3.693077461690168*^9, 3.693077490457897*^9}, {3.6930775384838057`*^9, 
   3.693077579218793*^9}, {3.693077694038085*^9, 3.69307770618845*^9}, {
   3.69307774228828*^9, 3.6930777949758987`*^9}, {3.6930778321017523`*^9, 
   3.693077864321579*^9}, {3.6930779203038282`*^9, 3.693078089852343*^9}, {
   3.69307831236777*^9, 3.693078409747609*^9}, 3.69307845669662*^9, {
   3.693078590999906*^9, 3.693078615379839*^9}, 3.693078729321035*^9, {
   3.693078845455121*^9, 3.6930788511232986`*^9}, {3.693078964433717*^9, 
   3.693079007523757*^9}, {3.693079165813501*^9, 3.6930792255070133`*^9}, 
   3.6930793794001627`*^9, {3.6930794800185337`*^9, 3.693079480545126*^9}, {
   3.693118208735978*^9, 3.6931182135957537`*^9}, {3.693118367283942*^9, 
   3.693118367778916*^9}, {3.693119180371903*^9, 3.693119207072216*^9}, {
   3.6931192868366423`*^9, 3.693119457887116*^9}, {3.693119497903677*^9, 
   3.6931195137195873`*^9}, {3.693119557160996*^9, 3.693119626828535*^9}, {
   3.693119687975849*^9, 3.693119806189426*^9}, {3.693119849626981*^9, 
   3.693119878842458*^9}, 3.693119933980702*^9, {3.6931199759426394`*^9, 
   3.6931200499919243`*^9}, {3.693120095228389*^9, 3.693120138495245*^9}, {
   3.693120181561833*^9, 3.693120246102249*^9}, {3.693120497387494*^9, 
   3.6931205895259733`*^9}, {3.693120632006068*^9, 3.693120725301723*^9}, {
   3.693120798621179*^9, 3.693120800239562*^9}, {3.693120845690885*^9, 
   3.6931211828019257`*^9}, {3.693121303808119*^9, 3.693121318173365*^9}, {
   3.693121423283926*^9, 3.693121432564311*^9}, {3.69312160964279*^9, 
   3.693121636045285*^9}, {3.693121723988852*^9, 3.69312176239581*^9}, {
   3.6931218008386917`*^9, 3.693121800927327*^9}, {3.693122233854539*^9, 
   3.693122238354645*^9}, {3.693122306531374*^9, 3.693122339930252*^9}, {
   3.693122435806773*^9, 3.6931225060854797`*^9}, {3.6931226468128557`*^9, 
   3.693122647420671*^9}, {3.693122995635252*^9, 3.6931229964887857`*^9}, {
   3.693123155523423*^9, 3.6931231833092127`*^9}, {3.693123226341736*^9, 
   3.6931237633641357`*^9}, {3.69312379900585*^9, 3.693123861814042*^9}, {
   3.693124042739109*^9, 3.693124187347698*^9}, {3.693124234667306*^9, 
   3.693124241214312*^9}, 3.6931242729625893`*^9, {3.693124313305284*^9, 
   3.6931243433310337`*^9}, {3.693124451220457*^9, 3.693124493814406*^9}, {
   3.693124606775578*^9, 3.693124628611472*^9}, {3.693124667166486*^9, 
   3.693124688756648*^9}, {3.693124726399164*^9, 3.693124726543972*^9}, {
   3.6931247664040937`*^9, 3.6931248204033813`*^9}, {3.693124923297785*^9, 
   3.693124927020896*^9}, {3.693125051010206*^9, 3.69312515297053*^9}, {
   3.693125186731436*^9, 3.693125210096781*^9}, {3.693125250812744*^9, 
   3.693125273322225*^9}, {3.693125308243352*^9, 3.6931253323750134`*^9}, {
   3.693125367902429*^9, 3.6931255235132637`*^9}, {3.693125562485807*^9, 
   3.693125565983643*^9}, {3.6931256116383133`*^9, 3.693125767360626*^9}, {
   3.6931258979792013`*^9, 3.6931259700647497`*^9}, {3.693131157930662*^9, 
   3.693131164933585*^9}, {3.69313158582266*^9, 3.693131642224411*^9}, {
   3.693131674301173*^9, 3.693131678081081*^9}, {3.693131763199751*^9, 
   3.693131792979025*^9}, {3.6931321874196033`*^9, 3.6931321903775597`*^9}, {
   3.693132743909666*^9, 3.6931327442578497`*^9}, {3.693133498162147*^9, 
   3.693133500816671*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Initial conditions", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.69296369103893*^9, {3.6929637216735687`*^9, 3.692963735591319*^9}, 
   3.692964078100669*^9, {3.6929746259898977`*^9, 3.69297462997047*^9}, {
   3.693034961076106*^9, 3.693034985806531*^9}, {3.693048092395323*^9, 
   3.693048098029875*^9}, {3.693077380358386*^9, 3.6930773823300533`*^9}, {
   3.6930794923718157`*^9, 3.693079502571559*^9}, {3.6931181747720957`*^9, 
   3.6931181811497602`*^9}, {3.6931183630090923`*^9, 3.693118364695942*^9}, {
   3.693122904584697*^9, 3.6931229410689173`*^9}, 3.6931346290431128`*^9, {
   3.6935481457963953`*^9, 3.693548153805209*^9}, 3.6935484636113663`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RandomPoints", "::", "usage"}], "=", "\"\<RandomPoints[\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\), \!\(\*
StyleBox[\"nPoints\",
FontSlant->\"Italic\"]\)] returns a list of \!\(\*
StyleBox[\"nPoints\",
FontSlant->\"Italic\"]\) random points for a centipede game of length \!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)\>\""}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RandomPoints", "[", 
     RowBox[{"n_", ",", "nPoints_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Join", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "/", 
              RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RandomReal", "[", 
               RowBox[{"1", ",", "s1"}], "]"}], ",", "nPoints"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "/", 
              RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RandomReal", "[", 
               RowBox[{"1", ",", "s2"}], "]"}], ",", "nPoints"}], "]"}]}], 
           "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SimplexMesh", "::", "usage"}], "=", "\"\<SimplexMesh[\!\(\*
StyleBox[\"nStrategies\",
FontSlant->\"Italic\"]\), \!\(\*
StyleBox[\"nAgents\",
FontSlant->\"Italic\"]\)] returns a list of all the possible strategy \
distributions in a population of \!\(\*
StyleBox[\"nAgents\",
FontSlant->\"Italic\"]\) agents who can choose one of \!\(\*
StyleBox[\"nStrategies\",
FontSlant->\"Italic\"]\) possible strategies. The number of possible \
distributions is Binomial[\!\(\*
StyleBox[\"nAgents\",
FontSlant->\"Italic\"]\)+\!\(\*
StyleBox[\"nStrategies\",
FontSlant->\"Italic\"]\)-1,\!\(\*
StyleBox[\"nAgents\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\>\""}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SimplexMesh", "[", 
     RowBox[{"nStrategies_", ",", "nAgents_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Permutations", "/@", 
        RowBox[{"IntegerPartitions", "[", 
         RowBox[{"nAgents", ",", 
          RowBox[{"{", "nStrategies", "}"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "nAgents"}], "]"}]}], "]"}]}], ",", "1"}], "]"}],
      "/", 
     RowBox[{"N", "@", "nAgents"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MeshPoints", "::", "usage"}], "=", "\"\<MeshPoints[\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\), \!\(\*
StyleBox[\"nAgentsPerPopulation\",
FontSlant->\"Italic\"]\)] returns a list of all the possible states in a \
centipede game of length \!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)with \!\(\*
StyleBox[\"nAgentsPerPopulation\",
FontSlant->\"Italic\"]\) agents in each population. The number of possible \
distributions is Binomial[\!\(\*
StyleBox[\"nAgents\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)+ \!\(\*
StyleBox[\"IntegerPart\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"(\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"+\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"3\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\")\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"/\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"2\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)- 1,\!\(\*
StyleBox[\"nAgents\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"*\",
FontSlant->\"Italic\"]\)\>\""}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MeshPoints", "[", 
    RowBox[{"n_", ",", "nAgentsPerPopulation_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Outer", "[", 
        RowBox[{"Join", ",", 
         RowBox[{"SimplexMesh", "[", 
          RowBox[{"s1", ",", "nAgentsPerPopulation"}], "]"}], ",", 
         RowBox[{"SimplexMesh", "[", 
          RowBox[{"s2", ",", "nAgentsPerPopulation"}], "]"}], ",", "1"}], 
        "]"}], ",", "1"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.69296308749763*^9}, {3.692963219741576*^9, 3.6929632223092957`*^9}, {
   3.692964682290263*^9, 3.692964683447137*^9}, 3.6929654379599857`*^9, 
   3.692965474270513*^9, {3.6930306479026747`*^9, 3.693030679323847*^9}, {
   3.693030798181374*^9, 3.693030879070979*^9}, {3.693030931788656*^9, 
   3.693030954603158*^9}, {3.693034999107688*^9, 3.693035077418137*^9}, {
   3.693035410896613*^9, 3.69303549234416*^9}, {3.693035541228005*^9, 
   3.6930356094477654`*^9}, {3.6930356624252367`*^9, 3.693035791113544*^9}, {
   3.693035839905964*^9, 3.693036109614914*^9}, {3.693036146246714*^9, 
   3.6930361463916597`*^9}, {3.693036194879775*^9, 3.6930361950595427`*^9}, 
   3.693036242693877*^9, 3.693036280662298*^9, {3.693036330084895*^9, 
   3.693036357623316*^9}, {3.693036408700644*^9, 3.693036434495562*^9}, {
   3.693043264799168*^9, 3.693043283381342*^9}, {3.69304341287125*^9, 
   3.6930436838174067`*^9}, {3.693043715050647*^9, 3.693043776744258*^9}, {
   3.693043822498876*^9, 3.693043849025916*^9}, {3.693043917125638*^9, 
   3.69304391757306*^9}, {3.693044030130754*^9, 3.693044030343109*^9}, {
   3.693044079437996*^9, 3.693044093286892*^9}, {3.693044256538232*^9, 
   3.6930442783762493`*^9}, {3.693044334030428*^9, 3.6930443481037273`*^9}, {
   3.693044383744624*^9, 3.693044463439193*^9}, {3.693044522975108*^9, 
   3.6930445253600473`*^9}, {3.693044596764471*^9, 3.693044612603849*^9}, {
   3.6930446590015917`*^9, 3.693044674332452*^9}, {3.693044814679574*^9, 
   3.69304482339705*^9}, {3.693044853998912*^9, 3.693044854143462*^9}, {
   3.6930481835330553`*^9, 3.693048480725987*^9}, {3.693048549151033*^9, 
   3.693048584080016*^9}, {3.6930486994860563`*^9, 3.6930487048623857`*^9}, 
   3.693048758030361*^9, {3.693048982809445*^9, 3.693049014471086*^9}, {
   3.693049058971043*^9, 3.6930490777241583`*^9}, {3.6930491080896*^9, 
   3.693049108267416*^9}, {3.6930491870988283`*^9, 3.6930492642066793`*^9}, {
   3.693049303110132*^9, 3.6930493125378933`*^9}, {3.693049424183223*^9, 
   3.693049495361576*^9}, {3.693049529575734*^9, 3.693049673012764*^9}, {
   3.693049708238514*^9, 3.6930497564094687`*^9}, {3.6930497893169823`*^9, 
   3.693049934903861*^9}, 3.6930499798706007`*^9, {3.693050009887102*^9, 
   3.69305007506955*^9}, 3.69305016346246*^9, {3.693050211567978*^9, 
   3.6930502125788603`*^9}, {3.6930503148544693`*^9, 3.693050342564679*^9}, {
   3.693050402663072*^9, 3.693050420346887*^9}, {3.693050452680172*^9, 
   3.693050499771912*^9}, {3.693050579907385*^9, 3.693050621837256*^9}, {
   3.693050691104643*^9, 3.693050827973007*^9}, {3.6930508618918343`*^9, 
   3.6930508633185062`*^9}, 3.6930510478727283`*^9, {3.693051082427108*^9, 
   3.693051085632002*^9}, {3.6930710340169477`*^9, 3.6930710389418297`*^9}, {
   3.693071166520637*^9, 3.693071177027629*^9}, {3.693071639896963*^9, 
   3.693071654065407*^9}, {3.693071689222386*^9, 3.6930717096625*^9}, {
   3.69307191679068*^9, 3.693071924000499*^9}, {3.6930721151974363`*^9, 
   3.693072139810733*^9}, {3.693072179041892*^9, 3.6930721792989473`*^9}, {
   3.693072216549736*^9, 3.693072259590742*^9}, {3.693072303220688*^9, 
   3.693072306718528*^9}, {3.693072611577721*^9, 3.693072632907782*^9}, {
   3.693072768921667*^9, 3.693072819059703*^9}, {3.693072958403688*^9, 
   3.693072966131928*^9}, {3.6930730020560293`*^9, 3.693073034251113*^9}, {
   3.693073074990279*^9, 3.693073098589579*^9}, {3.693073173356555*^9, 
   3.69307319022351*^9}, {3.693073591854301*^9, 3.693073599243868*^9}, {
   3.693074522080312*^9, 3.693074531433296*^9}, {3.693074563010098*^9, 
   3.693074565011388*^9}, {3.693074632377429*^9, 3.693074656496521*^9}, {
   3.6930747223915167`*^9, 3.693074729455771*^9}, {3.693074765848729*^9, 
   3.693074772237833*^9}, {3.6930748314266148`*^9, 3.693074835623746*^9}, {
   3.693075141173842*^9, 3.6930751920356293`*^9}, {3.693075274726447*^9, 
   3.6930752751645117`*^9}, {3.693075367752994*^9, 3.693075397013144*^9}, {
   3.693075431868629*^9, 3.693075451621839*^9}, {3.6930755163448133`*^9, 
   3.6930755258894*^9}, {3.693075631361353*^9, 3.693075632872354*^9}, {
   3.69307566764463*^9, 3.693075727103052*^9}, {3.693075762340706*^9, 
   3.6930758585040503`*^9}, {3.693076019304442*^9, 3.693076112385638*^9}, {
   3.693076146476161*^9, 3.693076210330202*^9}, {3.693076241133575*^9, 
   3.6930762590646963`*^9}, {3.693076307643962*^9, 3.693076318352318*^9}, {
   3.6930763741338263`*^9, 3.693076401538115*^9}, {3.6930764496657333`*^9, 
   3.693076453353778*^9}, {3.693076489638171*^9, 3.693076526727418*^9}, {
   3.6930765671956577`*^9, 3.693076636383827*^9}, {3.6930766693692513`*^9, 
   3.693076718002123*^9}, 3.693077051669463*^9, {3.693077087469307*^9, 
   3.6930770886823893`*^9}, {3.693077401808311*^9, 3.6930774193324137`*^9}, {
   3.693077461690168*^9, 3.693077490457897*^9}, {3.6930775384838057`*^9, 
   3.693077579218793*^9}, {3.693077694038085*^9, 3.69307770618845*^9}, {
   3.69307774228828*^9, 3.6930777949758987`*^9}, {3.6930778321017523`*^9, 
   3.693077864321579*^9}, {3.6930779203038282`*^9, 3.693078089852343*^9}, {
   3.69307831236777*^9, 3.693078409747609*^9}, 3.69307845669662*^9, {
   3.693078590999906*^9, 3.693078615379839*^9}, 3.693078729321035*^9, {
   3.693078845455121*^9, 3.6930788511232986`*^9}, {3.693078964433717*^9, 
   3.693079007523757*^9}, {3.693079165813501*^9, 3.6930792255070133`*^9}, 
   3.6930793794001627`*^9, {3.6930794800185337`*^9, 3.693079480545126*^9}, {
   3.693118208735978*^9, 3.6931182135957537`*^9}, {3.693118367283942*^9, 
   3.693118367778916*^9}, {3.693119180371903*^9, 3.693119207072216*^9}, {
   3.6931192868366423`*^9, 3.693119457887116*^9}, {3.693119497903677*^9, 
   3.6931195137195873`*^9}, {3.693119557160996*^9, 3.693119626828535*^9}, {
   3.693119687975849*^9, 3.693119806189426*^9}, {3.693119849626981*^9, 
   3.693119878842458*^9}, 3.693119933980702*^9, {3.6931199759426394`*^9, 
   3.6931200499919243`*^9}, {3.693120095228389*^9, 3.693120138495245*^9}, {
   3.693120181561833*^9, 3.693120246102249*^9}, {3.693120497387494*^9, 
   3.6931205895259733`*^9}, {3.693120632006068*^9, 3.693120725301723*^9}, {
   3.693120798621179*^9, 3.693120800239562*^9}, {3.693120845690885*^9, 
   3.6931211828019257`*^9}, {3.693121303808119*^9, 3.693121318173365*^9}, {
   3.693121423283926*^9, 3.693121432564311*^9}, {3.69312160964279*^9, 
   3.693121636045285*^9}, {3.693121723988852*^9, 3.69312176239581*^9}, {
   3.6931218008386917`*^9, 3.693121800927327*^9}, {3.693122233854539*^9, 
   3.693122238354645*^9}, {3.693122306531374*^9, 3.693122339930252*^9}, {
   3.693122435806773*^9, 3.6931225060854797`*^9}, {3.6931226468128557`*^9, 
   3.693122647420671*^9}, {3.693122995635252*^9, 3.6931229964887857`*^9}, {
   3.693123155523423*^9, 3.6931231833092127`*^9}, {3.693123226341736*^9, 
   3.6931237633641357`*^9}, {3.69312379900585*^9, 3.693123861814042*^9}, {
   3.693124042739109*^9, 3.693124187347698*^9}, {3.693124234667306*^9, 
   3.693124241214312*^9}, 3.6931242729625893`*^9, {3.693124313305284*^9, 
   3.6931243433310337`*^9}, {3.693124451220457*^9, 3.693124493814406*^9}, {
   3.693124606775578*^9, 3.693124628611472*^9}, {3.693124667166486*^9, 
   3.693124688756648*^9}, {3.693124726399164*^9, 3.693124726543972*^9}, {
   3.6931247664040937`*^9, 3.6931248204033813`*^9}, {3.693124923297785*^9, 
   3.693124927020896*^9}, {3.693125051010206*^9, 3.69312515297053*^9}, {
   3.693125186731436*^9, 3.693125210096781*^9}, {3.693125250812744*^9, 
   3.693125273322225*^9}, {3.693125308243352*^9, 3.6931253323750134`*^9}, {
   3.693125367902429*^9, 3.6931255235132637`*^9}, {3.693125562485807*^9, 
   3.693125565983643*^9}, {3.6931256116383133`*^9, 3.693125767360626*^9}, {
   3.6931258979792013`*^9, 3.6931259700647497`*^9}, {3.693131157930662*^9, 
   3.693131164933585*^9}, {3.69313158582266*^9, 3.693131642224411*^9}, {
   3.693131674301173*^9, 3.693131678081081*^9}, {3.693131763199751*^9, 
   3.693131792979025*^9}, {3.6931321874196033`*^9, 3.6931321903775597`*^9}, {
   3.693132743909666*^9, 3.6931327442578497`*^9}, {3.693133498162147*^9, 
   3.693133500816671*^9}, {3.693548160511352*^9, 3.693548453958748*^9}, 
   3.693574850326124*^9, {3.693574883164336*^9, 3.693574991615878*^9}, {
   3.693575023375538*^9, 3.693575063787862*^9}, {3.693575123220561*^9, 
   3.6935752039380827`*^9}, {3.693576077465584*^9, 3.693576295087234*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Numerical global stability of interior rest point (numerical evaluation of an \
approximate Lyapunov function)\
\>", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.69296369103893*^9, {3.6929637216735687`*^9, 3.692963735591319*^9}, 
   3.692964078100669*^9, {3.6929746259898977`*^9, 3.69297462997047*^9}, {
   3.693034961076106*^9, 3.693034985806531*^9}, {3.693048092395323*^9, 
   3.693048098029875*^9}, {3.693077380358386*^9, 3.6930773823300533`*^9}, {
   3.6930794923718157`*^9, 3.693079502571559*^9}, {3.6931181747720957`*^9, 
   3.6931181811497602`*^9}, {3.6931183630090923`*^9, 3.693118364695942*^9}, {
   3.693122904584697*^9, 3.6931229410689173`*^9}, 3.6931346290431128`*^9, {
   3.693134785562076*^9, 3.6931348020534277`*^9}, {3.693136120247036*^9, 
   3.693136137762746*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericalGlobalStabilityOfInteriorRestPointLyapunov", "[", 
    RowBox[{
    "testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", "points_", 
     ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"samplesPerPack_:", 
      RowBox[{"10", "^", "5"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "interiorFPRestPoint", ",", "vars", ",", "packs", ",", "CompiledVdot", 
       ",", "valuesOfVdot", ",", "pos", ",", 
       RowBox[{"nonNegativeValuePoints", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"p", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interiorFPRestPoint", "=", 
       RowBox[{"vars", "/.", 
        RowBox[{"FloatingPointApproximateRestPoint", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Numerical (floating-point) approximation to interior exact \
solution: \\n\>\"", ",", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{"vars", "\[Rule]", "interiorFPRestPoint"}], "]"}]}], 
         "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"packs", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"points", ",", 
         RowBox[{"UpTo", "[", "samplesPerPack", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Distance", " ", "to", " ", "interior", " ", "rest", " ", "point"}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Lyapunov function: euclidean distance to (floating-point \
approximation to) the interior rest point.\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<We now evaluate the derivative of the Lyapunov function at \
\>\"", ",", " ", 
           RowBox[{"Length", "[", "points", "]"}], ",", " ", 
           "\"\< points using (IEEE 754) floating-point arithmetic, in packs \
of up to \>\"", ",", "samplesPerPack", ",", "\"\< points.\>\""}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"CompiledVdot", "=", 
       RowBox[{"Compile", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Evaluate", "[", "vars", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"ExpectedMove", "[", 
            RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
            "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"vars", "-", "interiorFPRestPoint"}], ")"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"pack", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"valuesOfVdot", "=", 
            RowBox[{"ParallelMap", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CompiledVdot", "@@", "#"}], ")"}], "&"}], ",", 
              "pack"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Pack \>\"", ",", " ", "p", ",", 
                "\"\<; Size of pack: \>\"", ",", " ", 
                RowBox[{"Length", "@", "pack"}]}], "]"}], ";", 
              RowBox[{"p", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\tFirst \>\"", ",", 
                RowBox[{"Min", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"Length", "[", "pack", "]"}]}], "]"}], ",", 
                "\"\< points in pack:\\t\>\"", ",", " ", 
                RowBox[{"MatrixForm", "[", 
                 RowBox[{"pack", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Length", "[", "pack", "]"}]}], "]"}]}], "]"}], 
                  "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\t... and their values of Vdot:\\t\>\"", ",", 
                RowBox[{"MatrixForm", "[", 
                 RowBox[{"valuesOfVdot", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Length", "[", "pack", "]"}]}], "]"}]}], "]"}], 
                  "]"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"pos", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"valuesOfVdot", ",", 
              RowBox[{"_", "?", "NonNegative"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pos", "\[NotEqual]", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "Print", "[", 
               "\"\<\\tNonnegative values of vdot found at: \>\"", "]"}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\t\\tPoints: \>\"", ",", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Thread", "[", 
                    RowBox[{"vars", "\[Rule]", "#"}], "]"}], "&"}], ",", 
                  RowBox[{"Extract", "[", 
                   RowBox[{"pack", ",", "pos"}], "]"}]}], "]"}]}], "]"}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\t\\tValues: \>\"", ",", 
                RowBox[{"Extract", "[", 
                 RowBox[{"valuesOfVdot", ",", "pos"}], "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"nonNegativeValuePoints", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"nonNegativeValuePoints", ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"vars", "\[Rule]", "#"}], "]"}], "&"}], ",", 
                   RowBox[{"Extract", "[", 
                    RowBox[{"pack", ",", "pos"}], "]"}]}], "]"}]}], "]"}]}], 
              ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
                RowBox[{
                "Print", "[", 
                 "\"\<\\tAll values in the pack are negative\\n\>\"", "]"}]}],
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"pos", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"valuesOfVdot", ",", 
              RowBox[{"x_", "/;", 
               RowBox[{"x", ">", 
                RowBox[{"-", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "15"}]}]}]}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pos", "\[NotEqual]", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "Print", "[", 
               "\"\<\\tValues of vdot greater than -\!\(\*SuperscriptBox[\(10\
\), \(-15\)]\) found at: \>\"", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\t\\tPoints: \>\"", ",", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Thread", "[", 
                    RowBox[{"vars", "\[Rule]", "#"}], "]"}], "&"}], ",", 
                  RowBox[{"Extract", "[", 
                   RowBox[{"pack", ",", "pos"}], "]"}]}], "]"}]}], "]"}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\t\\tValues: \>\"", ",", 
                RowBox[{"Extract", "[", 
                 RowBox[{"valuesOfVdot", ",", "pos"}], "]"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"verbosity", "\[GreaterEqual]", "3"}], ",", 
                RowBox[{
                "Print", "[", 
                 "\"\<\\tAll values are below -\!\(\*SuperscriptBox[\(10\), \
\(-15\)]\)\\n\>\"", "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ",", "packs"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "nonNegativeValuePoints", "]"}], ">", "0"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{
           "Print", "[", 
            "\"\<Below you can see the points we have found where the \
derivative of the Lyapunov function is non-negative. If you can see other \
points beside the \\\"stop-immediately\\\" rest point, that means that the \
chosen function is not a Lyapunov function. Alternatively, if there are no \
points below, or if the only point below is the \\\"stop-immediately\\\" rest \
point, then this means that we have not found numerical evidence that \
contradicts the hypothesis that the interior point is almost globally \
asymptotically stable. In other words, this computation would suggest that \
the interior rest point might be almost globally asymptotically stable.\>\"", 
            "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "nonNegativeValuePoints", "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{
           "Print", "[", 
            "\"\<The derivative of the Lyapunov function is negative in all \
evaluated points.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<We have evaluated \>\"", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"Length", "[", "points", "]"}], "]"}], ",", 
            "\"\< points and we have not found numerical evidence that \
contradicts the hypothesis that the interior point is almost globally \
asymptotically stable. In other words, this computation suggests that the \
interior rest point might be almost globally asymptotically stable\>\""}], 
           "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.69296308749763*^9}, {3.692963219741576*^9, 3.6929632223092957`*^9}, {
   3.692964682290263*^9, 3.692964683447137*^9}, 3.6929654379599857`*^9, 
   3.692965474270513*^9, {3.6930306479026747`*^9, 3.693030679323847*^9}, {
   3.693030798181374*^9, 3.693030879070979*^9}, {3.693030931788656*^9, 
   3.693030954603158*^9}, {3.693034999107688*^9, 3.693035077418137*^9}, {
   3.693035410896613*^9, 3.69303549234416*^9}, {3.693035541228005*^9, 
   3.6930356094477654`*^9}, {3.6930356624252367`*^9, 3.693035791113544*^9}, {
   3.693035839905964*^9, 3.693036109614914*^9}, {3.693036146246714*^9, 
   3.6930361463916597`*^9}, {3.693036194879775*^9, 3.6930361950595427`*^9}, 
   3.693036242693877*^9, 3.693036280662298*^9, {3.693036330084895*^9, 
   3.693036357623316*^9}, {3.693036408700644*^9, 3.693036434495562*^9}, {
   3.693043264799168*^9, 3.693043283381342*^9}, {3.69304341287125*^9, 
   3.6930436838174067`*^9}, {3.693043715050647*^9, 3.693043776744258*^9}, {
   3.693043822498876*^9, 3.693043849025916*^9}, {3.693043917125638*^9, 
   3.69304391757306*^9}, {3.693044030130754*^9, 3.693044030343109*^9}, {
   3.693044079437996*^9, 3.693044093286892*^9}, {3.693044256538232*^9, 
   3.6930442783762493`*^9}, {3.693044334030428*^9, 3.6930443481037273`*^9}, {
   3.693044383744624*^9, 3.693044463439193*^9}, {3.693044522975108*^9, 
   3.6930445253600473`*^9}, {3.693044596764471*^9, 3.693044612603849*^9}, {
   3.6930446590015917`*^9, 3.693044674332452*^9}, {3.693044814679574*^9, 
   3.69304482339705*^9}, {3.693044853998912*^9, 3.693044854143462*^9}, {
   3.6930481835330553`*^9, 3.693048480725987*^9}, {3.693048549151033*^9, 
   3.693048584080016*^9}, {3.6930486994860563`*^9, 3.6930487048623857`*^9}, 
   3.693048758030361*^9, {3.693048982809445*^9, 3.693049014471086*^9}, {
   3.693049058971043*^9, 3.6930490777241583`*^9}, {3.6930491080896*^9, 
   3.693049108267416*^9}, {3.6930491870988283`*^9, 3.6930492642066793`*^9}, {
   3.693049303110132*^9, 3.6930493125378933`*^9}, {3.693049424183223*^9, 
   3.693049495361576*^9}, {3.693049529575734*^9, 3.693049673012764*^9}, {
   3.693049708238514*^9, 3.6930497564094687`*^9}, {3.6930497893169823`*^9, 
   3.693049934903861*^9}, 3.6930499798706007`*^9, {3.693050009887102*^9, 
   3.69305007506955*^9}, 3.69305016346246*^9, {3.693050211567978*^9, 
   3.6930502125788603`*^9}, {3.6930503148544693`*^9, 3.693050342564679*^9}, {
   3.693050402663072*^9, 3.693050420346887*^9}, {3.693050452680172*^9, 
   3.693050499771912*^9}, {3.693050579907385*^9, 3.693050621837256*^9}, {
   3.693050691104643*^9, 3.693050827973007*^9}, {3.6930508618918343`*^9, 
   3.6930508633185062`*^9}, 3.6930510478727283`*^9, {3.693051082427108*^9, 
   3.693051085632002*^9}, {3.6930710340169477`*^9, 3.6930710389418297`*^9}, {
   3.693071166520637*^9, 3.693071177027629*^9}, {3.693071639896963*^9, 
   3.693071654065407*^9}, {3.693071689222386*^9, 3.6930717096625*^9}, {
   3.69307191679068*^9, 3.693071924000499*^9}, {3.6930721151974363`*^9, 
   3.693072139810733*^9}, {3.693072179041892*^9, 3.6930721792989473`*^9}, {
   3.693072216549736*^9, 3.693072259590742*^9}, {3.693072303220688*^9, 
   3.693072306718528*^9}, {3.693072611577721*^9, 3.693072632907782*^9}, {
   3.693072768921667*^9, 3.693072819059703*^9}, {3.693072958403688*^9, 
   3.693072966131928*^9}, {3.6930730020560293`*^9, 3.693073034251113*^9}, {
   3.693073074990279*^9, 3.693073098589579*^9}, {3.693073173356555*^9, 
   3.69307319022351*^9}, {3.693073591854301*^9, 3.693073599243868*^9}, {
   3.693074522080312*^9, 3.693074531433296*^9}, {3.693074563010098*^9, 
   3.693074565011388*^9}, {3.693074632377429*^9, 3.693074656496521*^9}, {
   3.6930747223915167`*^9, 3.693074729455771*^9}, {3.693074765848729*^9, 
   3.693074772237833*^9}, {3.6930748314266148`*^9, 3.693074835623746*^9}, {
   3.693075141173842*^9, 3.6930751920356293`*^9}, {3.693075274726447*^9, 
   3.6930752751645117`*^9}, {3.693075367752994*^9, 3.693075397013144*^9}, {
   3.693075431868629*^9, 3.693075451621839*^9}, {3.6930755163448133`*^9, 
   3.6930755258894*^9}, {3.693075631361353*^9, 3.693075632872354*^9}, {
   3.69307566764463*^9, 3.693075727103052*^9}, {3.693075762340706*^9, 
   3.6930758585040503`*^9}, {3.693076019304442*^9, 3.693076112385638*^9}, {
   3.693076146476161*^9, 3.693076210330202*^9}, {3.693076241133575*^9, 
   3.6930762590646963`*^9}, {3.693076307643962*^9, 3.693076318352318*^9}, {
   3.6930763741338263`*^9, 3.693076401538115*^9}, {3.6930764496657333`*^9, 
   3.693076453353778*^9}, {3.693076489638171*^9, 3.693076526727418*^9}, {
   3.6930765671956577`*^9, 3.693076636383827*^9}, {3.6930766693692513`*^9, 
   3.693076718002123*^9}, 3.693077051669463*^9, {3.693077087469307*^9, 
   3.6930770886823893`*^9}, {3.693077401808311*^9, 3.6930774193324137`*^9}, {
   3.693077461690168*^9, 3.693077490457897*^9}, {3.6930775384838057`*^9, 
   3.693077579218793*^9}, {3.693077694038085*^9, 3.69307770618845*^9}, {
   3.69307774228828*^9, 3.6930777949758987`*^9}, {3.6930778321017523`*^9, 
   3.693077864321579*^9}, {3.6930779203038282`*^9, 3.693078089852343*^9}, {
   3.69307831236777*^9, 3.693078409747609*^9}, 3.69307845669662*^9, {
   3.693078590999906*^9, 3.693078615379839*^9}, 3.693078729321035*^9, {
   3.693078845455121*^9, 3.6930788511232986`*^9}, {3.693078964433717*^9, 
   3.693079007523757*^9}, {3.693079165813501*^9, 3.6930792255070133`*^9}, 
   3.6930793794001627`*^9, {3.6930794800185337`*^9, 3.693079480545126*^9}, {
   3.693118208735978*^9, 3.6931182135957537`*^9}, {3.693118367283942*^9, 
   3.693118367778916*^9}, {3.693119180371903*^9, 3.693119207072216*^9}, {
   3.6931192868366423`*^9, 3.693119457887116*^9}, {3.693119497903677*^9, 
   3.6931195137195873`*^9}, {3.693119557160996*^9, 3.693119626828535*^9}, {
   3.693119687975849*^9, 3.693119806189426*^9}, {3.693119849626981*^9, 
   3.693119878842458*^9}, 3.693119933980702*^9, {3.6931199759426394`*^9, 
   3.6931200499919243`*^9}, {3.693120095228389*^9, 3.693120138495245*^9}, {
   3.693120181561833*^9, 3.693120246102249*^9}, {3.693120497387494*^9, 
   3.6931205895259733`*^9}, {3.693120632006068*^9, 3.693120725301723*^9}, {
   3.693120798621179*^9, 3.693120800239562*^9}, {3.693120845690885*^9, 
   3.6931211828019257`*^9}, {3.693121303808119*^9, 3.693121318173365*^9}, {
   3.693121423283926*^9, 3.693121432564311*^9}, {3.69312160964279*^9, 
   3.693121636045285*^9}, {3.693121723988852*^9, 3.69312176239581*^9}, {
   3.6931218008386917`*^9, 3.693121800927327*^9}, {3.693122233854539*^9, 
   3.693122238354645*^9}, {3.693122306531374*^9, 3.693122339930252*^9}, {
   3.693122435806773*^9, 3.6931225060854797`*^9}, {3.6931226468128557`*^9, 
   3.693122647420671*^9}, {3.693122995635252*^9, 3.6931229964887857`*^9}, {
   3.693123155523423*^9, 3.6931231833092127`*^9}, {3.693123226341736*^9, 
   3.6931237633641357`*^9}, {3.69312379900585*^9, 3.693123861814042*^9}, {
   3.693124042739109*^9, 3.693124187347698*^9}, {3.693124234667306*^9, 
   3.693124241214312*^9}, 3.6931242729625893`*^9, {3.693124313305284*^9, 
   3.6931243433310337`*^9}, {3.693124451220457*^9, 3.693124493814406*^9}, {
   3.693124606775578*^9, 3.693124628611472*^9}, {3.693124667166486*^9, 
   3.693124688756648*^9}, {3.693124726399164*^9, 3.693124726543972*^9}, {
   3.6931247664040937`*^9, 3.6931248204033813`*^9}, {3.693124923297785*^9, 
   3.693124927020896*^9}, {3.693125051010206*^9, 3.69312515297053*^9}, {
   3.693125186731436*^9, 3.693125210096781*^9}, {3.693125250812744*^9, 
   3.693125273322225*^9}, {3.693125308243352*^9, 3.6931253323750134`*^9}, {
   3.693125367902429*^9, 3.6931255235132637`*^9}, {3.693125562485807*^9, 
   3.693125565983643*^9}, {3.6931256116383133`*^9, 3.693125767360626*^9}, {
   3.6931258979792013`*^9, 3.6931259700647497`*^9}, {3.693131157930662*^9, 
   3.693131164933585*^9}, {3.69313158582266*^9, 3.693131642224411*^9}, {
   3.693131674301173*^9, 3.693131678081081*^9}, {3.693131763199751*^9, 
   3.693131792979025*^9}, {3.6931321874196033`*^9, 3.6931321903775597`*^9}, {
   3.693132743909666*^9, 3.6931327442578497`*^9}, {3.693133498162147*^9, 
   3.693133500816671*^9}, {3.693135348121587*^9, 3.6931353524176292`*^9}, {
   3.693136172853754*^9, 3.69313617988503*^9}, 3.693139189469515*^9, {
   3.693212873703341*^9, 3.69321288705133*^9}, {3.6932129469121733`*^9, 
   3.693212947621008*^9}, {3.693212977691599*^9, 3.6932129788953447`*^9}, {
   3.6932130117226677`*^9, 3.693213040922073*^9}, {3.693213075606496*^9, 
   3.693213090544557*^9}, {3.693213203045075*^9, 3.693213233452401*^9}, {
   3.693213266404847*^9, 3.6932132988588457`*^9}, {3.693213334937413*^9, 
   3.693213345703047*^9}, {3.69321338577612*^9, 3.6932136035944433`*^9}, {
   3.693213639043736*^9, 3.693213863510091*^9}, {3.693213921989643*^9, 
   3.693214265884457*^9}, {3.693214323687562*^9, 3.693214499364394*^9}, {
   3.693214539572698*^9, 3.6932149868544607`*^9}, {3.693215147987502*^9, 
   3.693215170407238*^9}, {3.693215244881469*^9, 3.693215413899234*^9}, {
   3.6932154754818363`*^9, 3.693215492919259*^9}, {3.693215656164893*^9, 
   3.693215723282441*^9}, {3.693215808879631*^9, 3.693215859585268*^9}, {
   3.693216116314464*^9, 3.693216128362776*^9}, {3.693216836969988*^9, 
   3.6932168899803543`*^9}, {3.693390077980316*^9, 3.6933900807144537`*^9}, {
   3.693390118370039*^9, 3.693390137369686*^9}, 3.693390225539995*^9, {
   3.693390274633972*^9, 3.693390291005924*^9}, {3.6935088356662083`*^9, 
   3.693508844811535*^9}, {3.693547839490122*^9, 3.693547842989127*^9}, 
   3.6935478812397327`*^9, {3.693548487373272*^9, 3.693548488599038*^9}, {
   3.6935485938789053`*^9, 3.693548796999235*^9}, {3.693548837095186*^9, 
   3.693548869978437*^9}, {3.69354893253012*^9, 3.6935489619596567`*^9}, {
   3.6935490188515472`*^9, 3.693549086972417*^9}, 3.693549188391201*^9, {
   3.693549351090857*^9, 3.693549351201787*^9}, {3.693549448967774*^9, 
   3.693549449967637*^9}, {3.693549487047615*^9, 3.6935494876095877`*^9}, {
   3.693549523982626*^9, 3.693549524937772*^9}, {3.693549651569436*^9, 
   3.6935496584090967`*^9}, {3.69355086174575*^9, 3.6935508653106728`*^9}, {
   3.693551158466208*^9, 3.693551160154084*^9}, {3.693551194410965*^9, 
   3.693551274354513*^9}, {3.693552474968545*^9, 3.693552476565979*^9}, {
   3.6935525121495037`*^9, 3.6935525154336863`*^9}, {3.693559435220812*^9, 
   3.6935595965915956`*^9}, {3.6935596310636797`*^9, 3.693559664114852*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical global stability of interior rest point (NDSolve)", \
"Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.69296369103893*^9, {3.6929637216735687`*^9, 3.692963735591319*^9}, 
   3.692964078100669*^9, {3.6929746259898977`*^9, 3.69297462997047*^9}, {
   3.693034961076106*^9, 3.693034985806531*^9}, {3.693048092395323*^9, 
   3.693048098029875*^9}, {3.693077380358386*^9, 3.6930773823300533`*^9}, {
   3.6930794923718157`*^9, 3.693079502571559*^9}, {3.6931181747720957`*^9, 
   3.6931181811497602`*^9}, {3.6931183630090923`*^9, 3.693118364695942*^9}, {
   3.693122904584697*^9, 3.6931229410689173`*^9}, 3.6931346290431128`*^9, {
   3.693134785562076*^9, 3.6931348020534277`*^9}, {3.693136120247036*^9, 
   3.693136137762746*^9}, {3.693547818767255*^9, 3.693547820801915*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericalGlobalStabilityOfInteriorRestPointNDSolve", "[", 
    RowBox[{
    "testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", "points_", 
     ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"samplesPerPack_:", 
      RowBox[{"10", "^", "3"}]}], ",", 
     RowBox[{"time_:", "200"}], ",", 
     RowBox[{"tolerance_:", 
      RowBox[{"10.", "^", 
       RowBox[{"-", "4"}]}]}], ",", 
     RowBox[{"accuracyGoal_:", "6"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "interiorFPRestPoint", ",", "vars", ",", "rulesToAddt", ",", 
       "varsWitht", ",", "packs", ",", "Dvars", ",", "projectedEM", ",", 
       RowBox[{"p", "=", "1"}], ",", "FinalPoint", ",", "finalPoints", ",", 
       RowBox[{"problematicPoints", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SetSharedVariable", "[", "problematicPoints", "]"}], ";", " ", 
      
      RowBox[{"(*", 
       RowBox[{"So", " ", "we", " ", "can", " ", "use", " ", "ParallelMap"}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rulesToAddt", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "i_Integer", "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"y", "[", "i_Integer", "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], "[", "t", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"varsWitht", "=", 
       RowBox[{"vars", "/.", "rulesToAddt"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Dvars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], "'"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"y", "[", "i", "]"}], "'"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interiorFPRestPoint", "=", 
       RowBox[{"vars", "/.", 
        RowBox[{"FloatingPointApproximateRestPoint", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Numerical (floating-point) approximation to interior exact \
solution: \\n\>\"", ",", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{"vars", "\[Rule]", "interiorFPRestPoint"}], "]"}]}], 
         "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"projectedEM", "=", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
              RowBox[{
               FractionBox["1", "s1"], 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}], ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
              RowBox[{
               FractionBox["1", "s2"], 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], "}"}]}], 
          "}"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ExpectedMove", "[", 
           RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}], "/.",
           "rulesToAddt"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"packs", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"points", ",", 
         RowBox[{"UpTo", "[", "samplesPerPack", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "NDSolve", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          
          "\"\<We now solve the differential equation numerically (with \
NDSolve), starting at each of the \>\"", ",", " ", 
           RowBox[{"Length", "[", "points", "]"}], ",", " ", 
           "\"\< points provided, in packs of up to \>\"", ",", 
           "samplesPerPack", ",", "\"\< points.\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FinalPoint", "[", "initialPoint_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"finalTime", "=", "time"}], ",", "sol"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sol", "=", 
           RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{"Dvars", "\[Equal]", "projectedEM"}], "]"}], ",", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"varsWitht", "/.", 
                   RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "==", 
                 "initialPoint"}], "]"}], ",", 
               RowBox[{"WhenEvent", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"Norm", "[", 
                    RowBox[{"varsWitht", "-", "interiorFPRestPoint"}], "]"}], 
                   "<", "tolerance"}], "]"}], ",", " ", 
                 RowBox[{"\"\<StopIntegration\>\"", ";", 
                  RowBox[{"finalTime", "=", "t"}]}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "vars", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
             RowBox[{"AccuracyGoal", "\[Rule]", "accuracyGoal"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"verbosity", "\[GreaterEqual]", "10"}], ",", 
            RowBox[{"Print", "[", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"Evaluate", "@", 
                RowBox[{"MapThread", "[", 
                 RowBox[{"Tooltip", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "t", "]"}], "&"}], ",", "sol"}], "]"}], 
                    ",", "vars"}], "}"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
               RowBox[{"PlotLegends", "\[Rule]", "vars"}]}], "]"}], "]"}]}], 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"finalTime", "\[GreaterEqual]", "time"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<Fixed point not reached:\\n\\t\>\"", ",", "initialPoint", 
               ",", "\"\<\\n\\t-> \>\"", ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", "finalTime", "]"}], "&"}], ",", "sol"}], 
                "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"problematicPoints", ",", 
               RowBox[{"initialPoint", "\[Rule]", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", "finalTime", "]"}], "&"}], ",", "sol"}], 
                 "]"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", "finalTime", "]"}], "&"}], ",", "sol"}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"pack", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"finalPoints", "=", 
            RowBox[{"ParallelMap", "[", 
             RowBox[{"FinalPoint", ",", "pack"}], "]"}]}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"If", " ", "you", " ", "want", " ", "graphics"}], ",", 
             " ", 
             RowBox[{
             "you", " ", "need", " ", "to", " ", "replace", " ", 
              "ParallelMap", " ", "with", " ", "Map"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Pack \>\"", ",", " ", "p", ",", 
                "\"\<; Size of pack: \>\"", ",", " ", 
                RowBox[{"Length", "@", "pack"}]}], "]"}], ";", 
              RowBox[{"p", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\tFirst \>\"", ",", 
                RowBox[{"Min", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"Length", "[", "pack", "]"}]}], "]"}], ",", 
                "\"\< initial points in pack:\\t\>\"", ",", " ", 
                RowBox[{"MatrixForm", "[", 
                 RowBox[{"pack", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Length", "[", "pack", "]"}]}], "]"}]}], "]"}], 
                  "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<\\t... and their corresponding final points:\\t\>\"", ",", 
                RowBox[{"MatrixForm", "[", 
                 RowBox[{"finalPoints", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Length", "[", "pack", "]"}]}], "]"}]}], "]"}], 
                  "]"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbosity", "\[GreaterEqual]", "3"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\tProblematic points so far:\\t\>\"", ",", " ", 
                RowBox[{"MatrixForm", "[", "problematicPoints", "]"}]}], 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", "packs"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "problematicPoints", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{
           "Print", "[", 
            "\"\<We have found initial points that did not lead to the \
proximities of the interior rest point. The following are the problematic \
initial conditions and their corresponding end points. If you can see other \
points beside the \\\"stop-immediately\\\" initial condition, you may want to \
try again with a greater value of time or a greater value of tolerance.\>\"", 
            "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "problematicPoints", "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{
           "Print", "[", 
            "\"\<All initial points evaluated led to the proximities of the \
interior rest point.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<We have evaluated \>\"", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"Length", "[", "points", "]"}], "]"}], ",", 
            "\"\< initial points and we have not found numerical evidence \
that contradicts the hypothesis that the interior point is almost globally \
asymptotically stable. In other words, this computation suggests that the \
interior rest point might be almost globally asymptotically stable\>\""}], 
           "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.69296308749763*^9}, {3.692963219741576*^9, 3.6929632223092957`*^9}, {
   3.692964682290263*^9, 3.692964683447137*^9}, 3.6929654379599857`*^9, 
   3.692965474270513*^9, {3.6930306479026747`*^9, 3.693030679323847*^9}, {
   3.693030798181374*^9, 3.693030879070979*^9}, {3.693030931788656*^9, 
   3.693030954603158*^9}, {3.693034999107688*^9, 3.693035077418137*^9}, {
   3.693035410896613*^9, 3.69303549234416*^9}, {3.693035541228005*^9, 
   3.6930356094477654`*^9}, {3.6930356624252367`*^9, 3.693035791113544*^9}, {
   3.693035839905964*^9, 3.693036109614914*^9}, {3.693036146246714*^9, 
   3.6930361463916597`*^9}, {3.693036194879775*^9, 3.6930361950595427`*^9}, 
   3.693036242693877*^9, 3.693036280662298*^9, {3.693036330084895*^9, 
   3.693036357623316*^9}, {3.693036408700644*^9, 3.693036434495562*^9}, {
   3.693043264799168*^9, 3.693043283381342*^9}, {3.69304341287125*^9, 
   3.6930436838174067`*^9}, {3.693043715050647*^9, 3.693043776744258*^9}, {
   3.693043822498876*^9, 3.693043849025916*^9}, {3.693043917125638*^9, 
   3.69304391757306*^9}, {3.693044030130754*^9, 3.693044030343109*^9}, {
   3.693044079437996*^9, 3.693044093286892*^9}, {3.693044256538232*^9, 
   3.6930442783762493`*^9}, {3.693044334030428*^9, 3.6930443481037273`*^9}, {
   3.693044383744624*^9, 3.693044463439193*^9}, {3.693044522975108*^9, 
   3.6930445253600473`*^9}, {3.693044596764471*^9, 3.693044612603849*^9}, {
   3.6930446590015917`*^9, 3.693044674332452*^9}, {3.693044814679574*^9, 
   3.69304482339705*^9}, {3.693044853998912*^9, 3.693044854143462*^9}, {
   3.6930481835330553`*^9, 3.693048480725987*^9}, {3.693048549151033*^9, 
   3.693048584080016*^9}, {3.6930486994860563`*^9, 3.6930487048623857`*^9}, 
   3.693048758030361*^9, {3.693048982809445*^9, 3.693049014471086*^9}, {
   3.693049058971043*^9, 3.6930490777241583`*^9}, {3.6930491080896*^9, 
   3.693049108267416*^9}, {3.6930491870988283`*^9, 3.6930492642066793`*^9}, {
   3.693049303110132*^9, 3.6930493125378933`*^9}, {3.693049424183223*^9, 
   3.693049495361576*^9}, {3.693049529575734*^9, 3.693049673012764*^9}, {
   3.693049708238514*^9, 3.6930497564094687`*^9}, {3.6930497893169823`*^9, 
   3.693049934903861*^9}, 3.6930499798706007`*^9, {3.693050009887102*^9, 
   3.69305007506955*^9}, 3.69305016346246*^9, {3.693050211567978*^9, 
   3.6930502125788603`*^9}, {3.6930503148544693`*^9, 3.693050342564679*^9}, {
   3.693050402663072*^9, 3.693050420346887*^9}, {3.693050452680172*^9, 
   3.693050499771912*^9}, {3.693050579907385*^9, 3.693050621837256*^9}, {
   3.693050691104643*^9, 3.693050827973007*^9}, {3.6930508618918343`*^9, 
   3.6930508633185062`*^9}, 3.6930510478727283`*^9, {3.693051082427108*^9, 
   3.693051085632002*^9}, {3.6930710340169477`*^9, 3.6930710389418297`*^9}, {
   3.693071166520637*^9, 3.693071177027629*^9}, {3.693071639896963*^9, 
   3.693071654065407*^9}, {3.693071689222386*^9, 3.6930717096625*^9}, {
   3.69307191679068*^9, 3.693071924000499*^9}, {3.6930721151974363`*^9, 
   3.693072139810733*^9}, {3.693072179041892*^9, 3.6930721792989473`*^9}, {
   3.693072216549736*^9, 3.693072259590742*^9}, {3.693072303220688*^9, 
   3.693072306718528*^9}, {3.693072611577721*^9, 3.693072632907782*^9}, {
   3.693072768921667*^9, 3.693072819059703*^9}, {3.693072958403688*^9, 
   3.693072966131928*^9}, {3.6930730020560293`*^9, 3.693073034251113*^9}, {
   3.693073074990279*^9, 3.693073098589579*^9}, {3.693073173356555*^9, 
   3.69307319022351*^9}, {3.693073591854301*^9, 3.693073599243868*^9}, {
   3.693074522080312*^9, 3.693074531433296*^9}, {3.693074563010098*^9, 
   3.693074565011388*^9}, {3.693074632377429*^9, 3.693074656496521*^9}, {
   3.6930747223915167`*^9, 3.693074729455771*^9}, {3.693074765848729*^9, 
   3.693074772237833*^9}, {3.6930748314266148`*^9, 3.693074835623746*^9}, {
   3.693075141173842*^9, 3.6930751920356293`*^9}, {3.693075274726447*^9, 
   3.6930752751645117`*^9}, {3.693075367752994*^9, 3.693075397013144*^9}, {
   3.693075431868629*^9, 3.693075451621839*^9}, {3.6930755163448133`*^9, 
   3.6930755258894*^9}, {3.693075631361353*^9, 3.693075632872354*^9}, {
   3.69307566764463*^9, 3.693075727103052*^9}, {3.693075762340706*^9, 
   3.6930758585040503`*^9}, {3.693076019304442*^9, 3.693076112385638*^9}, {
   3.693076146476161*^9, 3.693076210330202*^9}, {3.693076241133575*^9, 
   3.6930762590646963`*^9}, {3.693076307643962*^9, 3.693076318352318*^9}, {
   3.6930763741338263`*^9, 3.693076401538115*^9}, {3.6930764496657333`*^9, 
   3.693076453353778*^9}, {3.693076489638171*^9, 3.693076526727418*^9}, {
   3.6930765671956577`*^9, 3.693076636383827*^9}, {3.6930766693692513`*^9, 
   3.693076718002123*^9}, 3.693077051669463*^9, {3.693077087469307*^9, 
   3.6930770886823893`*^9}, {3.693077401808311*^9, 3.6930774193324137`*^9}, {
   3.693077461690168*^9, 3.693077490457897*^9}, {3.6930775384838057`*^9, 
   3.693077579218793*^9}, {3.693077694038085*^9, 3.69307770618845*^9}, {
   3.69307774228828*^9, 3.6930777949758987`*^9}, {3.6930778321017523`*^9, 
   3.693077864321579*^9}, {3.6930779203038282`*^9, 3.693078089852343*^9}, {
   3.69307831236777*^9, 3.693078409747609*^9}, 3.69307845669662*^9, {
   3.693078590999906*^9, 3.693078615379839*^9}, 3.693078729321035*^9, {
   3.693078845455121*^9, 3.6930788511232986`*^9}, {3.693078964433717*^9, 
   3.693079007523757*^9}, {3.693079165813501*^9, 3.6930792255070133`*^9}, 
   3.6930793794001627`*^9, {3.6930794800185337`*^9, 3.693079480545126*^9}, {
   3.693118208735978*^9, 3.6931182135957537`*^9}, {3.693118367283942*^9, 
   3.693118367778916*^9}, {3.693119180371903*^9, 3.693119207072216*^9}, {
   3.6931192868366423`*^9, 3.693119457887116*^9}, {3.693119497903677*^9, 
   3.6931195137195873`*^9}, {3.693119557160996*^9, 3.693119626828535*^9}, {
   3.693119687975849*^9, 3.693119806189426*^9}, {3.693119849626981*^9, 
   3.693119878842458*^9}, 3.693119933980702*^9, {3.6931199759426394`*^9, 
   3.6931200499919243`*^9}, {3.693120095228389*^9, 3.693120138495245*^9}, {
   3.693120181561833*^9, 3.693120246102249*^9}, {3.693120497387494*^9, 
   3.6931205895259733`*^9}, {3.693120632006068*^9, 3.693120725301723*^9}, {
   3.693120798621179*^9, 3.693120800239562*^9}, {3.693120845690885*^9, 
   3.6931211828019257`*^9}, {3.693121303808119*^9, 3.693121318173365*^9}, {
   3.693121423283926*^9, 3.693121432564311*^9}, {3.69312160964279*^9, 
   3.693121636045285*^9}, {3.693121723988852*^9, 3.69312176239581*^9}, {
   3.6931218008386917`*^9, 3.693121800927327*^9}, {3.693122233854539*^9, 
   3.693122238354645*^9}, {3.693122306531374*^9, 3.693122339930252*^9}, {
   3.693122435806773*^9, 3.6931225060854797`*^9}, {3.6931226468128557`*^9, 
   3.693122647420671*^9}, {3.693122995635252*^9, 3.6931229964887857`*^9}, {
   3.693123155523423*^9, 3.6931231833092127`*^9}, {3.693123226341736*^9, 
   3.6931237633641357`*^9}, {3.69312379900585*^9, 3.693123861814042*^9}, {
   3.693124042739109*^9, 3.693124187347698*^9}, {3.693124234667306*^9, 
   3.693124241214312*^9}, 3.6931242729625893`*^9, {3.693124313305284*^9, 
   3.6931243433310337`*^9}, {3.693124451220457*^9, 3.693124493814406*^9}, {
   3.693124606775578*^9, 3.693124628611472*^9}, {3.693124667166486*^9, 
   3.693124688756648*^9}, {3.693124726399164*^9, 3.693124726543972*^9}, {
   3.6931247664040937`*^9, 3.6931248204033813`*^9}, {3.693124923297785*^9, 
   3.693124927020896*^9}, {3.693125051010206*^9, 3.69312515297053*^9}, {
   3.693125186731436*^9, 3.693125210096781*^9}, {3.693125250812744*^9, 
   3.693125273322225*^9}, {3.693125308243352*^9, 3.6931253323750134`*^9}, {
   3.693125367902429*^9, 3.6931255235132637`*^9}, {3.693125562485807*^9, 
   3.693125565983643*^9}, {3.6931256116383133`*^9, 3.693125767360626*^9}, {
   3.6931258979792013`*^9, 3.6931259700647497`*^9}, {3.693131157930662*^9, 
   3.693131164933585*^9}, {3.69313158582266*^9, 3.693131642224411*^9}, {
   3.693131674301173*^9, 3.693131678081081*^9}, {3.693131763199751*^9, 
   3.693131792979025*^9}, {3.6931321874196033`*^9, 3.6931321903775597`*^9}, {
   3.693132743909666*^9, 3.6931327442578497`*^9}, {3.693133498162147*^9, 
   3.693133500816671*^9}, {3.693135348121587*^9, 3.6931353524176292`*^9}, {
   3.693136172853754*^9, 3.69313617988503*^9}, 3.693139189469515*^9, {
   3.693212873703341*^9, 3.69321288705133*^9}, {3.6932129469121733`*^9, 
   3.693212947621008*^9}, {3.693212977691599*^9, 3.6932129788953447`*^9}, {
   3.6932130117226677`*^9, 3.693213040922073*^9}, {3.693213075606496*^9, 
   3.693213090544557*^9}, {3.693213203045075*^9, 3.693213233452401*^9}, {
   3.693213266404847*^9, 3.6932132988588457`*^9}, {3.693213334937413*^9, 
   3.693213345703047*^9}, {3.69321338577612*^9, 3.6932136035944433`*^9}, {
   3.693213639043736*^9, 3.693213863510091*^9}, {3.693213921989643*^9, 
   3.693214265884457*^9}, {3.693214323687562*^9, 3.693214499364394*^9}, {
   3.693214539572698*^9, 3.6932149868544607`*^9}, {3.693215147987502*^9, 
   3.693215170407238*^9}, {3.693215244881469*^9, 3.693215413899234*^9}, {
   3.6932154754818363`*^9, 3.693215492919259*^9}, {3.693215656164893*^9, 
   3.693215723282441*^9}, {3.693215808879631*^9, 3.693215859585268*^9}, {
   3.693216116314464*^9, 3.693216128362776*^9}, {3.693216836969988*^9, 
   3.6932168899803543`*^9}, {3.693390077980316*^9, 3.6933900807144537`*^9}, {
   3.693390118370039*^9, 3.693390137369686*^9}, 3.693390225539995*^9, {
   3.693390274633972*^9, 3.693390291005924*^9}, {3.6935088356662083`*^9, 
   3.693508844811535*^9}, {3.693547870609191*^9, 3.693547876840765*^9}, {
   3.693549311547332*^9, 3.693549311635388*^9}, {3.693549416441812*^9, 
   3.693549431000176*^9}, {3.693549678314641*^9, 3.693549684555966*^9}, {
   3.693549725472664*^9, 3.6935497380601587`*^9}, {3.693549774658777*^9, 
   3.693549884615756*^9}, {3.693549935084861*^9, 3.693550159345563*^9}, {
   3.6935501900133963`*^9, 3.6935502047604303`*^9}, {3.693550826467147*^9, 
   3.6935508380755157`*^9}, {3.693550875056007*^9, 3.6935510718406467`*^9}, {
   3.693551306947064*^9, 3.693551314888282*^9}, {3.693551369351716*^9, 
   3.6935514829989223`*^9}, {3.6935515754880238`*^9, 3.693551587602271*^9}, {
   3.693551778113003*^9, 3.693551784648252*^9}, {3.693551896430581*^9, 
   3.693551896621065*^9}, {3.693552009392975*^9, 3.6935520106744537`*^9}, {
   3.693552076071445*^9, 3.693552082382131*^9}, {3.693552190677342*^9, 
   3.6935521924424133`*^9}, {3.693552374064519*^9, 3.693552385159031*^9}, {
   3.6935524365828447`*^9, 3.693552456012289*^9}, {3.693552495342204*^9, 
   3.69355250069598*^9}, {3.693552564608667*^9, 3.693552591214561*^9}, {
   3.693552637522148*^9, 3.69355265384328*^9}, {3.693552720658547*^9, 
   3.693552746308487*^9}, {3.6935527768421803`*^9, 3.693552797754736*^9}, {
   3.6935530058382397`*^9, 3.693553054966484*^9}, {3.693553091497259*^9, 
   3.693553091912405*^9}, {3.6935567557935743`*^9, 3.6935567709909763`*^9}, {
   3.6935593472127132`*^9, 3.6935594054084167`*^9}, 3.693568766414254*^9, {
   3.693569059636038*^9, 3.69356910626648*^9}, {3.693574565047756*^9, 
   3.693574568927229*^9}, {3.693934190497493*^9, 3.693934208719932*^9}, {
   3.69393437710388*^9, 3.693934399119731*^9}, {3.693935983654544*^9, 
   3.693935997152545*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solve mean dynamics", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.69296369103893*^9, {3.6929637216735687`*^9, 3.692963735591319*^9}, 
   3.692964078100669*^9, {3.6929746259898977`*^9, 3.69297462997047*^9}, {
   3.693034961076106*^9, 3.693034985806531*^9}, {3.693048092395323*^9, 
   3.693048098029875*^9}, {3.693077380358386*^9, 3.6930773823300533`*^9}, {
   3.6930794923718157`*^9, 3.693079502571559*^9}, {3.6931181747720957`*^9, 
   3.6931181811497602`*^9}, {3.6931183630090923`*^9, 3.693118364695942*^9}, {
   3.693122904584697*^9, 3.6931229410689173`*^9}, 3.6931346290431128`*^9, {
   3.693134785562076*^9, 3.6931348020534277`*^9}, {3.693136120247036*^9, 
   3.693136137762746*^9}, {3.693547818767255*^9, 3.693547820801915*^9}, {
   3.693934271832981*^9, 3.6939342864229116`*^9}, {3.693935338063829*^9, 
   3.693935340399613*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NDSolveMeanDynamics", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"ip_:", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"time_:", "300"}], ",", 
     RowBox[{"tolerance_:", 
      RowBox[{"10.", "^", 
       RowBox[{"-", "4"}]}]}], ",", 
     RowBox[{"accuracyGoal_:", "6"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "interiorFPRestPoint", ",", "vars", ",", "rulesToAddt", ",", 
       "varsWitht", ",", "Dvars", ",", "projectedEM", ",", "FinalPoint", ",", 
       "sol", ",", "finalTime", ",", "initialPoint"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ip", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"initialPoint", "=", 
         RowBox[{"First", "[", 
          RowBox[{"RandomPoints", "[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"initialPoint", "=", "ip"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rulesToAddt", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "i_Integer", "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"y", "[", "i_Integer", "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], "[", "t", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"varsWitht", "=", 
       RowBox[{"vars", "/.", "rulesToAddt"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Dvars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], "'"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"y", "[", "i", "]"}], "'"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interiorFPRestPoint", "=", 
       RowBox[{"vars", "/.", 
        RowBox[{"FloatingPointApproximateRestPoint", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Numerical (floating-point) approximation to interior exact \
solution: \\n\>\"", ",", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{"vars", "\[Rule]", "interiorFPRestPoint"}], "]"}]}], 
         "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"projectedEM", "=", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
              RowBox[{
               FractionBox["1", "s1"], 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}], ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
              RowBox[{
               FractionBox["1", "s2"], 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], "}"}]}], 
          "}"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ExpectedMove", "[", 
           RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}], "/.",
           "rulesToAddt"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "NDSolve", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<We now solve the differential equation numerically (with \
NDSolve), starting at the initial point: \>\"", ",", " ", "initialPoint"}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"finalTime", "=", "time"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"Dvars", "\[Equal]", "projectedEM"}], "]"}], ",", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"varsWitht", "/.", 
               RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "==", "initialPoint"}],
             "]"}], ",", 
           RowBox[{"WhenEvent", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{"varsWitht", "-", "interiorFPRestPoint"}], "]"}], "<",
                "tolerance"}], "]"}], ",", " ", 
             RowBox[{"\"\<StopIntegration\>\"", ";", 
              RowBox[{"finalTime", "=", "t"}]}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "vars", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "accuracyGoal"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Tooltip", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", "t", "]"}], "&"}], ",", "sol"}], "]"}], 
                ",", "vars"}], "}"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "vars"}]}], "]"}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "@", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{"Tooltip", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "t", "]"}], "&"}], ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", "s1"}], "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"vars", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", "s1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
                RowBox[{"PlotLegends", "\[Rule]", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", 
                   RowBox[{";;", "s1"}], "]"}], "]"}]}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", "\"\<First mover\>\""}], ",", 
                
                RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{"Tooltip", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "t", "]"}], "&"}], ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"vars", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], "}"}]}],
                   "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
                RowBox[{"PlotLegends", "\[Rule]", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", "\"\<Second mover\>\""}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\"\<                \>\"", 
            ",", " ", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameMargins", "\[Rule]", "15"}], ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "15"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"finalTime", "\[GreaterEqual]", "time"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Fixed point not reached:\\n\\t\>\"", ",", "initialPoint", ",", 
           "\"\<\\n\\t-> \>\"", ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", "finalTime", "]"}], "&"}], ",", "sol"}], 
            "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"initialPoint", ",", "sol", ",", "finalTime", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "finalTime", "]"}], "&"}], ",", "sol"}], "]"}]}],
        "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.6929629234064693`*^9, 3.69296294601011*^9}, {
   3.6929629764593973`*^9, 3.692963023195012*^9}, {3.692963069717833*^9, 
   3.69296308749763*^9}, {3.692963219741576*^9, 3.6929632223092957`*^9}, {
   3.692964682290263*^9, 3.692964683447137*^9}, 3.6929654379599857`*^9, 
   3.692965474270513*^9, {3.6930306479026747`*^9, 3.693030679323847*^9}, {
   3.693030798181374*^9, 3.693030879070979*^9}, {3.693030931788656*^9, 
   3.693030954603158*^9}, {3.693034999107688*^9, 3.693035077418137*^9}, {
   3.693035410896613*^9, 3.69303549234416*^9}, {3.693035541228005*^9, 
   3.6930356094477654`*^9}, {3.6930356624252367`*^9, 3.693035791113544*^9}, {
   3.693035839905964*^9, 3.693036109614914*^9}, {3.693036146246714*^9, 
   3.6930361463916597`*^9}, {3.693036194879775*^9, 3.6930361950595427`*^9}, 
   3.693036242693877*^9, 3.693036280662298*^9, {3.693036330084895*^9, 
   3.693036357623316*^9}, {3.693036408700644*^9, 3.693036434495562*^9}, {
   3.693043264799168*^9, 3.693043283381342*^9}, {3.69304341287125*^9, 
   3.6930436838174067`*^9}, {3.693043715050647*^9, 3.693043776744258*^9}, {
   3.693043822498876*^9, 3.693043849025916*^9}, {3.693043917125638*^9, 
   3.69304391757306*^9}, {3.693044030130754*^9, 3.693044030343109*^9}, {
   3.693044079437996*^9, 3.693044093286892*^9}, {3.693044256538232*^9, 
   3.6930442783762493`*^9}, {3.693044334030428*^9, 3.6930443481037273`*^9}, {
   3.693044383744624*^9, 3.693044463439193*^9}, {3.693044522975108*^9, 
   3.6930445253600473`*^9}, {3.693044596764471*^9, 3.693044612603849*^9}, {
   3.6930446590015917`*^9, 3.693044674332452*^9}, {3.693044814679574*^9, 
   3.69304482339705*^9}, {3.693044853998912*^9, 3.693044854143462*^9}, {
   3.6930481835330553`*^9, 3.693048480725987*^9}, {3.693048549151033*^9, 
   3.693048584080016*^9}, {3.6930486994860563`*^9, 3.6930487048623857`*^9}, 
   3.693048758030361*^9, {3.693048982809445*^9, 3.693049014471086*^9}, {
   3.693049058971043*^9, 3.6930490777241583`*^9}, {3.6930491080896*^9, 
   3.693049108267416*^9}, {3.6930491870988283`*^9, 3.6930492642066793`*^9}, {
   3.693049303110132*^9, 3.6930493125378933`*^9}, {3.693049424183223*^9, 
   3.693049495361576*^9}, {3.693049529575734*^9, 3.693049673012764*^9}, {
   3.693049708238514*^9, 3.6930497564094687`*^9}, {3.6930497893169823`*^9, 
   3.693049934903861*^9}, 3.6930499798706007`*^9, {3.693050009887102*^9, 
   3.69305007506955*^9}, 3.69305016346246*^9, {3.693050211567978*^9, 
   3.6930502125788603`*^9}, {3.6930503148544693`*^9, 3.693050342564679*^9}, {
   3.693050402663072*^9, 3.693050420346887*^9}, {3.693050452680172*^9, 
   3.693050499771912*^9}, {3.693050579907385*^9, 3.693050621837256*^9}, {
   3.693050691104643*^9, 3.693050827973007*^9}, {3.6930508618918343`*^9, 
   3.6930508633185062`*^9}, 3.6930510478727283`*^9, {3.693051082427108*^9, 
   3.693051085632002*^9}, {3.6930710340169477`*^9, 3.6930710389418297`*^9}, {
   3.693071166520637*^9, 3.693071177027629*^9}, {3.693071639896963*^9, 
   3.693071654065407*^9}, {3.693071689222386*^9, 3.6930717096625*^9}, {
   3.69307191679068*^9, 3.693071924000499*^9}, {3.6930721151974363`*^9, 
   3.693072139810733*^9}, {3.693072179041892*^9, 3.6930721792989473`*^9}, {
   3.693072216549736*^9, 3.693072259590742*^9}, {3.693072303220688*^9, 
   3.693072306718528*^9}, {3.693072611577721*^9, 3.693072632907782*^9}, {
   3.693072768921667*^9, 3.693072819059703*^9}, {3.693072958403688*^9, 
   3.693072966131928*^9}, {3.6930730020560293`*^9, 3.693073034251113*^9}, {
   3.693073074990279*^9, 3.693073098589579*^9}, {3.693073173356555*^9, 
   3.69307319022351*^9}, {3.693073591854301*^9, 3.693073599243868*^9}, {
   3.693074522080312*^9, 3.693074531433296*^9}, {3.693074563010098*^9, 
   3.693074565011388*^9}, {3.693074632377429*^9, 3.693074656496521*^9}, {
   3.6930747223915167`*^9, 3.693074729455771*^9}, {3.693074765848729*^9, 
   3.693074772237833*^9}, {3.6930748314266148`*^9, 3.693074835623746*^9}, {
   3.693075141173842*^9, 3.6930751920356293`*^9}, {3.693075274726447*^9, 
   3.6930752751645117`*^9}, {3.693075367752994*^9, 3.693075397013144*^9}, {
   3.693075431868629*^9, 3.693075451621839*^9}, {3.6930755163448133`*^9, 
   3.6930755258894*^9}, {3.693075631361353*^9, 3.693075632872354*^9}, {
   3.69307566764463*^9, 3.693075727103052*^9}, {3.693075762340706*^9, 
   3.6930758585040503`*^9}, {3.693076019304442*^9, 3.693076112385638*^9}, {
   3.693076146476161*^9, 3.693076210330202*^9}, {3.693076241133575*^9, 
   3.6930762590646963`*^9}, {3.693076307643962*^9, 3.693076318352318*^9}, {
   3.6930763741338263`*^9, 3.693076401538115*^9}, {3.6930764496657333`*^9, 
   3.693076453353778*^9}, {3.693076489638171*^9, 3.693076526727418*^9}, {
   3.6930765671956577`*^9, 3.693076636383827*^9}, {3.6930766693692513`*^9, 
   3.693076718002123*^9}, 3.693077051669463*^9, {3.693077087469307*^9, 
   3.6930770886823893`*^9}, {3.693077401808311*^9, 3.6930774193324137`*^9}, {
   3.693077461690168*^9, 3.693077490457897*^9}, {3.6930775384838057`*^9, 
   3.693077579218793*^9}, {3.693077694038085*^9, 3.69307770618845*^9}, {
   3.69307774228828*^9, 3.6930777949758987`*^9}, {3.6930778321017523`*^9, 
   3.693077864321579*^9}, {3.6930779203038282`*^9, 3.693078089852343*^9}, {
   3.69307831236777*^9, 3.693078409747609*^9}, 3.69307845669662*^9, {
   3.693078590999906*^9, 3.693078615379839*^9}, 3.693078729321035*^9, {
   3.693078845455121*^9, 3.6930788511232986`*^9}, {3.693078964433717*^9, 
   3.693079007523757*^9}, {3.693079165813501*^9, 3.6930792255070133`*^9}, 
   3.6930793794001627`*^9, {3.6930794800185337`*^9, 3.693079480545126*^9}, {
   3.693118208735978*^9, 3.6931182135957537`*^9}, {3.693118367283942*^9, 
   3.693118367778916*^9}, {3.693119180371903*^9, 3.693119207072216*^9}, {
   3.6931192868366423`*^9, 3.693119457887116*^9}, {3.693119497903677*^9, 
   3.6931195137195873`*^9}, {3.693119557160996*^9, 3.693119626828535*^9}, {
   3.693119687975849*^9, 3.693119806189426*^9}, {3.693119849626981*^9, 
   3.693119878842458*^9}, 3.693119933980702*^9, {3.6931199759426394`*^9, 
   3.6931200499919243`*^9}, {3.693120095228389*^9, 3.693120138495245*^9}, {
   3.693120181561833*^9, 3.693120246102249*^9}, {3.693120497387494*^9, 
   3.6931205895259733`*^9}, {3.693120632006068*^9, 3.693120725301723*^9}, {
   3.693120798621179*^9, 3.693120800239562*^9}, {3.693120845690885*^9, 
   3.6931211828019257`*^9}, {3.693121303808119*^9, 3.693121318173365*^9}, {
   3.693121423283926*^9, 3.693121432564311*^9}, {3.69312160964279*^9, 
   3.693121636045285*^9}, {3.693121723988852*^9, 3.69312176239581*^9}, {
   3.6931218008386917`*^9, 3.693121800927327*^9}, {3.693122233854539*^9, 
   3.693122238354645*^9}, {3.693122306531374*^9, 3.693122339930252*^9}, {
   3.693122435806773*^9, 3.6931225060854797`*^9}, {3.6931226468128557`*^9, 
   3.693122647420671*^9}, {3.693122995635252*^9, 3.6931229964887857`*^9}, {
   3.693123155523423*^9, 3.6931231833092127`*^9}, {3.693123226341736*^9, 
   3.6931237633641357`*^9}, {3.69312379900585*^9, 3.693123861814042*^9}, {
   3.693124042739109*^9, 3.693124187347698*^9}, {3.693124234667306*^9, 
   3.693124241214312*^9}, 3.6931242729625893`*^9, {3.693124313305284*^9, 
   3.6931243433310337`*^9}, {3.693124451220457*^9, 3.693124493814406*^9}, {
   3.693124606775578*^9, 3.693124628611472*^9}, {3.693124667166486*^9, 
   3.693124688756648*^9}, {3.693124726399164*^9, 3.693124726543972*^9}, {
   3.6931247664040937`*^9, 3.6931248204033813`*^9}, {3.693124923297785*^9, 
   3.693124927020896*^9}, {3.693125051010206*^9, 3.69312515297053*^9}, {
   3.693125186731436*^9, 3.693125210096781*^9}, {3.693125250812744*^9, 
   3.693125273322225*^9}, {3.693125308243352*^9, 3.6931253323750134`*^9}, {
   3.693125367902429*^9, 3.6931255235132637`*^9}, {3.693125562485807*^9, 
   3.693125565983643*^9}, {3.6931256116383133`*^9, 3.693125767360626*^9}, {
   3.6931258979792013`*^9, 3.6931259700647497`*^9}, {3.693131157930662*^9, 
   3.693131164933585*^9}, {3.69313158582266*^9, 3.693131642224411*^9}, {
   3.693131674301173*^9, 3.693131678081081*^9}, {3.693131763199751*^9, 
   3.693131792979025*^9}, {3.6931321874196033`*^9, 3.6931321903775597`*^9}, {
   3.693132743909666*^9, 3.6931327442578497`*^9}, {3.693133498162147*^9, 
   3.693133500816671*^9}, {3.693135348121587*^9, 3.6931353524176292`*^9}, {
   3.693136172853754*^9, 3.69313617988503*^9}, 3.693139189469515*^9, {
   3.693212873703341*^9, 3.69321288705133*^9}, {3.6932129469121733`*^9, 
   3.693212947621008*^9}, {3.693212977691599*^9, 3.6932129788953447`*^9}, {
   3.6932130117226677`*^9, 3.693213040922073*^9}, {3.693213075606496*^9, 
   3.693213090544557*^9}, {3.693213203045075*^9, 3.693213233452401*^9}, {
   3.693213266404847*^9, 3.6932132988588457`*^9}, {3.693213334937413*^9, 
   3.693213345703047*^9}, {3.69321338577612*^9, 3.6932136035944433`*^9}, {
   3.693213639043736*^9, 3.693213863510091*^9}, {3.693213921989643*^9, 
   3.693214265884457*^9}, {3.693214323687562*^9, 3.693214499364394*^9}, {
   3.693214539572698*^9, 3.6932149868544607`*^9}, {3.693215147987502*^9, 
   3.693215170407238*^9}, {3.693215244881469*^9, 3.693215413899234*^9}, {
   3.6932154754818363`*^9, 3.693215492919259*^9}, {3.693215656164893*^9, 
   3.693215723282441*^9}, {3.693215808879631*^9, 3.693215859585268*^9}, {
   3.693216116314464*^9, 3.693216128362776*^9}, {3.693216836969988*^9, 
   3.6932168899803543`*^9}, {3.693390077980316*^9, 3.6933900807144537`*^9}, {
   3.693390118370039*^9, 3.693390137369686*^9}, 3.693390225539995*^9, {
   3.693390274633972*^9, 3.693390291005924*^9}, {3.6935088356662083`*^9, 
   3.693508844811535*^9}, {3.693547870609191*^9, 3.693547876840765*^9}, {
   3.693549311547332*^9, 3.693549311635388*^9}, {3.693549416441812*^9, 
   3.693549431000176*^9}, {3.693549678314641*^9, 3.693549684555966*^9}, {
   3.693549725472664*^9, 3.6935497380601587`*^9}, {3.693549774658777*^9, 
   3.693549884615756*^9}, {3.693549935084861*^9, 3.693550159345563*^9}, {
   3.6935501900133963`*^9, 3.6935502047604303`*^9}, {3.693550826467147*^9, 
   3.6935508380755157`*^9}, {3.693550875056007*^9, 3.6935510718406467`*^9}, {
   3.693551306947064*^9, 3.693551314888282*^9}, {3.693551369351716*^9, 
   3.6935514829989223`*^9}, {3.6935515754880238`*^9, 3.693551587602271*^9}, {
   3.693551778113003*^9, 3.693551784648252*^9}, {3.693551896430581*^9, 
   3.693551896621065*^9}, {3.693552009392975*^9, 3.6935520106744537`*^9}, {
   3.693552076071445*^9, 3.693552082382131*^9}, {3.693552190677342*^9, 
   3.6935521924424133`*^9}, {3.693552374064519*^9, 3.693552385159031*^9}, {
   3.6935524365828447`*^9, 3.693552456012289*^9}, {3.693552495342204*^9, 
   3.69355250069598*^9}, {3.693552564608667*^9, 3.693552591214561*^9}, {
   3.693552637522148*^9, 3.69355265384328*^9}, {3.693552720658547*^9, 
   3.693552746308487*^9}, {3.6935527768421803`*^9, 3.693552797754736*^9}, {
   3.6935530058382397`*^9, 3.693553054966484*^9}, {3.693553091497259*^9, 
   3.693553091912405*^9}, {3.6935567557935743`*^9, 3.6935567709909763`*^9}, {
   3.6935593472127132`*^9, 3.6935594054084167`*^9}, 3.693568766414254*^9, {
   3.693569059636038*^9, 3.69356910626648*^9}, {3.693574565047756*^9, 
   3.693574568927229*^9}, {3.693934190497493*^9, 3.693934208719932*^9}, {
   3.6939342908364677`*^9, 3.6939343103788*^9}, {3.693934346762501*^9, 
   3.693934354591413*^9}, {3.693934413263646*^9, 3.693934482674617*^9}, {
   3.693934553686747*^9, 3.693934665694441*^9}, {3.693934698364242*^9, 
   3.69393481757242*^9}, {3.693935125344976*^9, 3.693935148732542*^9}, {
   3.693935357266725*^9, 3.693935358616227*^9}, {3.693935452544137*^9, 
   3.693935458922089*^9}, {3.693935592181519*^9, 3.693935622566729*^9}, {
   3.693935680100809*^9, 3.6939357981939*^9}, {3.69393591118036*^9, 
   3.693935955988894*^9}, {3.6940834949218493`*^9, 3.694083528959385*^9}, {
   3.694083602377006*^9, 3.694083605702134*^9}, {3.694083656314159*^9, 
   3.694083661615933*^9}, {3.69408378051335*^9, 3.6940837850648527`*^9}, {
   3.694083818141468*^9, 3.694083818517556*^9}, {3.694083848610623*^9, 
   3.6940838576498404`*^9}, {3.694083965776401*^9, 3.69408397155042*^9}, {
   3.6940841341457367`*^9, 3.694084153337166*^9}, {3.694084283541135*^9, 
   3.69408429047682*^9}, {3.694084340038885*^9, 3.694084414860186*^9}, {
   3.694084462975082*^9, 3.694084470836763*^9}, {3.694084525329296*^9, 
   3.694084571471583*^9}, {3.6940846548806953`*^9, 3.6940846550855722`*^9}, {
   3.69408475629461*^9, 3.6940848154757967`*^9}, {3.6940848692042837`*^9, 
   3.694084871586136*^9}, {3.694084936168445*^9, 3.6940849616622562`*^9}, {
   3.6940856533508263`*^9, 3.694085655014455*^9}},
 Background->GrayLevel[0.85]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameterization", "Section",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.692974713726569*^9, 3.692974745779025*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testSetRule", "=", "\"\<all\>\""}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Possible", " ", "values", " ", "are", " ", "\"\<all\>\""}], ",", 
    " ", 
    RowBox[{"\"\<two\>\"", " ", "or", " ", "\"\<adj\>\""}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tieBreakingRule", "=", "\"\<min\>\""}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Possible", " ", "values", " ", "are", " ", "\"\<min\>\""}], ",", 
    " ", 
    RowBox[{"\"\<stick\>\"", " ", "or", " ", "\"\<unif\>\""}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "3"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "n", " ", "is", " ", "the", " ", "number", " ", "of", " ", "nodes", " ", 
    "in", " ", "the", " ", "Centipede", " ", "game"}], " ", 
   "*)"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{
  3.692975047215006*^9, {3.692975088797179*^9, 3.692975199305222*^9}, {
   3.69297523717423*^9, 3.692975289114956*^9}, {3.6929754762844887`*^9, 
   3.692975504408434*^9}, {3.6929756243359413`*^9, 3.6929756351010227`*^9}, {
   3.6929757432152367`*^9, 3.692975751416935*^9}, {3.692975799004833*^9, 
   3.692975807576396*^9}, 3.6930309860700817`*^9, {3.69303110386933*^9, 
   3.693031121093121*^9}, {3.693031570827085*^9, 3.693031570927561*^9}, {
   3.693031617167008*^9, 3.6930316172217817`*^9}},
 Background->GrayLevel[0.85]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples of usage", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.692974713726569*^9, 3.692974745779025*^9}, {
  3.692975725474792*^9, 3.6929757289605*^9}, {3.693048053256386*^9, 
  3.6930480564046507`*^9}, {3.6931347632003527`*^9, 3.693134766629697*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testSetRule", "=", "\"\<adj\>\""}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Possible", " ", "values", " ", "are", " ", "\"\<all\>\""}], ",",
      " ", 
     RowBox[{"\"\<two\>\"", " ", "or", " ", "\"\<adj\>\""}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"tieBreakingRule", "=", "\"\<min\>\""}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Possible", " ", "values", " ", "are", " ", "\"\<min\>\""}], ",", 
    " ", 
    RowBox[{"\"\<stick\>\"", " ", "or", " ", "\"\<unif\>\""}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "18"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "n", " ", "is", " ", "the", " ", "number", " ", "of", " ", "nodes", " ", 
     "in", " ", "the", " ", "Centipede", " ", "game"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"verbosity", "=", "1"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "higher", " ", "the", " ", "value", " ", "of", " ", 
      "verbosity"}], ",", " ", 
     RowBox[{
     "the", " ", "more", " ", "messages", " ", "are", " ", "printed", " ", 
      "along", " ", "the", " ", "execution", " ", "of", " ", "any", " ", 
      RowBox[{"function", ".", " ", "0"}], " ", "prints", " ", "no", " ", 
      RowBox[{"messages", ".", " ", "10"}], " ", "prints", " ", "all", " ", 
      "implemented", " ", "messages"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"nAgentsPerPopulation", "=", "4"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixForm", "[", 
      RowBox[{"ExpectedMove", "[", 
       RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}], 
      "]"}], "\[IndentingNewLine]", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"JacobianOfExpectedMove", "@", 
       RowBox[{"ExpectedMove", "[", 
        RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}]}], 
      "]"}], "\[IndentingNewLine]", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"ProjectedJacobian", "@", 
       RowBox[{"ExpectedMove", "[", 
        RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}]}], 
      "]"}], "\[IndentingNewLine]", 
     RowBox[{"MatrixForm", "@", 
      RowBox[{"ExpectedMoveWithoutFirstVariables", "[", 
       RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"MatrixForm", "@", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"ExpectedMoveWithoutLastVariables", "[", 
        RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}], 
       "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "EM"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ExpectedMove", "[", 
       RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}], 
      "\[IndentingNewLine]", "EM"}], "=", 
     RowBox[{"ExpectedMoveWithoutLastVariables", "[", 
      RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}]}]}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"a", "=", 
    RowBox[{"ExactRestPoints", "[", 
     RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n", ",", "4"}], 
     "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"NExactRestPoints", "[", 
      RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n", ",", "0"}], 
      "]"}], "\[IndentingNewLine]", 
     RowBox[{"FloatingPointApproximateRestPoint", "[", 
      RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "10"}], "]"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"RationalApproximateRestPoint", "[", 
     RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"EigenvaluesAtRationalApproximateRestPoint", "[", 
     RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "6"}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"LocalStabilityOfInteriorRestPoint", "[", 
      RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "3", ",", "10"}], 
      "]"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"GlobalStabilityOfInteriorRestPoint", "[", 
     RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "3", ",", "10"}], 
     "]"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"NumericalGlobalStabilityOfInteriorRestPointLyapunov", "[", 
     RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
      RowBox[{"MeshPoints", "[", 
       RowBox[{"n", ",", "nAgentsPerPopulation"}], "]"}]}], "]"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"NumericalGlobalStabilityOfInteriorRestPointNDSolve", "[", 
     RowBox[{"testSetRule", ",", "tieBreakingRule", ",", "n", ",", 
      RowBox[{"MeshPoints", "[", 
       RowBox[{"n", ",", "nAgentsPerPopulation"}], "]"}], ",", "5"}], "]"}]}],
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ExactRestPoints", "[", 
     RowBox[{
     "testSetRule", ",", "tieBreakingRule", ",", "n", ",", "verbosity"}], 
     "]"}], ";"}], "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s1", "=", 
   RowBox[{"IntegerPart", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ";", 
  RowBox[{"s2", "=", 
   RowBox[{"IntegerPart", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"NDSolveMeanDynamics", "[", 
  RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"PadRight", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.99", ",", "0.01"}], "}"}], ",", "s1"}], "]"}], ",", 
     RowBox[{"PadRight", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.99", ",", "0.01"}], "}"}], ",", "s2"}], "]"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NDSolveMeanDynamics", "[", 
  RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.692975047215006*^9, {3.692975088797179*^9, 3.692975199305222*^9}, {
   3.69297523717423*^9, 3.692975289114956*^9}, {3.6929754762844887`*^9, 
   3.692975504408434*^9}, {3.6929756243359413`*^9, 3.6929756351010227`*^9}, {
   3.6929757358008127`*^9, 3.692975736441908*^9}, 3.692975830166924*^9, {
   3.69302977035063*^9, 3.693029797428689*^9}, 3.693030332585636*^9, 
   3.693030630971014*^9, {3.693030883874892*^9, 3.693030903112176*^9}, {
   3.6930315625703173`*^9, 3.693031606490834*^9}, {3.693032203298127*^9, 
   3.69303221396139*^9}, 3.693032246260235*^9, {3.693032535672368*^9, 
   3.693032574191389*^9}, {3.693032647260107*^9, 3.693032652017477*^9}, {
   3.693032754900141*^9, 3.693032755068519*^9}, {3.693032824933354*^9, 
   3.693032935610723*^9}, {3.693032996399757*^9, 3.6930330391584167`*^9}, {
   3.6930332802360573`*^9, 3.693033387415485*^9}, {3.693033434681181*^9, 
   3.693033435082036*^9}, 3.6930334687564573`*^9, {3.693033559374235*^9, 
   3.6930335625582933`*^9}, {3.693034187411571*^9, 3.693034208651308*^9}, {
   3.69303429221867*^9, 3.693034305235421*^9}, {3.693034386718275*^9, 
   3.693034390857499*^9}, {3.693034547331245*^9, 3.69303456135014*^9}, {
   3.693034599661539*^9, 3.693034606106017*^9}, {3.693034747914288*^9, 
   3.693034764282517*^9}, 3.693034992875801*^9, {3.693036119527012*^9, 
   3.693036136333589*^9}, {3.693036172705587*^9, 3.693036172873208*^9}, {
   3.693036204252293*^9, 3.69303622223368*^9}, {3.693036307045583*^9, 
   3.693036315693585*^9}, {3.6930364470834637`*^9, 3.693036453079843*^9}, {
   3.6930441336539183`*^9, 3.693044135497573*^9}, 3.6930441772602158`*^9, {
   3.6930442324292717`*^9, 3.693044233147605*^9}, {3.693044538701795*^9, 
   3.693044539510304*^9}, 3.693044705033379*^9, {3.6930447605076857`*^9, 
   3.693044760765966*^9}, {3.693044862694368*^9, 3.693044885800033*^9}, {
   3.69304873127813*^9, 3.693048750616518*^9}, {3.6930491212525387`*^9, 
   3.693049141242057*^9}, {3.693050786515298*^9, 3.693050796539874*^9}, 
   3.6930508412803707`*^9, {3.693071726590598*^9, 3.693071726661685*^9}, {
   3.693071761675542*^9, 3.693071762001514*^9}, {3.693071814182863*^9, 
   3.693071835280301*^9}, {3.6930731035514317`*^9, 3.693073103625293*^9}, 
   3.6930732347113*^9, {3.693076010647333*^9, 3.693076010952344*^9}, 
   3.6930761279439983`*^9, {3.69307677735706*^9, 3.693076777603094*^9}, {
   3.693076865490449*^9, 3.693076865584379*^9}, {3.693076924650875*^9, 
   3.693076928770864*^9}, {3.693076975299086*^9, 3.693077005957919*^9}, {
   3.693077058574998*^9, 3.693077058721066*^9}, {3.693077131936964*^9, 
   3.693077132049139*^9}, {3.693077220892823*^9, 3.693077221037602*^9}, {
   3.693078465043336*^9, 3.6930784717039127`*^9}, {3.693078624030554*^9, 
   3.693078634807837*^9}, {3.693078820815043*^9, 3.693078824225215*^9}, 
   3.693078875357153*^9, {3.693121197277875*^9, 3.6931212185960007`*^9}, 
   3.693121777302891*^9, {3.693121879632308*^9, 3.693121888777618*^9}, {
   3.6931219630400467`*^9, 3.693121965628675*^9}, {3.693122189641588*^9, 
   3.6931221897755957`*^9}, {3.693122257185749*^9, 3.69312225726436*^9}, {
   3.693122347368815*^9, 3.6931223697998257`*^9}, {3.693122522342895*^9, 
   3.693122547034219*^9}, {3.6931238798823147`*^9, 3.69312389216055*^9}, 
   3.693124356891985*^9, {3.6931248598015013`*^9, 3.6931248946204147`*^9}, {
   3.6931249348274*^9, 3.693124934860643*^9}, {3.69313117423842*^9, 
   3.693131177397451*^9}, {3.693131816422531*^9, 3.693131816858635*^9}, 
   3.693132733096978*^9, 3.6931330459620867`*^9, {3.693133195622369*^9, 
   3.69313319636368*^9}, {3.693133250094447*^9, 3.693133250319254*^9}, {
   3.693133357702457*^9, 3.693133466287448*^9}, {3.693133516823515*^9, 
   3.693133530401572*^9}, {3.6931335677082043`*^9, 3.693133568617996*^9}, {
   3.693136379090764*^9, 3.693136381588275*^9}, {3.6931365489681396`*^9, 
   3.69313654970795*^9}, {3.6931365810743103`*^9, 3.69313658114939*^9}, {
   3.693137855780232*^9, 3.6931378641138783`*^9}, {3.6931381091077127`*^9, 
   3.693138113089807*^9}, {3.693139015425804*^9, 3.693139017957947*^9}, {
   3.693139138335556*^9, 3.693139138457718*^9}, 3.693207049623445*^9, {
   3.693207085493697*^9, 3.6932070855755043`*^9}, {3.693208365599497*^9, 
   3.693208365688053*^9}, {3.693209542562077*^9, 3.693209554641917*^9}, {
   3.693211685172374*^9, 3.693211687959984*^9}, {3.693211744447153*^9, 
   3.693211744557971*^9}, {3.693211780760618*^9, 3.693211780973938*^9}, {
   3.6932121473037577`*^9, 3.693212147438225*^9}, {3.6932126235347023`*^9, 
   3.693212623802395*^9}, {3.693215003290609*^9, 3.6932150363418016`*^9}, {
   3.693215178214817*^9, 3.693215178427559*^9}, {3.693215218116794*^9, 
   3.6932152182065477`*^9}, {3.693215435149598*^9, 3.6932154352383623`*^9}, {
   3.693215545163601*^9, 3.693215585277892*^9}, {3.693215632351159*^9, 
   3.693215632662388*^9}, {3.693216060606152*^9, 3.6932160686374083`*^9}, 
   3.693216186671022*^9, {3.693216661708159*^9, 3.69321666231351*^9}, 
   3.693216694737233*^9, {3.6932167935666513`*^9, 3.693216793723413*^9}, {
   3.6932172808104*^9, 3.6932172813151903`*^9}, {3.6932174011716413`*^9, 
   3.6932174019583883`*^9}, {3.693267775062633*^9, 3.693267785360216*^9}, {
   3.693268002736112*^9, 3.6932680043770943`*^9}, {3.693268075704467*^9, 
   3.6932680758829203`*^9}, {3.693268214361187*^9, 3.693268214472484*^9}, {
   3.693268255514256*^9, 3.693268255940497*^9}, 3.6933882995897703`*^9, {
   3.693389938122312*^9, 3.69338995857436*^9}, {3.6933903901778584`*^9, 
   3.693390390591707*^9}, 3.6935478523827457`*^9, 3.693547886346887*^9, {
   3.693549102349327*^9, 3.6935491024149323`*^9}, {3.693549137506915*^9, 
   3.693549155662177*^9}, {3.6935491946686077`*^9, 3.693549194778867*^9}, {
   3.69354931824924*^9, 3.693549318642499*^9}, {3.6935493853563843`*^9, 
   3.6935493862446527`*^9}, {3.6935495889389677`*^9, 
   3.6935496133960867`*^9}, {3.693551497151532*^9, 3.6935515695669947`*^9}, {
   3.693552097254628*^9, 3.693552098153618*^9}, {3.69355219726823*^9, 
   3.693552202723551*^9}, {3.693552240975149*^9, 3.693552265094672*^9}, {
   3.693552296505499*^9, 3.693552335395646*^9}, {3.693552641433353*^9, 
   3.6935526623583193`*^9}, 3.69355281572097*^9, {3.69355291580228*^9, 
   3.693552923169395*^9}, {3.693552960640161*^9, 3.6935529883114758`*^9}, {
   3.6935531255947943`*^9, 3.693553149836988*^9}, {3.693556709160446*^9, 
   3.6935567130848627`*^9}, 3.693556808859192*^9, {3.693568781788939*^9, 
   3.693568781878915*^9}, {3.693934010142221*^9, 3.693934011220396*^9}, 
   3.693934064118815*^9, {3.693934871528583*^9, 3.693934893813085*^9}, {
   3.6939352419742603`*^9, 3.693935270638769*^9}, {3.693935301903678*^9, 
   3.693935302207018*^9}, {3.693936006806075*^9, 3.693936040587558*^9}, {
   3.69402190027365*^9, 3.694021903434705*^9}, 3.6940219653105803`*^9, {
   3.694022019763103*^9, 3.694022096913772*^9}, 3.6940833708237886`*^9, {
   3.6940838938469143`*^9, 3.694083897645529*^9}, {3.694084071196023*^9, 
   3.6940840714396563`*^9}, {3.694084107278338*^9, 3.694084107818202*^9}, {
   3.694084439473892*^9, 3.69408443962158*^9}, {3.694084970860441*^9, 
   3.69408497103475*^9}, {3.694085554071391*^9, 3.6940855544044647`*^9}, {
   3.694085629816943*^9, 3.694085629910694*^9}, {3.6940856800970907`*^9, 
   3.694085689023015*^9}, {3.69408571930655*^9, 3.694085719414953*^9}, {
   3.694085769623125*^9, 3.6940857697098846`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Numerical (floating-point) approximation to interior exact \
solution: \\n\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "4", "]"}], "\[Rule]", "3.561791883342726`*^-9"}], 
     ",", 
     RowBox[{
      RowBox[{"x", "[", "5", "]"}], "\[Rule]", "0.0005933986567782835`"}], 
     ",", 
     RowBox[{
      RowBox[{"x", "[", "6", "]"}], "\[Rule]", "0.05807158506526721`"}], ",", 
     
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "\[Rule]", "0.2819567721578138`"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "8", "]"}], "\[Rule]", "0.3432485749922069`"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "9", "]"}], "\[Rule]", "0.24226280160390945`"}], ",", 
     
     RowBox[{
      RowBox[{"x", "[", "10", "]"}], "\[Rule]", "0.07386686396223253`"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "1", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "2", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "3", "]"}], "\[Rule]", "2.1366058394916076`*^-14"}], 
     ",", 
     RowBox[{
      RowBox[{"y", "[", "4", "]"}], "\[Rule]", "6.00232316029848`*^-6"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "5", "]"}], "\[Rule]", "0.010109098352003808`"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "6", "]"}], "\[Rule]", "0.16231129060719954`"}], ",", 
     
     RowBox[{
      RowBox[{"y", "[", "7", "]"}], "\[Rule]", "0.33857789099922664`"}], ",", 
     
     RowBox[{
      RowBox[{"y", "[", "8", "]"}], "\[Rule]", "0.2765966554834968`"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "9", "]"}], "\[Rule]", "0.16457208176175375`"}], ",", 
     
     RowBox[{
      RowBox[{"y", "[", "10", "]"}], "\[Rule]", "0.04782698047313769`"}]}], 
    "}"}]}],
  SequenceForm[
  "Numerical (floating-point) approximation to interior exact solution: \n", \
{$CellContext`x[1] -> 0., $CellContext`x[2] -> 0., $CellContext`x[3] -> 
    0., $CellContext`x[4] -> 3.561791883342726*^-9, $CellContext`x[5] -> 
    0.0005933986567782835, $CellContext`x[6] -> 
    0.05807158506526721, $CellContext`x[7] -> 
    0.2819567721578138, $CellContext`x[8] -> 
    0.3432485749922069, $CellContext`x[9] -> 
    0.24226280160390945`, $CellContext`x[10] -> 
    0.07386686396223253, $CellContext`y[1] -> 0., $CellContext`y[2] -> 
    0., $CellContext`y[3] -> 2.1366058394916076`*^-14, $CellContext`y[4] -> 
    6.00232316029848*^-6, $CellContext`y[5] -> 
    0.010109098352003808`, $CellContext`y[6] -> 
    0.16231129060719954`, $CellContext`y[7] -> 
    0.33857789099922664`, $CellContext`y[8] -> 
    0.2765966554834968, $CellContext`y[9] -> 
    0.16457208176175375`, $CellContext`y[10] -> 0.04782698047313769}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.693216069662969*^9, 3.693216187121756*^9, {3.693216666070216*^9, 
   3.693216695508848*^9}, 3.693216794429591*^9, 3.693216861001594*^9, 
   3.693216895034821*^9, 3.693217282937132*^9, 3.6932174092519073`*^9, 
   3.693267792647324*^9, 3.693268006247285*^9, 3.6932680766715593`*^9, 
   3.6932682151100473`*^9, 3.693268257387802*^9, 3.693388071195992*^9, {
   3.6933882963702593`*^9, 3.693388305329612*^9}, 3.693388736771392*^9, 
   3.693388917678261*^9, 3.6933889798898697`*^9, 3.693389084986813*^9, {
   3.6933899508750963`*^9, 3.693389970387224*^9}, 3.693390091194821*^9, 
   3.693390150187726*^9, 3.693390233903132*^9, 3.693390391827153*^9, 
   3.693465241027198*^9, 3.693508955037485*^9, 3.6935491065857162`*^9, {
   3.693549149501539*^9, 3.693549156183898*^9}, 3.693549217959503*^9, 
   3.693549321676759*^9, 3.693549357157795*^9, 3.693549389894163*^9, 
   3.693549458715068*^9, 3.6935494962045*^9, 3.693549532719714*^9, {
   3.693549592165887*^9, 3.693549616213064*^9}, 3.693551608891541*^9, 
   3.693551649383109*^9, 3.693551788849519*^9, 3.69355189987843*^9, 
   3.693552015393626*^9, 3.693552098899064*^9, 3.693552203306796*^9, {
   3.69355224185544*^9, 3.693552265704995*^9}, {3.693552297001133*^9, 
   3.693552344328611*^9}, 3.693552391022505*^9, 3.693552459673304*^9, 
   3.693552519805025*^9, 3.693552607780953*^9, {3.6935526420782747`*^9, 
   3.6935526684726973`*^9}, 3.693552751517625*^9, {3.693552804320837*^9, 
   3.693552816207534*^9}, 3.693552924526701*^9, {3.69355296281409*^9, 
   3.6935530150837917`*^9}, 3.693553059770514*^9, {3.693553110247304*^9, 
   3.693553150821951*^9}, 3.6935567139532022`*^9, 3.69355677662545*^9, 
   3.69355680943888*^9, 3.6935595685789757`*^9, 3.693559602440136*^9, 
   3.693559637186779*^9, 3.6935687873672533`*^9, 3.69356911454039*^9, 
   3.69393402622366*^9, {3.6939340584719543`*^9, 3.693934064598426*^9}, 
   3.693934899872707*^9, {3.693935130154244*^9, 3.693935155210321*^9}, 
   3.693935307007538*^9, 3.693935470601185*^9, 3.693935743059915*^9, {
   3.693935919315153*^9, 3.693935959112762*^9}, {3.693936007174004*^9, 
   3.6939360413501577`*^9}, 3.694021903918817*^9, 3.6940219656116133`*^9, {
   3.694022020456333*^9, 3.694022079191965*^9}, 3.694022522376161*^9, {
   3.69408337295192*^9, 3.694083376268001*^9}, {3.694083435290024*^9, 
   3.6940834531717863`*^9}, 3.694083571670354*^9, 3.694083678095149*^9, 
   3.694083736421473*^9, 3.694083789106988*^9, {3.694083834560821*^9, 
   3.6940838622124577`*^9}, 3.694083898659315*^9, 3.694084072094207*^9, 
   3.694084108623722*^9, {3.6940841411961603`*^9, 3.694084157825118*^9}, 
   3.694084361621031*^9, {3.694084421326167*^9, 3.69408444082271*^9}, 
   3.694084540040264*^9, 3.6940845759298553`*^9, {3.694084764903928*^9, 
   3.694084819474948*^9}, 3.69408487696754*^9, 3.694084975415893*^9, 
   3.694085491525*^9, 3.6940855555660143`*^9, {3.6940856307327967`*^9, 
   3.6940856913646*^9}, 3.694085724413669*^9, 3.694085770911169*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"We now solve the differential equation numerically (with \
NDSolve), starting at the initial point: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.99`", ",", "0.01`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0.99`", ",", "0.01`", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}]}],
  SequenceForm[
  "We now solve the differential equation numerically (with NDSolve), \
starting at the initial point: ", {
   0.99, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0.99, 0.01, 0, 0, 0, 0, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.693216069662969*^9, 3.693216187121756*^9, {3.693216666070216*^9, 
   3.693216695508848*^9}, 3.693216794429591*^9, 3.693216861001594*^9, 
   3.693216895034821*^9, 3.693217282937132*^9, 3.6932174092519073`*^9, 
   3.693267792647324*^9, 3.693268006247285*^9, 3.6932680766715593`*^9, 
   3.6932682151100473`*^9, 3.693268257387802*^9, 3.693388071195992*^9, {
   3.6933882963702593`*^9, 3.693388305329612*^9}, 3.693388736771392*^9, 
   3.693388917678261*^9, 3.6933889798898697`*^9, 3.693389084986813*^9, {
   3.6933899508750963`*^9, 3.693389970387224*^9}, 3.693390091194821*^9, 
   3.693390150187726*^9, 3.693390233903132*^9, 3.693390391827153*^9, 
   3.693465241027198*^9, 3.693508955037485*^9, 3.6935491065857162`*^9, {
   3.693549149501539*^9, 3.693549156183898*^9}, 3.693549217959503*^9, 
   3.693549321676759*^9, 3.693549357157795*^9, 3.693549389894163*^9, 
   3.693549458715068*^9, 3.6935494962045*^9, 3.693549532719714*^9, {
   3.693549592165887*^9, 3.693549616213064*^9}, 3.693551608891541*^9, 
   3.693551649383109*^9, 3.693551788849519*^9, 3.69355189987843*^9, 
   3.693552015393626*^9, 3.693552098899064*^9, 3.693552203306796*^9, {
   3.69355224185544*^9, 3.693552265704995*^9}, {3.693552297001133*^9, 
   3.693552344328611*^9}, 3.693552391022505*^9, 3.693552459673304*^9, 
   3.693552519805025*^9, 3.693552607780953*^9, {3.6935526420782747`*^9, 
   3.6935526684726973`*^9}, 3.693552751517625*^9, {3.693552804320837*^9, 
   3.693552816207534*^9}, 3.693552924526701*^9, {3.69355296281409*^9, 
   3.6935530150837917`*^9}, 3.693553059770514*^9, {3.693553110247304*^9, 
   3.693553150821951*^9}, 3.6935567139532022`*^9, 3.69355677662545*^9, 
   3.69355680943888*^9, 3.6935595685789757`*^9, 3.693559602440136*^9, 
   3.693559637186779*^9, 3.6935687873672533`*^9, 3.69356911454039*^9, 
   3.69393402622366*^9, {3.6939340584719543`*^9, 3.693934064598426*^9}, 
   3.693934899872707*^9, {3.693935130154244*^9, 3.693935155210321*^9}, 
   3.693935307007538*^9, 3.693935470601185*^9, 3.693935743059915*^9, {
   3.693935919315153*^9, 3.693935959112762*^9}, {3.693936007174004*^9, 
   3.6939360413501577`*^9}, 3.694021903918817*^9, 3.6940219656116133`*^9, {
   3.694022020456333*^9, 3.694022079191965*^9}, 3.694022522376161*^9, {
   3.69408337295192*^9, 3.694083376268001*^9}, {3.694083435290024*^9, 
   3.6940834531717863`*^9}, 3.694083571670354*^9, 3.694083678095149*^9, 
   3.694083736421473*^9, 3.694083789106988*^9, {3.694083834560821*^9, 
   3.6940838622124577`*^9}, 3.694083898659315*^9, 3.694084072094207*^9, 
   3.694084108623722*^9, {3.6940841411961603`*^9, 3.694084157825118*^9}, 
   3.694084361621031*^9, {3.694084421326167*^9, 3.69408444082271*^9}, 
   3.694084540040264*^9, 3.6940845759298553`*^9, {3.694084764903928*^9, 
   3.694084819474948*^9}, 3.69408487696754*^9, 3.694084975415893*^9, 
   3.694085491525*^9, 3.6940855555660143`*^9, {3.6940856307327967`*^9, 
   3.6940856913646*^9}, 3.694085724413669*^9, 3.6940857710455723`*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
woitb8Y8e78TkuN5QktQ7m/7T3NSFEjNeTdr1ZyHDNGOiOsyFODwF4AZwxzU
7b+yW0qeAmC/2WcN9Sn6y5ESZKRMgYAk1/Q2uYco2tB1W+9WClRoHbCfsohD
W4IN2uiq7PN2W/6WXruBzPk+yMTuZGOmeK6VUxQePZxbrarJPu98k3jDnYq9
wq66lO9mY6vWSgGvTLym6ZjISV02n7/FjHJtHr6/Vr5kci8F2hQUOhQev8Ia
x+bO+SN2PepnaH9fKa6OquAV+Y8CmaOXbkpqVeDpDedP6h2gwJ7n9Jf3jWux
aBxnmvMRCqxrd7FNF23GSCpt9rY5BYollnfYWnZg5/uG+kUnKDDZWfNO8Wo3
viU/FjZsS4FO4e71nqLvcf6ja72rz1JgaUD7K6/AMO7forRFy4kCVx3HNvRV
jWLVHaQ31xkU+H52gn/9+CS27Ayes2BSYFmy7teu4i/48uV0OVkPCviqF3Xg
+9Ps/5sx/8JLFJDV32b+8Pgc/sHkfh50mQID0o5np87NY1nJzQPmVygQrEmN
5vb5ht3Ijvs+XaNA1s3Me7oN33H82iBqwQ22HwLVfx5w/MQVLx/GXw2lwKyZ
Z5Gb4SL+bPemzjScAr3jLcd7IpawCPfIT4lINra4+cvx2y+87ynHlo93KCBJ
Y9Q0eS9jJwt5q7y77HzOEWam8iv45YNzBYcTKSDdnOyb58bBGjC+Oip6nwLx
cm6PNP04WTxfU9aPPKDA8f+k7LOTuVjq917D8zT2/lStny9u52ZZoyE3n8fs
fIwachY28bCujq2kHMykwFHblyOLl3lZmWEyLeufsfXFG3c7fONj/eq13/40
jwIqv9V1WpQEWIoBfnZeBRSIMqXvWz0qyDLZmhxmWEiB6i1ymuLFQqzki+8n
+8soYP61LzbUdj2rWnpZ4slrCqRfMBhPpomwZqqkDnm8Yec1daD2WNgGloHI
6ccCdWz/p2T7GhfEWOQSn86eBvb8q8k26gYSrEiHBO70Jvb8pjqcRJwkazin
9zzqoMBul1PMu96bWKutl6L4uyjwfFguSPGfNEtzRaKis4cCd7OsbVmxsqxr
pjayjEH2vmle+fFkWZ6V/c3LbO8wBWy9Z33chxVYnQmxfjxjFAj3F3w+0KzI
2jLZ1X9/kgIhZJaLVpUSqz74ZFzLAgWONW92VJDexppX86xN/EmBe0bSHrom
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
y9qZ43QmHPf368o+G4D/B2ed+UQ=
             "]]}, 
           RowBox[{"x", "[", "1", "]"}]], Annotation[#, 
           $CellContext`x[1], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
RApzUjTfPSHC964GaoePBCJMN1VtUkyEzMCCrQ1/cSSTqCRHLSVCRuTA57E4
MYSrIabgQhkRTG98Pq77SBS5IfyRb+s5ERTkTlft7xFBGKL+u3WjkuYH492j
bMwiSOhUEDNfNRHYntqKsesJIxce8v9RxYlg8bS78vvMUSTUA1/erCOCoKgc
3797gsg1eYelxgZafk7WYdVuR5C0la1fCU1EaHWIPEDVF0AK3mT/NHpPhAEH
pxezmvxIRSS2wN1OhBOnuYNkdfiQt2ep30c6aXktNYRyOhxGRvqFv1H6iHBF
+WaFVCkvMnevcVZmkAgFN5cPC03zICtOrjPLn4iQDR9l5UV4EM4fBdPhY0SY
lH/8nqeCGznLIDmeNkeEvfujdL/s7EfM21tH7b8TwYCs/m/Ifj/ikuLxWeQn
EdRdbUQFcU4kXKBk6NlvIpQGNv8T3eRAKpXl+lu2ifD7a+JI7wIr0rjR1Zu4
yxnwuwpRrvdZkO56nx5TBmeo3z/ccVCXGZk3eP5hnNUZEr02pqZeMyBrXKad
BWzOoDiYO9gQsRthHF5u99znDNK8/j2XjOkRIbJy6yq3MzBrbEoOc9IhctKD
LTivM2SeqbXKY9omnFwKaI7icwau37fozzJtEnSqeZp0jjhD/O6Cy24iGwTL
sOpGDiFnUKYTHm2xXyOQTls3DIg4Qz7/pR8DVauEi6zrbzPFnWGvnlvogOwK
Ibz7Xh1R0hl+X4uVtW34TUi8e6JWQtoZViLgm4LfMiHT7vObH7LOUDK4556o
5hLhiXDo6woFZ4iSs5LYklskVM4K1AQpOYOMi8IKZ/BPQuPT2mpU1RlcmCK3
hQZ/EMY0dirbTzoDo5Po1RjLecJaM1RYajrDj/dvyf0/5whMiZPlAlrOUPOB
rzssd45wwDSqbErbGQoH33OQ/ecIcuPvSi8Y0PyQWfzPjTRHIK1qP4mzcoYD
rgpc8wNzhF4Jw6wqbxovdXPVk26OYBpzeJwzyBm0Mm/LXVn6ShiY/Hr0fJQz
mP8J9mpWniLc5eyEjHhaPnWHiqykJwiWWIVzc6Iz6Ltad73KGiYMZYU/PJru
DF31BgUmZz4Q1CuXlKruOYOOZhndFGcr4V4Hqckgi+afxoKNDfs7wsbUJ/Pp
bGdQ+nAkx+AaTrDd0PsanOcMKpwa9D6RLwiv99cFcBY4gykxWP2n7GMC37Hj
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
             "]]}, 
           RowBox[{"x", "[", "2", "]"}]], Annotation[#, 
           $CellContext`x[2], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
V1hWj5kzWOCZ3TlUTwbi/wMY5AoX
             "]]}, 
           RowBox[{"x", "[", "3", "]"}]], Annotation[#, 
           $CellContext`x[3], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVl3c81f8Xx0lfVFJ2IVkh5Nojer+PjOy9573X3pKRLStSkhIiq0HDjEQq
EVkZlwoVRWYIlSjxu7+/Pp/n430+55z363U+78/jI0AOMHPbQUND40lHQ/P/
68xmetLBmHeIettVGBGo5rw75PWP4lpc9mJK9TViRerb6t3txa9w8pRqXUUb
AZmFd9ZcXe3FN8pOMAvfUUc14WKGVcVDeDXkZPG5YmP0VHGhmbNrBPOS6E2W
TWzRqx+V8tGrY1hAdK20tJyM3IdVhk7vncCn93Lyqkl7o2+PeZjvFH/F7r6K
XcVlp1Fg1r9TwwozWLLnHFskcxj6eWb83J6uOaxwXi9CJyAanTV7+RQ5LeAN
Ot9GhpB4tCl969fp1SVcWRy3uvQmGTWfb8k2a13GatlG7z73p6EdYY/kffeu
4jW5nP07OzKQpvvtgSTrH5h7B83pQ5zX0HnLLP/C4p842ej9dOxYNurSTN7T
8O0XdpY4cklBMh8xyYeVURR+Y5LlWSycVISMhDy1FmLX8awj8fOcxi2UwWo7
8V/XBi4KyduWI99FFFq92MPsf7FxjbPctfl7iH3lOK+K0yZ2S7Qw7Z4uR1af
JRrMyv5h8YoMLkPpapTTx2vlu7qFE1/ojGfXPEJ+48kbJ/lowPDi5O135x8j
Zuvt18atNBAFupwyDQ2osjfsuoMnLWy/5j1xyPgZMtFedvXauwPI5+OuMN5r
RivPPOVCa3bAud43TrunW1CmwhfaBGs6aH9w6jnZsw3Jl9v2X96kA9nW6+az
Kh3orTClIL94J1guBe487tqNQvP1/O5p/wdd9Bcfry33ogPsraqPv/0HnD96
S8eCB1BDmuru1gx62ClXYcf5cBDZ0dUO9ykwQOsJm2Q2oXfob4Rk6cdRBljo
YlornxhG+au3Q+ZiGSFLOUs459cHdML7kOaa8C7wrk1K2XQbR2NfsljpunbB
HkWVnh2FX1CsLfOXfQG7oaQ9bGqpdRLxDyRX8rLvgYESne73ItPopc529NGG
PeD75dcTSs8sIjeHGSg6MQFLjtVvePYN0Skvc2vQ7YXxp36TXnTf0e1Kzznj
sr2g4+uQ1WOxgrREv9Q7GDKD3+stHSbHH2i6wDbZa5UZnryg+Z5T+Aud56RY
hGbvg/gjbV7ZAuuI/dSdK+p8+0G4syJPcvYPmor/sv46cD/k+6gHaW78Q4+f
HyIate4HyejDYzcqaXDyH9vXQxwsYFZr5sqauQNbK16XsvdkgdYwlmSaezux
WBAl60sjC3yfrPnnsEGP18uZ/3nsZQVNjvSkwym7cMecnuuSMyuA2J/32I4J
5x453x1cwwoHPw429gfvw96kVtm/O9kgVXIHaSKABR+/uZ17zpoNPMtre4TM
2PDuEVVaxvtsMDTBE3fZjQN/YD/rmb7JBv8QxS6lggs/NKntYzdmB1r5ILXT
Mtw46uKyYl4xO4yl33vducqLpyMOlrH+ZQfhhAS5ED5+bOJ18uAFCw4w9b/Z
OfNdADda+1ygreCAr6fSyPMrQlhY+9rfswyc0NVb13hfTASnyz/zXSZywvCD
zu9WOWJ4XXD6k0cjJ2icblNq15LAZJZ9xuNsXIA1UPB3RSn8Zlup2cqPCxb3
HjGceSKNlZeIMr3tXHA+IraPECOLSz6mlmjxHwBv1wZVY395zNRdw/Ys/ADU
KCs9dbqoiEMbPiTKDx6Ar/vVWI98VMafS3euPZA8CJGCV1hKSKpY7/oxD6Hk
gzBUXlE7xI8w35lYXVYVboh8VeskKXUSp5DKGlMzuaGr1Hk7cVkDrxoPSNAu
cMM0h+Unu2Et7ID+5J/V4oHIjbvSIrOn8GtJIeblAh5QOuEh4yyoh2V5DGI9
1nmgubuUKybVAOfvClkeM+WFhB0baZuHjXHgdDvlzc5DcD7j3Im1IDM8OvRd
Q8vpECgrfFgI3WuBNVsP1DXVHwJrl5N14m2WuKJaXUSehQ9uSz4q9cyzxgeK
vLMfePMB/eoRhvQrtjg+/Sqj0Cs+eHiikZPxnj1eiGoKv3HoMLTlXj6oOemI
X9oyO6T2H4ZBiyX7PjIJc97Oc6fh4IeYbzN14k/IWJ9H+nCTOj+UzfqtZwq4
4rpdthlyefwwfyFHlSDngefjFnW+v+aH73c9a+589MSH18/RPvjJD0tHxTlz
871x6vT9IEEjAXjbnH+Ej+yPnztiibEIAfhZs9hBkg/EP4cGJ3NLBUCQXvzY
lsZp7NS6acFCKwg7PWJ/d6acwbJFRko0tYLQ71qVmFZ+FntwTX5/+lkQTjQN
u/dxReD89LCysL1CIMQ1yHP2ciSmjy46+N1dCDp9fpxTL43Bo7arfz8dFIb1
u4pZTk3xeN9Acm2utjB4398ssipNwJo6PH6WZ4RB7tDp0R85ibhCUXOsp0cY
qvSfy36+nIwT2K43P409At7By6sVXRfwdKHx9bh7R+CNjdHdV2/TsJ7kLl+t
wSPgKvr0PM/0RbxfK4qrT0QE7g9qGatwXsb5oWT/iTci8NTtHv+T4Sv48YgU
7y5eMcCLeZ8WPl3HB91nV95oiQH70cQWl/PZOGq1+HVmAJVDTC7my+bgk3s4
zvC2ioGxj3UnZ3ou7lP720nwPgqrcifvR1rn49nC12FWT8Sh+XZ8pylbMTaS
3JBaWSaAh3fjfVPLcqwXpCK4yiQNl+nyPsnVlWN/o7WHPgLSUC5RODHHXoFr
6QNbnPSkoXLMjPH1YAWGMJdFzXxpUHT2ICaJVmEbGz0NFpAB6zPPw/+7WY1T
uQ98v3deFgqz3wuTfWvxw7WhcKF8WXhj4VZJm1OL+ylXdt6skoVxUZ0bYa21
mDNtD3fGiCzQSxkyTR+swyV/tzRDJeTgA2cmf/erOtz4cerGyT45MGLXTqlm
rcffCh5pf+BUgBdkQ+PEyw24tvQbG8sxBVjaV7yEGhpwTJXQF20NBbj2hMjb
M9GA97dcjawJUIB/FVunnBUaseLUmarUDgWwSeVyOT3ciOMl5LmVIxShjhgz
kcnZhLmf1C5e+6QEy0IFmzYhz7HuQN01o9vHge6vnPA/z5fY+57d+SkKhknF
8uMme9twpqXbRe0nJ2GkoeG0fn0HLmTnN90K14LpmDa3G9I9+JKI5OwpJh0o
qf/CdVa9D4stthECuHTAc9i/47BRH2555Bx2XVAHVk/dlGu268PrcJV+SlkH
IgeVV+fP9GFX+z/C8W46YJXvvX/2Th9Wy+ggNT3XAQc/wUyFnf14fsP1g/Rp
Xchw26Uf6tKPk5q3BG2idMHHMIznpFc/5j+f4x17Xhc0TjLXMQb0Yyv2no03
N3Xhm1m9RnJEP26Rkjvg06ULB/ev9Z680o9zXWgt7wjpAXebOqn2WT/WeXOz
9+A7PYjYev2Gk3UAS43EOSZ81oMxSXf1fs4BzDHlsrAwrwcFA1tTCTwDeGLz
6O7mbT2IZiE2DgsP4CjJx1ruR/VB69m4orLSAK5M622qidIH3Bo8/9puAF/P
rtbnPa8PH6oslXidqfG3ro0mXdGHxY6nX7xcBrDOU7t1m7v6oPdA02DFh5p/
flpuu08fYsYEHR5GDWBOve37+kIGYKRjktydP4A3LSdU6o4ZwO1Y9X0VRQN4
ktTWwadsAKDh/y/l9gCuCk+bXjEwAJ2AiF1iDwew3j0uwZxQAxC5ORu8++kA
jmaUzv3aaQB3HzRFGL4fwK7sbGJGQwagYqQlVj1Kjedfe1w/ZgARzz7JMo1R
6ys3DV34YQAZR1ltyr5S83vo7Jc5ZAgMyqkTZ1cG8Nd24vnoQEOQPLXRGbiL
gls/yd2tiTCEwalAA2UmCi75Sd82k2gIW8Q/v9aYKZgoWL7DLNcQuDfUm2zZ
KfhT9Ea0SIshvIhpd6jio+Cmaz359j2GIDbTlCwlQMH5DwqfZryj5i9k1L8l
RMF2I1obf+YNYftfYUmgGAW/k88M7mMzAssIc6VcGQqu03e7upPPCEwvBj3q
kqPga2TlGhUxI7j58vPxVQUKNs8Y+35LzQiEr9/3ETpOwf3fxH3OuhkBY0+v
KfNJCq7csZVaHmAEQs/Ov/yuQcHpBwfKJsKNwPyL9oN2LQo2OBU2bZBuBAst
7xcsdCm4s6SVJFBvBMzfNMR+GFNwWcP1OKuXRtARLOUZZ0rBKf1ehWndRqC1
25iPzpyCtbf2ffo1bgSwWzZ7xpKCj3BM/hWfN4IsSR4pXWsK3in5mJv4k1r/
6daDQhsKbrF1sOliNIYF3joHCXsKLg4khG2zGoPY8vnLRAcKjju/47r8IWO4
SbC8d8GRgnFd2WCBjDEY3LS59MyZgvl6IlcHVY2BHHN1sY1IwVsTRiy7tI3B
eGaxqIVE1Xv/L6MzdsbwwISWNteFgvNEO/zKXI2Bx7SxPMiVgiNQ3sVP/sZA
GsksBzcKtrX0f8Aabgwxcxdo6NwpWNlXvetUgjGcPldyt4HKXAnsc1GXjEG1
eKTQ1YOC13JnGGqyqflhaZrOk+pXVaPITLExuBL0ObKpXPf6khbvQ2NgnrKk
4/Oi+jVGdDV9bAz3SMzVOVQO/iWXkNxsDHJ3gvkYvKn+MTGUPO0yhorKFH0v
KssKjTYvDxkD9zk95RdUZjlePn5k3BhCDzZ+ZfSh4GWTuC27OWNoOfveRJvK
fR7mhzJ+GMN2QUlUGJUrYkTU2v4ZQ8oGHzn///FZPMh3pwl8mPBlfUzlCwtC
Y792mYD5I/YHzVQW0pCMid1nAqvenJJNVG7KlefbxWEC9buCssqobLms9jyT
2wSKL4vOJFF5SVvLiZffBGo2FQUsqHz+puHWnSMmMGtSpMFGZf6flgUECRPQ
uuhi1Ertv0HPCTVIm8DeFiF1VyqbFbuPnVQ0ASa7989+UfVY+O0f06NqAqQo
n8gwKicZhfFZqVPjj34On6PqyXcn9vm4tgnsJyo06FP5yd/zTl4GJuAt4KNS
QPVjviynIMraBAQ1zm6yUf1K2C5C9I4mcO6WMVai+strdW/sMtkEFNMZWvWo
/hvTNfLd8jOBCyMvzqiTKXjWtuW55BkTiBg/oCZMnZ/4qi6nx2dN4GrP2q01
6rzVOn4o6EwwAQ0HdTNv6jwa1k4i81QTGNkqz9lDndfp3QtjH9NNIDelMCbf
joIPPtnkW841AZodY/SXqPMfw8pXyFllArtznEJvmVDnyUsEF9WZQPP13yXP
jSi46oXU+NGnJmC7AO86DCh40hcfPtFuAlL5X03u61CwzmtioctHE3gjco6h
CFPwl0NeePGLCYgtqbPJnqDOc/Dp8dAZE7j84Py1Gur7/1Ag/vCFVRP4cc8+
J4Z6PrBE3SqsYjSF3lm/gyBOwfcpD/BxZlPwirt9TkOUgjWP1o63splCwIVf
s/LCFBz67tXh93ymIBCpEfPlEAWPSk8X/pM3hYZgTi3ifgq+PSVWpEcyheec
H/Z9o56Xk2NvXULcTeG+gWDa/qUBLDgcL1rkYwpxDUpvj8wP4KKujxW/Qqj1
YhoaD08M4PzKjGdFF0yhlXNg2XhgAF8NXx9de2QKNs/qq29Qz3dK0J0CgQZT
eMyKvBtKB/B+XzOywXNTGH4rGfW6ZACnOz2cK+4whcWlU3nVOQP4ggZx3eAT
td4/8rFnCQM4fm8Hxy16M+iX/ypdaTWAX9KHjLzZYwbrysITL00GMA2N4M31
/WbQeDejvVVvAMesRgob8ZgBY9w16Sw0gCPeE+Q2CGZA3vXznP+RAXy6ONvE
2NYMtNUi+De/92Oigkfa3wdmIPqgzKbwbD/u2Khxzqo2g99sVhPL1O+1zPMt
OUK9GYw3CpoTPPrxjlPXP5JbzKDlcYPvGct+fNum7VjXsBlwTO2JOyDTj+ci
hfpz/jMHlV9zF5s7+3BQyzi7orM59FvyxI1H9+LRZIm5PldzeEUmjv3x6MUa
+mHPvLzNQbri88hP017MPsTsfjPEHEITFnKSjvTix1Mn6ndeNIeGjBEh/u43
+A9jvu3gE3MY6m1m8t7/BicY2xQEslrAUMztpn1J3djzYP7xZS4LCLVIn1zw
6cYGk+PvAg5ZwF3W2tpqs27MGeaxL0DMArrDHuf+ONyN7xeExvkhC2CV33WE
1NCFKYvXyN7eFvBhm//8kdlOLHBxQMS1xQL+3E5JzVDqwC869CqtgyyhFr52
nK1+hX2+ud0732gFnZQrag0mTZhfaDGcq9kKbIJlJce4m/CQXbBeaZsVKDU4
zIpNPcVqXfHf2vutIJmj95hsxFPMfK/wGP2MFVwJufVS+G4jrnIfqU5ks4YV
v6+sjPQN+OcXg8ZzvtYgStqxbDZXh8sODl1gCbIG70fSl4431GEHU3v74jBr
6BeUbrdOrcNtzV6bzfHWQFt+vVpevA5fL0xGNLnWUEC6difBvxarODa3xLRZ
Q+wQOtxE+wjHDMt1R/LZgGTHrqeZFlV4uMb5xUMhG9hJzKCNlqrCspfSHn0S
swHvCY6Qm4xVeFp9Mg/L2YB5kQIzXWQlNnqQ6UunYwOfboWaVJlXYL6Ylb1p
p23gupMgV8nBh/iFUKXJjVc2sMnIeDltvRRzb41qdnfagC8oiIo1luLgYXqV
zV4b6OTRCpCLKsVil5wEnEZsoPr4w7Us2lKcsbZ3VWCJms9NISqR5S4mdvpe
vcdlC8Mvc4vmtG5jmgDxd0+8bWF5R8ms+3YRTmT/NWoTaAs9AtLqfl1FmKHx
xfh6iC20kcXtF7OKMPN/lnPK52wBXRFhs5UqwofyYjefZNtCSYf/3YLOAnz8
9ZBgwytbuLkxBiV9efi5b6GobRc1v6vR06DgPKzO6i250WcLUrTiHSLceVjH
cVtB5YMtaFZfOafgeQNb/ziq27BiC3H0g9V9zLk4+HBsQAOfHUQEz5yfT7yO
11/pBtsK20E6ka7GV+k6jvRmD984agfL69m3Xsxn4fi6e/EqCnZwWzNokWKe
ha/oD2U16NtByeTHSxcJ13BF2NGmhrN2kCQ7cUyKKRPLHvrZbBtjB/JH6X8L
d1P/31qet20k2IFgfvvf9xeu4Gd7LfpULttBXHr2WT+mK7jnVsxEwx07UNzs
tyAcyMBzfYOMjRQ7EH3RnPSy+CKej7j+Fg9T4/0vcE8pUfmIbUnbJztQ+fio
TbcvDc9HjqkOzNqBBGmOs4eWyqJz/rNbdqDz358K35BUPB+7NcQpYQ8hc12n
x68l43nxl8X50vaQ7nXc7/MJKr9N8BdUtIdqYu2VjZkkPC+xi1FK3R4qZlnO
eGMqv2dT1bK2h/dnND5s/0nA84SjxWcS7GF5X1tyZ8k5PD/6zW8jxR7WRBlY
BB2onFRxPDbdHmqzAgg+nFT+IDd0IdceGtpnzNsuxeH584ihpNIezPAL/wrm
WDw/bu7X/8EetHwvEd6eisTzFziPW32xhy4CbZ/ruwg8rzBC/3HaHnw6s7rT
3Kmc5lQ0s0LlGOFPl9LC8byS1+AWgwOoflvw/DoThucvx6gck3eAKJPlr9zT
wTjj09RRCxUHqLcJ0eDIDMaKEobckYgaLx5Sq4iD8bl2nr8dOg5wWjcn7Ev+
GXzg35MmV0cHeE/Yzk5yC8La3j9wfrID8M2JjMPRQLxQbyfdmuYAQiX7nAJ6
AnDmfy388xkOcGFX1TNdnQD8qSiDVjnPAYw4d6081PLHwe+PtQ5WOsAt74Ts
ZCtfXKLpqb1nxAGUdxdy1nR7Yp3MPkXZMQf4XkWWe0XyxEvjiqK2kw7An/8p
2XvDA6tE/sdYuugAC7rJu52OeeD+6pLOkzscwa7s5jvXUjccur2r0YvBEdZo
z/Zf0XXDvIan72cwOcLIv4krkouu2GMWp41xOoLGQkV6trIr3uL7ZBAh4Qj7
o0Q+NI6T8W1fzRPF0o7weWiquP8iGes1PjjWoeAIT3rDlaVVyTjLMoKZExxB
cyXra2MeCUte5OqvtnAEc7oPt+N8iNh+w9R8LtoRSLz7L5omOmBxVhuL2ARH
SGDySaXZsMd/xJ0sOVIdQaG65xFPoD3OcfC2Vr/mCPqbeQ/83Ozwuxfx9rn3
HeGlfdTmFR8bfHc4xYFQ5Qj8f/SP3l21xiEr6Y5tdY7AOtUxPB5pjdmF8pxX
mh3hQrCoX+E1K2ya/MhF970jpGQJTVmPWWD+wgbX8Y+OcDXp6++7IRZ4uf6F
W8gEtf/Da/99YLbA6XPdHsWLjqD9H8tuirY57jH46rNB5wQuGYa+PD2m+BQb
R/A9aSeoFfol36lvhDkleUKwohNoSv6+ylJliKc1BULfqjpBa4WGFeIyxImh
x87SnnKC/yyX7FmX9HHLiFaUraMT0Lf9LrjepIszV/Wjv5OdIKHLb7NLUReT
9pjFJHk6wco5BouURzqY5oRTXPUZJ5iPFD/pV3sKnygKTdx1wQm85m6uVVG0
MFNDVFLhZSfgiyz+vemshT8OxCcrZDlB2Z0rIbHfNXEE3eUUUpET5LKKLf5j
18RP3EsvNjx2Aq6H3TlPz57EcseGr3lNOkHELcJOOyWMy2bjG4pmnQAq66QW
byDMd/vY2PtFJ5j9nuzpRIswI0+CqPY6NT/3vXuN79TwR0apRsG9ziBxxV1S
quQ4Nn01PGbL6gylibfmrvIcx+2xCXRXuJzh2ymakehsFVy9NmywLeAMNNuG
ng+vK+PkrwnjHxSd4d71R/7a1Yr4b6HUTjY1Z/C/7UsuOKGIA+1HxPTUneHB
jUGxoz0K2I4iFfRE3xm06/6TLP8ujwnNIzuziM4wMHiGRtdYDg/nEcSNLjjD
h1mu73xe0tjQetQo6TI1/uLIExV2adzCmnSm6ZozqIYGeS2dI+CHqaNN4oXO
EBfXFOaPpPC5sCRjhlpnaCgIX3f8KIHXZKWDUYMzGKCDvVhfAvsujeaEPHeG
8JnxkY0mcWzlJj0x2eEMIsKBb5+WHcXi5h+Cmz85w2DBDpgsFMWFzMm5vyec
oW6ZJZBOWBSzd0k/l5p1htUtzqLc+yJ4G5IZbq46w53DhBO/nx/B3tkH3jTR
EUHs0ACXIJ0wRkmtzrkHiKBslB6e9J0f10+xvxPlIUKaRf9mXDY/ltZ2N3h8
iAgAmS+U1fmxAMMulUFBIlzMWhjxlzuMd6Yase49RgRn3pWsjae8OHquMCWP
QISgkDPtY0d48ZruytZRWSLoyKccfJXJg2d2X/umrUSEVaYnr01DuHHXxZFX
cepEiNe3v9ttfwBrLIqr7tMkAsuvG4Y7P3LhJsOo6pvaRECVha4tTly4nPlw
QaM+ESY/V442+HDijAzXsJ+WRGgt09ALKGHHVte+H/X0JoLkCP+84lkW3PcT
itZ8iVBVf3nfEg8L1rHM5EwKIEKP9kLa+Zf7sQqnAl1JMBF4nkzyqbDux7w5
ER8/xBDhoCNtyu+MvThrvdvM+xwR/jwS8rf8yYSZbQ91ricQYbikvPmdHRPe
Pthcx5FKhDpbiQI5mT14Iu+/y8ZXiZCuann4He0ubL9p9d9YFhGkmUtNeKMZ
8ZBDWaRvDhFmmAL38PxlwG2H9D1TbxLBXjnhO+02PS4rzFBvLSXCzR7Kiy/C
/2H/Wzw/FZuIoKf0rrFunBZHeTWtbj4nAodWZnDaWVqcSnBcaXlJhCTpwdZS
Nlp8+2nBktFrar5qht8FJjR4dFBgzp1ChBft0WeaO/6h2dyWGcm3RPhRPkb7
hvcf+uXsMr36nggkxe+x9cGbaP/C7cmYT0TQOBZB/4LwF53aKTZ2fZYIOaIc
LLb968iiq+OjwzcixGk50O1WX0fkDK8PgktEsF54WrFV+xvF8D4YrvhB1fv6
3gjS3TVUKy812L5FBP7S35P9D3+ilj+9AxdpSWBSqd3oovAT9TUH9JvtJIGj
aOJ/Zc0/0LxB9ZuxXSTAglePiI6vIn43+Y41dhJ8O2o1cOr4CpKSeNvexEWC
Nov+tL/vlpHqSkhbPDcJirNWOJdClpFVdH0LMz8JOEnaecXB39HFrOPPRCRI
8DZnNup5/QK6Yf/h6cIxEjAlrhHPsi6gUoGoxhppEsxqmqv8C/yGWsqf1SNF
Ehhf17tGrzKP1tugxkqdBA53vTICVmcQ/cUvVbyaJHitmhI65jmD2MziKye0
SWCZyjQQOjGNpMZaH/obkODO3MW+z2NTyHVNuzTZmgR5b+u60v5MoqCmmTsG
diTwMY/fo58yiWLjU26zOpJAJ9OFr+jAJLrB3FVcQCbBq4IjGc0wgQZEDPMf
+5Ggb7rf/Un5ZySLmiUNA0kw2j8m9tfiM8q0lHs2GUTVL9mvVW9zHJklHhzb
f5YEB3SaBHc8HENDX6YO+8STQF0gvJ5T4SOS37Cpok0iQfpCTnps4QeUtb8H
cs5T/SisV9q19wOywjWktotUvXNVxuJWRtBwfsytw9kkqKcz/HZw7D1Srl2R
e5xLApLb7WeniO9RbrfrK4N8ErTY3gPBqXfI7o/eVHgxCYTr/Nmz196iD9Zc
okMPSHD2zKXsBsUhNMZadT+lmQQVdw0FmIUGEBIXUj3cSoK0Q5GjbZ39qFD9
enddG9VPxztB9kH9iBgYtTDRRYKtXyIqw1f60MQbHakTb0kwcXhdWJbzDTo5
9fT54HsSvFOzqK2K7UG3NqWMvUdJIJu35z/XhW7kKsERmD1Off63ZeuBvi40
lfKlemWOBBvHxopS6zuQdpHFyZQFEux6f08sWrkD3a1/TeH7ToLIxx8nOJte
I/fp8h/6P6nzEfnUTbq7Hc1qRCjc3SKB1z7LHTYMbWhhi7XBjo0MIXfVDZPm
X6IvkW8HxDjJoKDz/mViykv0bj17fu0AGV6t73FpEXuJXq7y8l7lI0PTDg+J
FwHN6Pq0SGz3UTJ80pwuc5Z8jtJc5rJzJcnwXlPAUSj1GYr7/KDKg0CGqxYL
3rFzTchnVHqCToEMlACnH09qnyLoPa6lBmQotNjzjSW4ASno/3PcrUEGtjG2
Oz+/PUHiHS9Ch7XIcCYu+NNX9yeIo0WzLFifup53i5zjVo/m64z2lFuRwX00
jvAuoQ6Ny7IIR9qSgTs1YC6VpQ4NVQ6q6TqQQafSjDGjuBa9uGfjP0UiwxJp
LfhqxyN07SZ54JAfGYRJj3aFydagVO4j898CyFDerfXtGaUaxWTP7GgMIkN1
eY+MdUg18rriK291lgyMw/WLcS+rEEoKzU5PIMNcwMKK9NcKJLdDpcohmQwp
NtOsy5oVSCz2b4d4KjV/b6n2rnvliC087k97OpWJ56Z1Ix+iWd8Ljtu5ZNDj
v8ywU+c++jRnEPomnwwfAtueX229hyju+y7nFZLB26g1JfrkPfSMeK1Z6Q4Z
HDlmGnh0y1CmRYFQYBUZxjroY/KD7iJVtZq5z+1keDwVyvFH4RZaeho4XdxJ
hsBSmuvuoyWoRJUwSe4hw+StV6nhcSWIUfXhx68DZLjyFqzTBorRO5W7fbMf
ydDJvfuC0/kidKHBtefeOBkilhnUF5WL0AkVoU7vCTJMO1SM4eFCdFu5qGVh
hupf26DLREUBClK6Ube8SoYn95XF4xPykUi9TU31LzKsc0vmyNHkoxFFrsqg
dTKcdYgWl4/NQ6B4reznPzJEm6k0CSbeQHsV0vPWGV3gwh6ua3X3clCZbPw5
msMuMCdYn53tkoUcaiDmpYALRO+jgeSdWWif7HZEvLALRGg2Zx0ovYZCZaKC
d4q7gMD5u7piK1eRpnSoB6OCC9QE7B78kZOJ1ivlXTuVXCC4YO/MtnYmekD4
Qbxw3AVucKSUVa5dQayEQDsmcIGcjxNyf+yuoPFj3ob79V2gj42+ZJdSBsos
F9MbMHSBJ8eq3Q9OXkbax2a0M01cgH5LYzbK7jJ6KOkK7FYuILcly+hgko4i
JJzkDpBcYDlC8WmEzUXEedTsIH+YCzA9ur+vaiQF8f6ZKK0OdwEDurizShEp
SLD7jKJGlAt4kjtUTvCmIIJflrn7ORfYZ1jT1up6HulUD196mOYCb4bmdzxj
SEZG8V68KN0F5vNsCEq1ScjS/M/9vgwXaDmtUksgJyHyL56O1SwXOKpn8Tqv
JRFFqjjvUClygfzTFn/1sxJQ/O7ljK4SF4g58EBe0zABpXyIO+xwx4U6D6eq
zegT0LXoErXY+y6wfsU8uCYyHlW8nAptq3WBdLZagegz59BnXd9vpp0u8DJE
Vi5GKhZNc/8Ln+x2AZ/14WyJlzFo4dslxpBeFzAXERccs4xBG5cqj+QMukCW
xpFzHEnRiJWy6jz2yQV2VdqUiWxEIk278CHvVRdgyE+6kS8ejvQkdrts/nSB
t4YtbYnvziKTzRsrl367gMrePI24hLPIsaCJuXrTBd7RpVKCP4eh0Iltnd/0
rqDnFPvwa2kouued/CyBxxXI44r0pn7BSLPYfciAzxW65H0y2Y8Eo8/vtb9x
CLhCS2EpYePTGcSpxXCwTMQV6pguzDKYn0Hxh1OCe2RcoWhZ8kuIbhA6ZOWZ
liXvCm1fmY+X7QpCTy7qlDgpucKofHLqatdptLTB2L+s5grR5KcfW01OI7uh
VAkOHVewOLXIsMcrEP3a7X1yTM8VSvxFOytkAlGGup5tqaEr+HQxaJatBaD2
it3nVcxdoeqMxTtpoQAkl5o24ejkCmb3Hh0KuuqHmNCl3LvBrrC70pGS0+GN
SoP9qgLCXMFxOWRQNdQbnXxg+Fo5whV23tvTZnDEG509wPyrK9YVtk333bp6
3gtNraabfL/gChqI0/eRvSd6XprBoFzsCh1/KkLPqLgj27FAPtrbrvDsynVp
lw039JPdVKHrriuYG3JZKTe6IfF4FheHh67gJPt1MhO5oesOmc/j6l1hrfbY
821TVxTAci2k8w1V38JPHwcLycghV5vPpd8VXgU5BYQEkpGewEb7JsUVHh0b
lnitTkYiMk4HpIdd4VbYTJL9NAmNmYg9vT7hCh9/15JOK5KQUUYTjetvVzg/
XeEh9tUZqR0IuPdvwxXW2S2Pfch2RuJFAmbZm9R+Esd8Yw2cEX1V8q0uWjeg
F8mzzX/ihJ73mWjLMLlBb/DTOdF8RyS1bypti98Nyg0qRb+n2yPe7Gz5HCE3
OFCxSDNpYo92H9b7JCPiBtynfJnz2OzRtFSllJuEG4wdFm+3zrNDBUbhA90K
buDnW1ZGV2uLmNP3cuXqucH7+/sv99LboE2O5heyhm6wdaHAaXvQGs3fDPLs
MXaDuV1MlgPF1qi9/H3DtoUbMH1NemyDrVHMm2IHd2c30AvdK7V6zgotMimW
yAW7wacUXFMtZIluZH+Vag51g4OffznL/rVA2oJXnxqEu8HxcrFJmUELVKC0
POQW4wZ51uesbyVaICPyfYacFDcQeuQfumvRHFXV8/lt5rtBU319XMWAGXI4
+WYjpdANPkx8t1uqNEOMbyKTOUrc4BTKa05MN0PEieFCqVI3KJbv5HlgYIZY
9l6lEKvd4M7UyuXsHlMURGZQbmtzA8GFu4+YR0wQ32LdK9MON7iXy/1i6KkJ
6gpzNR3rcgO5IkWayQITJHjppffvPjdoDV9NpLiZoMH6yJtHR93gl2lq8sNF
YyS/d3lH+pIbLGbaDfroGKHP2QWXuVfcoNCNElnOYYQuChrylv5wg41fy3lm
k4ZoSum+QvO6G8RRlOibYg3RdbKr5+oOd7iyL2G4qckA/a4ffmPF5Q7Raq/4
abX0kXLZuwlubnfA91OXNdn00dmcod9jvO5wy6y4rOOLHvpztl/AQ9AdXBYP
hp6L1UOqXr2KEkfcYUm/p2DZSA9F2fbofxd1B40b9mrEw3poS6UjJOyYO9S5
3zz4rlUXYfH2C6rS7sDyOJ4klKOL4rhfFW7LugPde6YsWn9dtOPvi87zyu4g
Ih3St8Wni+ib6g/laLhDhO1IIOs1HXTqYZ2sg7Y7rN9XMsdndFBK/qNT/Lru
MKP85sI7Mx20O7rydJmRO3QIfnz4lFUHMaPStie27uB3N0TwWuYpxNl83W8k
wB3SrmcMZOdqI+uqa/E3g9zh6BWbXOVIbZRTlJlNCnEHURFOyYOO2oj7XPrL
uQh3cLe5SbkjoI34TiZz/Elyh26/3f+drNBCR16FPOPOp8ZLx156NqSJ5Dss
9jp0uMNzNq3yOEMN1LHrSO1ylzuEM4V6WSlrIAf9X3ZJb9xB7dmMvY2QBkrs
zSqroLjDqPalyc8bJ9Hg0DsN2k/uUBB9O3rnvZMo6ItNxN0Vd9g8tR+Y9p1E
9EJHBVR/ukP8yOC3uE11dMN143XfmjskKWUlH5pXRy9ncjk2/rpDz3Ertd42
dbR/abRKn94D2tqLbOdi1FHlH4eZZW4PuHVG/9XH34BOqh1LTzrkATpzXbb5
M4DeRf+T5+b3gM5TEnSx7wFt0RTEaxzxgBN5XKIP6wEZMYwfuk7wgMQCh668
cEALbCQLVU0PsJFIkT9HB0j8mNvLJD8PuM3Qc2nIFiGzocRl00APMBLZjC5E
CEVG3j7Md8YDpP0pUiVCCPV0TkY/Pktdr5lV1F86gQLcycdnEjygJHurkDX5
BKotdH6kc8MDvkaNLNK+UEMftWMn2G96wN9nbOF0pWrov6UCli+FHnBUelFP
8bIaslIbCwi/4wFM32ttjhHV0Mawg+T9Kg8o6OBWNtmphhCr3Z09rz1gMdx6
4ouFKnJvCB963+kBdwW3T1diVXSZmEt3u8cDfh0QKr4troo+VwyT1CgekK7A
FUxHq4oS9K35/D55gCu/HGN85XHUkWiR3fvDA7L1Tdv+sh5H5r+NUq/we4KI
b1WDxZoy6v0OelJCnvCTPO2AZ5SR3qzsnu4jnnB1k69ed1gZnRzhvLRTwhOw
Z9fdx43KSPrpWEaYgifcN/FmfhmnjJhi/XMc9Tzh727uIlYWZfSKPr30aLAn
sM/0hvFpKCHYjvVsD/WE/W4Wyn8UldDT36ePuoR7QgO2dZoXV0I1s5YP8mP+
//yXUQY2JVTUdahyX6onrDx1CFH8qoii0ssf/7rpCWfMmX+fuKCI5DnftL18
7QnFLwU7tycVkD/LU2/TLk/gfztj5jSqgMqY7u370uMJh1+XNfb0KyAeuiRb
GoonDIjVbg4/U0A7ltUW0UdPiKcJMivNUUB9nQ/Zm5Y9gTh9avI/UwXkHX3R
5fFBLxgKzaHj6ZFHt89GMGrzekH10o2E46/k0dgZz/K3fF5gHtzr594kj0y9
NX//FPKCubKOuMmH8kjZevOCnJQXmNbvKg5Kl0f0Mr41VSe9YEKLxNhhLo+K
v+rTPvDxAr6PK/2vp+VQoFaqVJC/FzyZqjfqGJdD6G67vcppLyAde7E+NCyH
PnioP34d6gWzShYk1m45xPFN0efrOS8QPPctiLtKDqWuCLw9lOMFOw977T4V
JYdOb/0uy3jlBa5OQYWGvHIInBXeWb/2ghcP6k7d5JRDzM1BdIe7vCAdm9z4
tV8OPTi36Fje5wUX/xr2vvhPDk3tnGTtGvUCF6YXzvXfZZHtnt4ouhUvyJXl
W+Juk0XqB26bhB7yhuYdVwc2Q2QRuevRPmZ+b8hXfMxQfFoWJUa19t4R9Aau
kMxP+n6yqP3zhMFbUW/4pgyCda6yyOCegK68rDe8WvgtNGQui2yOF6qvalPZ
56GDopws8ne4Iesf6A0uaZyVx9dkUAbz/ZX/znjD6p9HgzmrMqi6uaHqZog3
6KQ8Q5tLMuin8IjUmwhvYN3L/oYyI4PCF7kkJJO8oV2+Y+/zERmUGJMlNJ/r
DX86375Jei6DbhRlsLu3egO3wDetkjQZZPLku71CuzdYmMXY26bIIPp+o1s7
O73BvCI+miNJBp3ZZpK91esNJdNj0/kxMsjAKdX484g3EDiFDGZOy6B/PPEX
7Ja94ajIuiTZVgYRs8/QGB/yAVHJo4yVEjKIs5Jyio/fB5j9GhZ+i8mgnnaZ
y4uCPlB5Zm6vlogMUln7fuiimA/wU8ToF/hlEKulr2qnnA+kXxh548spg1pZ
3UI19HxA+ebZJ6I7ZJBIutWCUpgPFNhybTh9lEY3yqq5/oT7QOmPK+3io9Jo
XyuTRlOUD8QHnnqw8V4arf9uyYV4H6hgdWksGpRGnSTCKd1LPvBp3eE7W7c0
8lVgLLG75QO5Bva16Y3SqOZjg3V0nw8kJ2DVnjxpJPKbPQFTfCDyyLsn67nS
KI8lsIL2rQ8kaof/Fc2RRonaIv8lj/pAzcjzhvRr0siyKrMmfcoHUvapxUZd
otZP8Nlb9Jcaz3LHcihWGiGJQ60tor7wT8bVz8hdGv2XrRdnKe4LJQfcFiZc
pVHPjrMnZiV9wVc75Xi4izSyH6XU75X1Beme47IPiNLobGrKQxs1XxgaCGER
tqf2O/Mja8nEFzRN/IvcTKj93u7y5I7wBYX93Mt71KTR4r71I+VRviAsK+Ex
eFwa1UYemcSxvsCpXnQpX0UaaZjHObol+sImOeGnnJI0Iu5QNKtK94VKUldU
mCxVX2KxqvYtXwgo1LxtflQaMR86yxzU4wto9lCl4gFp5L3001ytzxeEmP2L
ubmkUfuL07n0FF8Imojno+GURjFkH+G8976w81PQ8z42abRU6nT81YQvMElH
SJ/bJ436ZLXcOTd8QcUR1x5lkEYZOqzPG4/4wT0RFfk93wlo4eBluiQxPwi2
/0KWWiQgnW97dI0l/OBNWqq5xTcCokn/b2hS2g+urD0PLpshoMDB9TkmNT9g
UHLeCvhMQCZO4xzOZn6Q56SfHkYhIJbgh350sX5w6HqKhtETAmq+/lez4Jwf
pOirxI08JiD/Bj1elUQ/4HXQLHSvI6Cerdku/1Q/eJHulZhcQ0ApqUfERq/6
Acer8dmPD6n1Cwsmqsr8YCfLZasvxQT0vTPD2oniB69/H5/Zc4mAChbGpTaG
/IBmk2GjK42ADPYR6K+994MB1bL0tAsEdN/iTW3nRz/onW83YkkhIPfxXawK
M9T9+qu5EhIIaOxnfM+eTT+QM6JbrQ8noDeHQ9QbjvhDcvQo4x5PAjqu1byp
LeYPW6uXSDs9CKjMe8+TIXF/uPLOXXXbjYDi64qllgn+MKTSY/3bhYAU9Xt5
RI/7Q8OhF9orzgRUGCq6ds3IH3arsZbtsyGg029G7geG+cOOD0O9bLrU+qvC
7lvh/sC+f3KvlA61/wOBAhej/IHn/Fim7ikCEnGhzyk95w9Fk8TYRC0CGl2X
TRpL84cHqwvWu08SkIbwRWeDIn9o1/1ebatKQByRiF2s0x/kfqVPfZAiIE76
EevFbn/Qz4q33kXlA1fO5NX0+oP8e74bSscIiLe0TPDEkD8czjS5e12CgIQH
WWXMxv3hw+Frfs5iBCQvMWMY9csfvoSGGPMLEpDZh8vn+wUCgOdHwOFETgKy
cBfvzhIOAC5bIcpbDgKyWnnFbC8aAIxL4f/EqGzH8CdrSjIAAtf2DQ6yERBZ
zvX2HyUqL59fVmah6pGm/FLYKAB+nuTfLcdEQBmqX/6cjQiA+zjl/egOApri
Mupnjg6ApIwyEysqH//ZeOd2bAA83/U6mUJLQJMPr5n0JwbAMdZJ4Tc0VP35
dO6KXg4Anbb3O7u3pNAnmkrTd7cCoJz+scLsHykk3h5VJvcmAH6ft/Ep/CGF
hmKszJ0pVDZ6jl6uSqFoJemtC+8DYOfKNcepFSnUXzZpPvElAM6UN1jIL0uh
sDS97Yy1APhiO7l7YUEKkcWYJH7vC4QW1q67DdNSqG5DYGOENRAGRQ+4TE1J
IcZupddNHIGgZWcgxUblCj8Xl3ieQIj+deVJ8KQU+lPTmLdXNBBSDzxnNvos
hTJPeDEJo0AIePDHzHBUCk0xx47SqweCSFGVxdURKaT8+VrZnEYgnFy7cXF0
WAqNxTdrVuoGAkfX87On31P318EVfdwyEGRr7FJfDVH3k3tM/5BNIGiv+STy
U7nfW+MgjX0gtPpOysYOSqHQvQF1bcRASOTW1dekSKHOscSEMpdAyHQfSbo/
IIV4q26YprkHQi4zOwcblQPOVR329wqELV69L9H9UqjFrH3RxJfaX34PZb5P
Cv0P+OT+Zg==
             "]]}, 
           RowBox[{"x", "[", "4", "]"}]], Annotation[#, 
           $CellContext`x[4], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13k8VF8bAHBJaEGEFiJr9oT8yjLPw4y1so59G4OxMyH7Eq0SKVtKhVSk
KClFZc2aGCSUrVJU1jZUeu/7z8x8P+eec57nnOfeO0eCHmzlxc7GxnaX+Pj/
96c/ace3xveTiJ+3sj4WabutO9zyraASxliNt5T3Wunq/dPraC5ogh1fZMR3
ssfrWkW1VWQsvAQaT+rFhdZM3YoouYN3C/rgs4/prp/T13VrNL/WCbcPguMI
PcLJ5oFu07dyjbiFEbDaPXVbHRp0GQP7+g7xvIP7tOu1flc7db88FOG9XvAB
8g+yv3jzsl+XmfXXaGDPJ8CUN7M8N8Z0v4eOJq5vn4LF1yXKM+WfdCOt6mtI
rl9h5ZSB5pfIOd0/qtd+HFqYgU0XzTrtfH7q1p1syLFqnINrov+s7g381WWP
uK8RwLMA61qOZL4/tZpEYRSxjtt9g3Hl+Y4n9mtJJ22ygq4WfIeglnfuDUYb
Se2UE+sff/kBk7n1p8zKBEkbNCKKe/b8Av37dtfv/9pKMpPyMfiasAjfhP/j
IkvvIKULOLxb074ExlqfvBv/SJF6VpkmiAv+hvAu90SNAjmS4LyW6D7XP3DF
TkZ+SEGFZDum+Niq+C/Myttvi3VQI13oErUNWFgB2pd7bOqqmqTA0RNL+mJs
yM0jIpbTqkXitfvXYt7Ihi9/Kt8V3YGk8pcR2c4+q5DR1tX5w55MsjCc8/Tl
YUeJRO4eEDUizT/1UQ+vYEe/g8F6NTH7Sef3jK86arcaX8d6kwUtLUgadxy6
z/5ZjS3JYfzobE16Jd1zJa+AA7WWDa5rfrMlheeZBpYYrsGFZf3cTnkn0hbB
Ru2HX9ags/MUeXotjfQ4RXtdYzoniqqWHc99Ryc5rq4c6NrDhaf5ttUz5Bmk
39FKN98OcaFcqxlZe9GXlLdQdHgqgRtj7T4k1QQGkXT9tlN+Sq9FWWbsf5M9
h0gj41kCq9vXYrm+TczukTBSggPvOF/wOnxWmcJRxogk7WCdKBcVXI8PXpeZ
WkXHkuqN/8XJP16PcSM36MkZR0j0uogDmq4bcP7xsH8E+Shp9d65beTVPDjh
dDBplccJUlG5z5R5MQ9u2OS6bZbjNMlg53iV80FefCqvaMmuk0b6eMXhhO8C
Lyr++FQQn3qOdFK4hxqew4cXuu5zWTpmkgSNrp/TE9uI1m0nfAZTc0gTSeOL
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

             "]]}, 
           RowBox[{"x", "[", "5", "]"}]], Annotation[#, 
           $CellContext`x[5], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
0bxoRiTBzTqxG22Y/weDZzaW
             "]]}, 
           RowBox[{"x", "[", "6", "]"}]], Annotation[#, 
           $CellContext`x[6], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
3bYfDIJEnlf2KtjvA3bcexEdBJPBMp7zUgQSnNYP/pQSBNfS/m7NxM6ek3kj
URQEuZe8ChokCXTw72J13rMg0Nk81asqgevvpdfv9CIIovY3mfNjc7UeYpbq
DIL2a34Dq/j5+UbKjMfN10HgXxDo3o09wfKRr3MwCGQlVF8dxHZh74lnnguC
Y15lYq1iBNohUrU3WoIGl8dsjx3cQiCfzjvcXNI0YBso7/fETo9v67ksS4PO
IsLEBrt9dNzmjRIN9J8m2yph21yT2aWrQwOW+VcJw6IEcjYq2zFvQYMN/Svs
9thh7ud1wiJoUO+XdsZChEB5XNfnNkTSIG2g46I+9u3WxrqLUTRo4LVsUcRe
kB/Q7I6jgdtSkOFG7NgZYTX1DBqM0L+LdQjj9SSek/taTANNq1qPvdjny/ME
qG00iJnsCQwRItDeBz/c9Npp0J5Se8EDm7XX7hJLBw0iBkvH7bAj/3HoXOqh
QX/HtZqt2Dae2XtGB2jwWOanxpIggf6Ipea4ztKA/3BIRxY2pTCSaY9EMEyU
++bcF8DztJawlJQOBo6hkU03sLvat56akQ0Gun3N+VLs7b9/SJxQDoYdE3qz
Gdh8DiHGHduCwa9xc7ADdhuff7SpdTB0l437LvLj8zTX8ZtBTDDI5wd/tcA+
X31beCU2GBZtTp4xweZu4zBtjsfxBVmsdLCXFp8WQ2owiLybHZTA7vDWstx1
EseXeFH+i49AIXpsla6XgqHyFrXmKnb9h0anhNfBcOwsW6UgtuKiQBoigoF8
Yv0MB/YF3ohb694Ew+DmbWYs2OkWihsyB4PhOdu00E9eAjnUnanPnQiGIJ6y
3X3YS2nBnOWrwSBT6DR2CpusJtH2VCkE2J9xGApibyi0TnZQDYHRCaoPF3bX
+iOkSfUQEGi3PbcR222QuM+pEwJ959MEVnjw+ZadVeNsEgLimR+iR7Drv/w8
931vCDBNXm+5ga1Y1Rm4JS4EjMuOft6FPcO9pHAzPgTsE/lYzLAbjip8REkh
UCunp0zGNt2f7OGfHgLNtPdpOtiU9fr76nJD4OiJ95li2OcpFcYWl0LAqlfq
1ndu3D8SR7gOdYWAdt6xymJs2veF/SavQ4B71VM0H7v98cFiViIEXkZ0FeZi
J/oEy194GwL8NaY1adjfr3oaPRsPAbaxRd0w7Nc65lSh5RCwe8Xda4adZ8X3
qEkhFBxTLb8vcuHzR/QUc4ZyKGym2Ln9xLaaZt+1Ry0UbLWInu/YTLkbGB+1
Q+GHH1PHBHYEfWmKwyQUGpZWftGx93qOCHrtCwWjYWWV29i8h2tCmZNC4VyI
4UA4dmvBqllpSih0aE3ohWCHNVqLb08PBUVVlcJA7K6/k51h2aHg9Sw6wBs7
K1tBefBsKBTEyaH9/8cvKx2vqw6FYMpSmwH2j448J08iFL7t9T3NjF36bURz
mREKmhdOhTBh23Brsea/DYVTluG7/3AS6PqB7oaOD6EANl4Ci9jUkU18el9C
waymjP4Ve3ghtYt9LRSW/+Ry0LG7paJ2NCqEgU/F6VNXsI3MW9cslMMgqXjP
8iXsahr7A4ZqGHgWPKRWYKferdCc1QqDyuwKyxJs/d09YkpGYVBwhpA5g10W
rfQ73y4MXHkPQyL2we6B6xExYXDrPXuI8//x5+Wpf2PDwDLEX8kR20YkQuZE
fBiICoxO7MdW9GUtupoSBuNWlJA92INLOhnDx8Mg+lJFuQW2qfwJL5vyMOj8
R9zSwxY8ShZQ7giDU/Ldq4LYQqwDTjOvwiBkIHaCH1vkdOSF+p4wqLA06OPF
Fr9aLUtihIEvs1AtJ7Y8nW/rvpEwCBx5lLEBW1fti238L5yfz8VrvzjwfeT9
qWO9MuFA9jom+w77AFX11Tn5cFAU9aT2YzvOPeNyUwqHQUX6TQa268aVcxPq
4fB7tsOyD9tnm1/VikE4vJHqqujEPnjc8Im8XTiwM9/pasHOMx5bORIXDt63
Noxfxp4QtuvlSggH3bnA3Cpso4Wmy1VJ4RD04rLJJeyPNfl7e9PDwV+xvLQc
W1/S6orSqXCIjDU9cgF7iKnWvv9SOOR2ViadxlZtj6/e1h0Oy933OhKxkyqn
Ejpeh4P96yM3ErAZiY77vYhw2KXUkBuPnWCg/TfnbTgk0nNc4rB7qz/uHx8L
B+KLL1M0dsxx6395v8PhlaNcXuj/+SlzqC1yR8BW5s5KD2wOXuEzgbwR0M4Z
d9od++6yzPIAXwTYzx9LccNme2XwolkwAoJO1vi7YN8K9fVNFYuAlMlLJAfs
lfqmC5xKERAlWqlsi32GFMQhT44At7Kz3SRsE8XDkedQBFAnP46Y/F8vrqRB
1h0REKLO8dMY23A0v3rKNAJEBL6JGWEPp7aa1e6KAI49Y6n6/9fjpXCCkUME
mDoM12j9n3+d7KcbjhFwpMdgUPP//Is1dks4R0D+F4tN/7uXZirK5BYBNqI0
HIJA0Zzhd59TIkDWZZ2FCrb071hxA58IYK4zS1bG7hhOT6v2jQDnzxualbDF
687bH6dGgBLvZwNF7Paiyw/WAiIgTXAxRgE7PKVOKiwoAraI0hrlsUVoDzNH
aBEwLGe4Jof9dF/7zN6QCHhMcoX//R+6nYFQ
             "]]}, 
           RowBox[{"x", "[", "7", "]"}]], Annotation[#, 
           $CellContext`x[7], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV1nc8V98fB3AUKiuy9957h889bxkJoRIV2Xt+sskmpJISIoQUkpKvrFSy
9/x8KmVkZ0VSSsXv/v659/F8nMfjnvN6n3WFnPxPu1JRUFCo44//vxf/pl3h
in6HUSgaq1aIzGrZHwru/F5Ug9K7Pm+8aqx8qbun29tR1IbCzPyPle8UaVeH
S56sKiKhpMEXNywsprVXankYHxbNIUWBAUPekB/ayWcz/e4XbSGSQ1hNR/gF
nR79JLqGlR9I+bjxyUOCrjr0qqFlI2rbiLpz2iz+j79OOsv5Geqe38ijnYW7
lS1e5+4gr5XP5i7awEpy3HJLdHynkn4f46cACvuTrJnVlTqM1nud5q0UoHpb
6Ui00wudZwOhWbYelKDWxcPcd/y1joXhhosnAxWwSiVbcW216Xx75aESUk0F
gqp/eG9e79O5rTZNmWC9D8LE/ssr7BjVUa08P3Tz7z5Y9U1U9Hv8SYcsOlKQ
V7QfDgmOzN00mdUJyTP2LTekBtuamUCWnGUdTtZW7doValCtfHRM+8CmTsM1
7UOt6TSg0RS8epTql86FfTUfBtVoQXDrWf83vz2dPxGypeMfaWF8xXzlWP9+
Qt5mSfBSzAFY3RHmy/hDRyB48en/FD0IsNNxx+crC2FyOpNlX89B+DKyYNdy
hYsQc55xmsn/ENDWdTrGHRAiCA4nPeNlpQPxnGd91X7ihLdGe1FSDXQgqBdh
w8wrR3BqDjVVt6MHo7OBN+XHlQn7NDe49fYxQP2Df9qr3ZqEkmceS+ZlDNCS
VKGj6wUEA4npOtuTjPAohJgU0WRAWCg4n+S5yQgfzXYnRHJNCcnsI5Yh2Uxw
bpIqY6rwNIH1+MNbuvyHoaH2nuDiL2vCfPz0r07iYYCqFmfCXTtC7Ws+B7PW
w0DS2OUzrXcmJO2c7ySxMcNPWsHi78WeBGv1LHkbD2ZIOVdTqlZDJEgGjGRO
NzJDA0PUvcTqYMKvSsZ/7gwsUMbxp+bWzmVC15Kxy1d7Fjjxwn5XbyKOkCOW
3BtUzQLxNiF0FRlJBC/HVuU/+4/A60fXRXfSrhO08vdy4qyPgLnLmPEPyduE
Q2PalAceH4Go4tQj3ySyCZ9YwzzS/h6BL+ZEC5HofMITi5pBVnNWULMeCrhf
XUyIvL6hfq+IFejrXqScvV1KWIjgKmP5wwp+Z8RqpG2eEiw8j3GlWrIBBS39
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
v/8HT1m1FQ==
             "]]}, 
           RowBox[{"x", "[", "8", "]"}]], Annotation[#, 
           $CellContext`x[8], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
OSfC/wPmVLBl
             "]]}, 
           RowBox[{"x", "[", "9", "]"}]], Annotation[#, 
           $CellContext`x[9], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
G3Pc/wP5+sMY
             "]]}, 
           RowBox[{"x", "[", "10", "]"}]], Annotation[#, 
           $CellContext`x[10], "Tooltip"]& ]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"First mover\"", TraditionalForm], 
       PlotRange -> {{0, 262.76976337227296`}, {-8.024882395943659*^-11, 
         0.6209761765028206}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"x", "(", "1", ")"}], 
         RowBox[{"x", "(", "2", ")"}], 
         RowBox[{"x", "(", "3", ")"}], 
         RowBox[{"x", "(", "4", ")"}], 
         RowBox[{"x", "(", "5", ")"}], 
         RowBox[{"x", "(", "6", ")"}], 
         RowBox[{"x", "(", "7", ")"}], 
         RowBox[{"x", "(", "8", ")"}], 
         RowBox[{"x", "(", "9", ")"}], 
         RowBox[{"x", "(", "10", ")"}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Dg7agq8Q6WIn3xrqd4dq6z9Gx8N4bzPIaBVFFTb/FM3ZgqSJahNn6wp6/4dB
n/YXWxjZbZh4lnMF5axNvTv0wxa+9t5Fi8nL6BQiZ7H7ry2onTSRv7jvJxp3
0jE/kMcOGqMbqpIjvqKnBXO1fuy3A/WDG2fKfZZQ89nJ4YCDdiAsNidbQfmC
8p8/xRkgawfhT1zCMdpn9A+UlX1TtIOvJUTznIAFdIrtu5G/qh1wOhlcsor7
hJbmh0T7oXaQPxwYlds4h944/Vz4q54dlIlems/79B8apLL1zNfEDh4ISTL3
7PsPRdsu/fSxo/v333txI24G7f+aRvX2tgORxzuNLOwm0bq6ka3PAXbw8FB6
8X3WCTQ3RjjHK9gOzr64zS3X9QH13Hd34HQ0vX7Eqa4rQWOo2eSngIVLdsAl
Heju6DqKKj88vPd0sh0cf6L0W8p2BN3UqdY/lWEHF3cd0BWhDKOTzL+n5nPs
QCO1IIczdAh93acV6VlkB709RzWlsgbR6+7NtR7ldqBYk5yDrfej55SYbeYq
7ej3pdONS+r9qOO6yTf3OjpfN13Js+HvULGr76Tdm+1Av/myY+WhPpSZsK9l
tp3ub0niJG/0oIuHnEi0t3bQonFZnKvpLVpTPXWbOmIHSsiqon/AGzQrUlJt
5qMdqN1yYOMkdKFRRqf7KLN2IFosQTM26ESNx7+zUr7ZQVXAhLW3ZjuqeE/1
3tSKHRRfFp5yRdpQnoDzuuQNO7ib2ZEzbNKKfmDcvkBisodMjrhZPLwFDZTn
+OIqZA/zbNnrGNKE2v+yTvx4yB6eVGV6vdx+iWq9TJdwlbIH+b2WY6W3cJTJ
5iCRqGwPufbllWsLz9HPByjr4+p0f2bxtGxpPdozdzfNRdsetsPuCxmEPUMz
Lyi8dTa0h9K2M1rThk/RSL1ArzEze9gXm7CoqleLUtlrdjlb28MH3vc5MxY1
qEKRNupEtAe1jj3sBxKrUG6fi2MjFHvQZpLE/lVXomtqLSGOp+wh/Mju/OnF
CrSxw/SJw1l7SHph+oWw8Bg1VVcNCD1vDzev2v+sLHqEDhYdOJIVYQ9ZqkVC
0qfL0cWwpcdjCfbwhfFqaq9gKRr0adD/T7I9HJcy7jBleohu2+JKwqn2gL7U
PB+/8QDlU7z+2DXHHj6dlT7NvOM+WpAV4h9VaA8SBwnYM+57qDwzSangHl0/
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
Nihn/BX2P5llMKs=
             "]]}, 
           RowBox[{"y", "[", "1", "]"}]], Annotation[#, 
           $CellContext`y[1], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
6xR8ZkK1JHmbF4RWGYa2UU/jM2d/BHPxe4HZfaMfXUnJ+MzkMTYhCS8IoeTm
aX5IxGfOJxiq63pBjczSbbRwAs96/0XZydALdrjMGdx+mIDrq9qIxuFewLK4
VpSVcRw/9Uzsz4v9XtC0k9TTaB+HKwgkfZ+z8QIjv+aatb2x+EvyzJiQoxfU
qeu4VJrF4CJ/HzbTvL0g79tF0zbPKLzFSqoyg+IF2rXnG60jI3FaQeqV+/5e
QL7T6XjlUgRepeOSwHTUCzj7xewnV4/hFkE/UVGKF+NGUBP5tP0IPtvgodWe
4QUZ8VY7lP3D8GzWNqmZLC+QyzjOLpAeir8vydq0u9ALxN/aaC4qhOCJP1YW
fEq8wG5Nm3WBLRhXMvGdOF3uBbnbH9dOLQTh4UPq7f1VXpD//VlJ3FQALiqf
W/u7zgtip+cX//7wx1uPrl+XbvKC1T0vxEaY/PEt3N3JoU+9oJt48pkMdLx0
b4DFlhEvuFh4Q44iR8H3Z/fqa497QbMd2xyEkfEfH/QV3Se94NYupfIfbSTc
MI6V4+Z/XvAwOs0t4ZcPPv4ieLVn0QviRRuiTZ9448lCA9+WVrzg7AkXFbsC
L/x1TWmn2WZv8Gze3usa6IFHbnA2BbJ7g5RS8xknijsubnPkdtZWb0g4sUEq
o7vh/t9QxriQN5juCPu9N80F/yfx3jpW1RsajlTtzDdwxMuC92LXtLzBLyss
92CUA27VdEf9hZ43WJxwKX/QYo/nOsdyC4E31CvcqjGm2uFG1z/9MzH3hlTh
vScDThzEP87vn6NaeUOLTrWgsLktrpYp/LrGyRtwQaVF7qUDeN9IQuuwuzek
6Fh7c76zwqMVp6o3fLzhrtmTDO1XlvjTtroLNoHeED0Xxj3/Zh/uuWbvOH3c
G/6RnqHrNntxFT43pxNJ3vCjKlHs7JE9+G8VH2fBNG84ZfKedvOqGV7gFeRq
muMN1Ct3Isz5TPGAiDC3oUveINDq/2zWFXCDc5HuIcXesDd/adnyAMIHHyd6
XrrtDaFW3j6i1Sb4jeEzXprV3pBIvvtWINoYj1g4593xwBu0LIPCE22McAHZ
Qt+FVkb+JyxFZnfuxu1TaqmWQ97wmYdWPWumi0sVN9I+vPMG/h2WJeN0HXy+
4TE9YoKhn+/ZjuPZ2vi56W7/a/8x+PZtLfyPbRfus7kvwOCnN9zPrYN+Gy1c
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
AZYfdB5Xq/5DeYv9DwC1CaU=
             "]]}, 
           RowBox[{"y", "[", "2", "]"}]], Annotation[#, 
           $CellContext`y[2], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwUl3c8Vv8XwElGKpVZklXI3kLd+zn2FrLnsx+kUHZWyCxJIhKSrBTKiDxW
KTszolRaQiVC65vf8/vrvt6ve875nH3vR4Lkb0fdxMLCQmBnYfn/89Pf9HN7
op/jLEuqxe+wZcyLO/jpyo06pMWmOHhfbhjX29Dre3LjMdKtzlz7EfMWvxd+
0KrmxhhyN/rGJ2y6jD/UWmwX7H2B6mbqJ6/7rOOPV6o1opZnUOeXJ3e2DP7F
Fxr28ty68R4RKKpBuOFmFHDlP5NJzU8olCewJu40J/px+vXZrb2f0alDLmX7
x7hRmF3HQ9xzEZWvfi26epwH/VW5uRq4/BU9qZqQSxXbhdqTOnPsHi2hJ01b
297L8qFNofc1/LYvIydUVlbpJICSHK6cLLzxA9Up17CfkxdGvYaJW5sWVlFR
O/1o64QI2qYRWj6iuY7Etm1+olEnhqz3exstxvxEsduzJQ1JEiiD12WWvfcX
Mi0Z2ULg3I9GWM1jxPj/oARBg967fQcQ/3ddER3Pv2i3vclVu1ppdPWZiKPf
8j9EmS6TvvBZDp14nfhLX5QFEsmY0nd9RcTjtPH06CMmv43te9KjjKoHQ7Pd
vVkh4Ufl2yRQRTbGSxSf7ZtggsPmy8d6NfSd4a0ecm8TzPGcd7thrIEyNd+y
xjuxAZC6mpVXNdH4gZGC/BubQYFbsJSvQQeF5JufqDBmB79undz4gcNoN/+j
ww0L7HC7lfSMbTuOmtIOcz/K4ICZjK2tGYcBubLVTT7T5AT9sZ6IQ0l66E+E
QtnLKU4IGXAkSi7oo/zlkuDPMVwwkxzJ7eJjiGbeXuFl690CmevJzowWExTj
wvN2hz83RLIdn/hxxQyJDydWi/BvhZdxL/vTLlmgDtONKNmmrbBJcloqqdYK
kdpDLbU8t8HW+i1b1H4eRWzaS8IGbNvh+jWfL3oatqik2vvz0fLtYPLf98Xm
ODv0scAl0WeZB2JHTZwuejugJMER+5CcHXCL0Dn+bpMT4je5dUlPdCektOlm
RjQ5ow9xb38+DdgJP96kzb+54IoaWvcRrB/thGJS9dO9ce4o8bfL0zGBXXAk
lihjftUTOWllK7l574JE1R2shj4E9PMOz3/07byQnW7PPvyKhLo/m1O+evFC
5M1GfrdDFJQrldQXdI8X6kmNB6TLqMiX+Ejtz2Y+WNZNVTqhREe61zdyzzrx
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

             "]]}, 
           RowBox[{"y", "[", "3", "]"}]], Annotation[#, 
           $CellContext`y[3], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
AVVWCk8=
             "]]}, 
           RowBox[{"y", "[", "4", "]"}]], Annotation[#, 
           $CellContext`y[4], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13lcjF8XAHCFhBYlEe2btEkLiuYcLVSUtMxUlvZt2kaLFillpk0S7RSV
kLWkaENapL0ZRYVWpWjXhn55n/efmfl+ns9z77nnnvM8cyUcfMyc2VetWuVP
fPz/+/tyAkMo7COJ+LnIPZZ3wHZDQP2vnGLYtK5QxxPMtA/9O9T0LqcWVIz1
I1YJh2mbBTcUJc22wpeKdiuRr8naRcFyxoU5HcCRdsV5au097Yq941WCjd0Q
zDf8M5VWol37q0D9wmwvzKWocH+wqtZ26dLsOMs9CLKXO5LftbRo/3yxg+du
zjdoEEqc3bjwUZuW8t+RLo3v4GlktdBX268959cXsbFxDBTV18ad7/uuHWT2
toJ0ZhzuzNytzcqc1l5WuTN/dnYSYmWaeiFzQbsqujrNrGYaAnfvXPogsaLN
Hvhc3ZN7FkKo1mx7K1aT9FzymAzKLyh6UFNxN2s9Kdoyxft2zhzYbOFT9Tm3
idSoF7Wx7Oc8tM1drUgZFyBxqQfmszQWwWDm+X5Pw+0kEyk3/fHwJchFCyVF
a3FSIr/14NrG3xCqmGe455A0icVmFC4m8BcSy/LVj/2WIwnMaAlrnlmGzMlC
35M3lUnkfoUys/z/QHVsbe2tbFVSepsw2XN2BQTUru7yit1L8uqL+q0jugr7
dT6tS91/gMRD+Vd/vGYVTtfcPKbvgqSC1sDUU25sCNXGyb6FuiTTw9NO7tzs
mH46cFV2zBHSzCs3tXNF7Kiq3Z8vw3aMdF1jgO0SZTVOP/bNPHDHlKT+xLr9
6vJq3PbDZunKW3NSpzTrVmbOGiyyXNciSqOQzmUaeT04vBapPuR/kTUnSdsE
ag68+LkWg05uLt/pZkcqu3xgQ00iB85aKsTEWzqSbFYXd7VprMPHxaPNH4pd
SH9DFO9/6VmHKwa8ygdyqKTM2byAsXBOdEoNXD+v5UPSporoLUivRwblwb28
476k3oEU/tWN6/Eya/TXm4AAUrg1zwCvzwak1F13pIkGk8SZUQXCAhtxufTN
uLXVBdJbg38XdpVtxCM79HQ3CUWQHKoCj+09w4W1m+W9i4YukVbvn96uu5ob
L7fs+5EpFU3KK3AbO57PjQGfw5oaxuNI+jsHXp4y5sGcWF07JfOrpJFb1lHu
szy4jd/572mN66RoQZbFuTRevH3+0WSxVApJ4Mjda4dEN+G5nVufpYSlk4Yj
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
TXdPBeFqs3cTpp40zPzAPF9E+H9CPVGA
             "]]}, 
           RowBox[{"y", "[", "5", "]"}]], Annotation[#, 
           $CellContext`y[5], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           RowBox[{"y", "[", "6", "]"}]], Annotation[#, 
           $CellContext`y[6], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           RowBox[{"y", "[", "7", "]"}]], Annotation[#, 
           $CellContext`y[7], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
k+Y=
             "]]}, 
           RowBox[{"y", "[", "8", "]"}]], Annotation[#, 
           $CellContext`y[8], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
m71QQeXyej5dgCmWWLX8idgLwvXOATu6bmIXdbbn197YC8crlu/wRRVhC411
1DPte8FLw75sSukOVjOqJrpLVAHyZkYnrNbuYUIBX371WChA5PRf/W1CD7DY
xaK2zDAFSB66nybn/QibjHcvdMlVgLVl0pHu/lLMlI0vXJSmALLHStduG5Zj
d6/1Wk3NKcCLosvym7cqMBbZ8+L3+BVhy9erXkXqKfaasNGhHqQI51VGG0ao
NZhWR9XNpSxFYD3HQO43fY7lOFFOvmhQhNF8NuanWrXY2tRem/jPiqBgLeQ3
YlKPeVCmJM24lMAu1Mq++PhL7NV63vJOYyUYz3FrqfNuxKRTHLu7/ZRgQKD4
rXtBE/blZluk83Ml8NGP6+rYT8dsVBLsRKaVQOiKa7LMyxbsyXMjmQ9syvDu
+o4Fy31t2Mm3pb2BnsogfvK54o78TmzkKKlYLVUZVl0kqzFSN0b4Jnn6d6Uy
sB3kGfnPphfbznhVLo5ZBSoe8W7Q1N9i/pftNkw0VMDq666G/6z6sHaRnW+Z
3VSg6YbL9hVKP5auczo2o1QFgq6cD5z8NIj9atQ+7DSsAg5izusEw2HM0W5+
r/A2VQjcCg1SyB/BRAK8+u84qsLYhzTe/y6/x+IXhR6Q41Whv++l5pj0ODYd
3x+vWqIK90ifj5a0TWAl1yyVnm2oAq8spaxJZgpjk2VgiJVTg0sNLc9buKYx
SvmLQTigBuT8CO6YXTOYTodKQudtNcj0ZRJZ45/Frjl9cr7crQY5tPUjZqqf
sPWpmyqOy2owliDbB/afsaZ17pHx/epA4K2951rxFbNXWVP7taAONjtTbyoy
/sSsTxhKL7JrwIHawVKy/gJGsV9+HCylAWODVU+P/l7AqpipzcesNeCmS8ya
QvwiNjytYjdyTAOqjjVfwux+Y+svvw4fCteAOb7JJ7+llzCI9J03L9CAsIrD
7nXTfzBfB8mol+Ua8PdV477dPcvYOfXx7QYtGlDPo+wS93IF6/7sLKj8QwPc
fh/J0nu2hrm6WptxgSZ4njjBlMK4icXo7OxNc9SEZz/qeU2VtrAbe+iuTIGa
wDyVJXJRhQF9bCdSVq5ogl7vlbsdpG2IaqiZOz6jCUlaw7G5XEwoi++HjMuq
Jjw2PfFKqI0J1fx6+OQNuxZUjtfyySbsQH8fyNJpulqQFn09npdxJ0oVFvz5
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
D1j+4v4fbasCIQ==
             "]]}, 
           RowBox[{"y", "[", "9", "]"}]], Annotation[#, 
           $CellContext`y[9], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           RowBox[{"y", "[", "10", "]"}]], Annotation[#, 
           $CellContext`y[10], "Tooltip"]& ]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"Second mover\"", TraditionalForm], 
       PlotRange -> {{0, 262.76976337227296`}, {-7.65320669550718*^-11, 
         0.607073831947283}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"y", "(", "1", ")"}], 
         RowBox[{"y", "(", "2", ")"}], 
         RowBox[{"y", "(", "3", ")"}], 
         RowBox[{"y", "(", "4", ")"}], 
         RowBox[{"y", "(", "5", ")"}], 
         RowBox[{"y", "(", "6", ")"}], 
         RowBox[{"y", "(", "7", ")"}], 
         RowBox[{"y", "(", "8", ")"}], 
         RowBox[{"y", "(", "9", ")"}], 
         RowBox[{"y", "(", "10", ")"}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True]},
  "Row",
  DisplayFunction->(FrameBox[
    RowBox[{
      TemplateSlotSequence[1, "                "]}], FrameMargins -> 15, 
    FrameStyle -> Automatic, RoundingRadius -> 15]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", "\"                \"", 
       ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameMargins", "\[Rule]", "15"}], ",", 
       RowBox[{"RoundingRadius", "\[Rule]", "15"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.693216069662969*^9, 3.693216187121756*^9, {3.693216666070216*^9, 
   3.693216695508848*^9}, 3.693216794429591*^9, 3.693216861001594*^9, 
   3.693216895034821*^9, 3.693217282937132*^9, 3.6932174092519073`*^9, 
   3.693267792647324*^9, 3.693268006247285*^9, 3.6932680766715593`*^9, 
   3.6932682151100473`*^9, 3.693268257387802*^9, 3.693388071195992*^9, {
   3.6933882963702593`*^9, 3.693388305329612*^9}, 3.693388736771392*^9, 
   3.693388917678261*^9, 3.6933889798898697`*^9, 3.693389084986813*^9, {
   3.6933899508750963`*^9, 3.693389970387224*^9}, 3.693390091194821*^9, 
   3.693390150187726*^9, 3.693390233903132*^9, 3.693390391827153*^9, 
   3.693465241027198*^9, 3.693508955037485*^9, 3.6935491065857162`*^9, {
   3.693549149501539*^9, 3.693549156183898*^9}, 3.693549217959503*^9, 
   3.693549321676759*^9, 3.693549357157795*^9, 3.693549389894163*^9, 
   3.693549458715068*^9, 3.6935494962045*^9, 3.693549532719714*^9, {
   3.693549592165887*^9, 3.693549616213064*^9}, 3.693551608891541*^9, 
   3.693551649383109*^9, 3.693551788849519*^9, 3.69355189987843*^9, 
   3.693552015393626*^9, 3.693552098899064*^9, 3.693552203306796*^9, {
   3.69355224185544*^9, 3.693552265704995*^9}, {3.693552297001133*^9, 
   3.693552344328611*^9}, 3.693552391022505*^9, 3.693552459673304*^9, 
   3.693552519805025*^9, 3.693552607780953*^9, {3.6935526420782747`*^9, 
   3.6935526684726973`*^9}, 3.693552751517625*^9, {3.693552804320837*^9, 
   3.693552816207534*^9}, 3.693552924526701*^9, {3.69355296281409*^9, 
   3.6935530150837917`*^9}, 3.693553059770514*^9, {3.693553110247304*^9, 
   3.693553150821951*^9}, 3.6935567139532022`*^9, 3.69355677662545*^9, 
   3.69355680943888*^9, 3.6935595685789757`*^9, 3.693559602440136*^9, 
   3.693559637186779*^9, 3.6935687873672533`*^9, 3.69356911454039*^9, 
   3.69393402622366*^9, {3.6939340584719543`*^9, 3.693934064598426*^9}, 
   3.693934899872707*^9, {3.693935130154244*^9, 3.693935155210321*^9}, 
   3.693935307007538*^9, 3.693935470601185*^9, 3.693935743059915*^9, {
   3.693935919315153*^9, 3.693935959112762*^9}, {3.693936007174004*^9, 
   3.6939360413501577`*^9}, 3.694021903918817*^9, 3.6940219656116133`*^9, {
   3.694022020456333*^9, 3.694022079191965*^9}, 3.694022522376161*^9, {
   3.69408337295192*^9, 3.694083376268001*^9}, {3.694083435290024*^9, 
   3.6940834531717863`*^9}, 3.694083571670354*^9, 3.694083678095149*^9, 
   3.694083736421473*^9, 3.694083789106988*^9, {3.694083834560821*^9, 
   3.6940838622124577`*^9}, 3.694083898659315*^9, 3.694084072094207*^9, 
   3.694084108623722*^9, {3.6940841411961603`*^9, 3.694084157825118*^9}, 
   3.694084361621031*^9, {3.694084421326167*^9, 3.69408444082271*^9}, 
   3.694084540040264*^9, 3.6940845759298553`*^9, {3.694084764903928*^9, 
   3.694084819474948*^9}, 3.69408487696754*^9, 3.694084975415893*^9, 
   3.694085491525*^9, 3.6940855555660143`*^9, {3.6940856307327967`*^9, 
   3.6940856913646*^9}, 3.694085724413669*^9, 3.69408577293332*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.99`", ",", "0.01`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0.99`", ",", "0.01`", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAh5Aoxr5kR0CiYYMR85ZzP4Ogqk4U
cklAF5pgDmieYT9/03tw7+lLQLYyiYQxJkg/aNONeFxVTkCsQBPFQecqP8lL
Y4y4elBAgW/Da0ZfAz+AliZjRrRRQDe5VSFH9tQ+VkP9BSgIU0BRwLGWzZmX
PqNW9JvSVVRAlkSw/E3sSz6SUpK4AI1VQOWkbtDi9AA+obBDoYLeVkCW/M/Z
H2zJvVL3mxCIGVhAWCo7vwtYoj0joAdM4W5ZQEAGsxmeZ1K9aq+TegO+WkBk
spxOTIBLvVOnxi+p9ltAXh/5qUc5JD1cAQ2xokldQEzBDQ+H6xO9B0T6uB+G
XkDA4ogcIAfpPCntB7RlvF9AOUhDhui30Dw2fJS9f4ZgQO6FsguL8Me8KHZ4
ZI4jYUAlIuEMI/TAPCohZvHGzWFARLD1vG1PtDxn/+P343RiQCIKBirw2q28
9VG1wcIQY0CTZb/LT4PDPJNVkHHLuWNAPX3yxClYvbyCzb7klVdkQO5IKcQh
OJq8rHh90UTyZEAxiPHntiqiPObURaQdmmVAxrMs2K/+yDxxpWE6uDZmQCsd
kJGLABQ9DCeHtnzgZkBM352ExGG1PPgcAPYCf2dA/vuXIkPB8rwgRgmvbRpo
QOxTP1NBfS+9WCAcTgLDaEBiOfvUdsfPvOFugrBYYGlAgEisEnxxkLx5bvL4
2ApqQL+dbqq4se88TaHyuj2yakBf7bHxp2uzPHJIRkBkTmtAMdZ9aSMBp7yn
oKOrtPdrQHTRS1mUZNC8LW1U2saVbEB46tipCwPsvO5slYK9MG1AVTITTdn4
2Dy/HeAQ3thtQIqzFWOaR4a84UJ+YsB1bkDfnviWfq98vBMZJprMH29AMMS5
Dd8WU7yAIl5LvcZvQLFRZlwtFpE8H9D03zcxcEBNloNuFUGUPIZnPw2mhXBA
EntLLaLFkLwWuTMcddRwQK7He/QFMa28LuMsHtkpcUDo49iST82vvOMm7lyv
fXFANkmlA/0Rn7zBJFl95stxQGOVzecNo5g8J/vIkLIgckBrgGyWcJuqPLWL
4oXfb3JAhYN9bTiupTzvEqv6/79yQE7JXAV002K8YfGIjw==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-4.6243005281384326`*^-11, 
                    0.004782628522854189}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAh5Aoxr5kR0CiYYMR85ZzP4Ogqk4U
cklAF5pgDmieYT9/03tw7+lLQLYyiYQxJkg/aNONeFxVTkCsQBPFQecqP8lL
Y4y4elBAgW/Da0ZfAz+AliZjRrRRQDe5VSFH9tQ+VkP9BSgIU0BRwLGWzZmX
PqNW9JvSVVRAlkSw/E3sSz6SUpK4AI1VQOWkbtDi9AA+obBDoYLeVkCW/M/Z
H2zJvVL3mxCIGVhAWCo7vwtYoj0joAdM4W5ZQEAGsxmeZ1K9aq+TegO+WkBk
spxOTIBLvVOnxi+p9ltAXh/5qUc5JD1cAQ2xokldQEzBDQ+H6xO9B0T6uB+G
XkDA4ogcIAfpPCntB7RlvF9AOUhDhui30Dw2fJS9f4ZgQO6FsguL8Me8KHZ4
ZI4jYUAlIuEMI/TAPCohZvHGzWFARLD1vG1PtDxn/+P343RiQCIKBirw2q28
9VG1wcIQY0CTZb/LT4PDPJNVkHHLuWNAPX3yxClYvbyCzb7klVdkQO5IKcQh
OJq8rHh90UTyZEAxiPHntiqiPObURaQdmmVAxrMs2K/+yDxxpWE6uDZmQCsd
kJGLABQ9DCeHtnzgZkBM352ExGG1PPgcAPYCf2dA/vuXIkPB8rwgRgmvbRpo
QOxTP1NBfS+9WCAcTgLDaEBiOfvUdsfPvOFugrBYYGlAgEisEnxxkLx5bvL4
2ApqQL+dbqq4se88TaHyuj2yakBf7bHxp2uzPHJIRkBkTmtAMdZ9aSMBp7yn
oKOrtPdrQHTRS1mUZNC8LW1U2saVbEB46tipCwPsvO5slYK9MG1AVTITTdn4
2Dy/HeAQ3thtQIqzFWOaR4a84UJ+YsB1bkDfnviWfq98vBMZJprMH29AMMS5
Dd8WU7yAIl5LvcZvQLFRZlwtFpE8H9D03zcxcEBNloNuFUGUPIZnPw2mhXBA
EntLLaLFkLwWuTMcddRwQK7He/QFMa28LuMsHtkpcUDo49iST82vvOMm7lyv
fXFANkmlA/0Rn7zBJFl95stxQGOVzecNo5g8J/vIkLIgckBrgGyWcJuqPLWL
4oXfb3JAhYN9bTiupTzvEqv6/79yQE7JXAV002K8YfGIjw==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-4.6243005281384326`*^-11, 
                    0.004782628522854189}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{5.084745762711864*^-6, 0.010000024917918827`}, {
                    4.890530841737235, 0.09678048813060096}, {
                    6.072382409790718, 0.16820341273190154`}}], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAYucNEscnSEBsKmF+sIfFP4Ogqk4U
cklAD8OlmxncwT9/03tw7+lLQLpckPCvlrc/aNONeFxVTkDLK5jqq1WsP8lL
Y4y4elBALD+hXRounD+AliZjRrRRQHS4nEl0xIg/VkP9BSgIU0DYdRDvzypw
P6NW9JvSVVRAfsIkhNhiUD+SUpK4AI1VQA6UsKcYvSs/obBDoYLeVkAzqyY0
HFH+PlL3mxCIGVhAfVGOooolzT4joAdM4W5ZQPiVpPP0DZM+aq+TegO+WkCe
9jFPJUNXPlOnxi+p9ltAhveVsH5BID5cAQ2xokldQPiAaRZZU+I9B0T6uB+G
XkDkQjeJO4eoPSntB7RlvF9AaOXpjw8ycT02fJS9f4ZgQMo4VgPK/jM9KHZ4
ZI4jYUDcsJ7jXU32PCohZvHGzWFAqJVDuxk0q7xn/+P343RiQCIp4Tik5788
9VG1wcIQY0B1UGDwUJ/TvJNVkHHLuWNAVdfvTytZzTyCzb7klVdkQJa9dEwJ
Iak8rHh90UTyZEDD9XVb68OzvObURaQdmmVAvM1fwmoI2rxxpWE6uDZmQLCU
TlRrCyS9DCeHtnzgZkD05jPXlA3FvPgcAPYCf2dAhOPRn7KSAj0gRgmvbRpo
QNYsguTKaT89WCAcTgLDaECVdIKUn2HfPOFugrBYYGlAQNfLyMIqnzx5bvL4
2ApqQCXV4o9C4f+8TaHyuj2yakDgK/Yz0nnEvHJIRkBkTmtAbn2v+7fysjyn
oKOrtPdrQGKiCIBVU948LW1U2saVbEAcyduMv7HzPO5slYK9MG1AEuoTzX2m
6ry/HeAQ3thtQCgQ2Xs0I5A84UJ+YsB1bkBP4mNSq6aIPBMZJprMH29A2uix
ctF3WzyAIl5LvcZvQI3errmTUKK8H9D03zcxcEAKy4nuz+ejvIZnPw2mhXBA
CFPdwJAppTwWuTMcddRwQLDyxBYV+cA8LuMsHtkpcUAEvcWIw/rBPOMm7lyv
fXFA96ArIBktsTzBJFl95stxQNJzahAUtai8J/vIkLIgckBjbYWvM8u7vLWL
4oXfb3JA6DheJzTEtrzvEqv6/79yQPbIhyGfXF88noeOvQ==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-3.5606373788105595`*^-14, 
                    0.16820341273190154`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{5.084745762711864*^-6, 0.010000024917918827`}, {
                    4.890530841737235, 0.09678048813060096}, {
                    6.072382409790718, 0.16820341273190154`}}], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAYucNEscnSEBsKmF+sIfFP4Ogqk4U
cklAD8OlmxncwT9/03tw7+lLQLpckPCvlrc/aNONeFxVTkDLK5jqq1WsP8lL
Y4y4elBALD+hXRounD+AliZjRrRRQHS4nEl0xIg/VkP9BSgIU0DYdRDvzypw
P6NW9JvSVVRAfsIkhNhiUD+SUpK4AI1VQA6UsKcYvSs/obBDoYLeVkAzqyY0
HFH+PlL3mxCIGVhAfVGOooolzT4joAdM4W5ZQPiVpPP0DZM+aq+TegO+WkCe
9jFPJUNXPlOnxi+p9ltAhveVsH5BID5cAQ2xokldQPiAaRZZU+I9B0T6uB+G
XkDkQjeJO4eoPSntB7RlvF9AaOXpjw8ycT02fJS9f4ZgQMo4VgPK/jM9KHZ4
ZI4jYUDcsJ7jXU32PCohZvHGzWFAqJVDuxk0q7xn/+P343RiQCIp4Tik5788
9VG1wcIQY0B1UGDwUJ/TvJNVkHHLuWNAVdfvTytZzTyCzb7klVdkQJa9dEwJ
Iak8rHh90UTyZEDD9XVb68OzvObURaQdmmVAvM1fwmoI2rxxpWE6uDZmQLCU
TlRrCyS9DCeHtnzgZkD05jPXlA3FvPgcAPYCf2dAhOPRn7KSAj0gRgmvbRpo
QNYsguTKaT89WCAcTgLDaECVdIKUn2HfPOFugrBYYGlAQNfLyMIqnzx5bvL4
2ApqQCXV4o9C4f+8TaHyuj2yakDgK/Yz0nnEvHJIRkBkTmtAbn2v+7fysjyn
oKOrtPdrQGKiCIBVU948LW1U2saVbEAcyduMv7HzPO5slYK9MG1AEuoTzX2m
6ry/HeAQ3thtQCgQ2Xs0I5A84UJ+YsB1bkBP4mNSq6aIPBMZJprMH29A2uix
ctF3WzyAIl5LvcZvQI3errmTUKK8H9D03zcxcEAKy4nuz+ejvIZnPw2mhXBA
CFPdwJAppTwWuTMcddRwQLDyxBYV+cA8LuMsHtkpcUAEvcWIw/rBPOMm7lyv
fXFA96ArIBktsTzBJFl95stxQNJzahAUtai8J/vIkLIgckBjbYWvM8u7vLWL
4oXfb3JA6DheJzTEtrzvEqv6/79yQPbIhyGfXF88noeOvQ==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-3.5606373788105595`*^-14, 
                    0.16820341273190154`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AQBa34kvxPfRcJVHn
jxNA5jHEfvMPaj/FyyIHhWIkQAmlT/X0wbI/Hy7qmjJJLkCuKDrqvrLHPxdi
2uMT/zNA7AKll3vMzz+fNY2q3UI5QN5qst7MU9I/r6vbi7UsPkDD+SlADrnT
Px/Vu07uv0FA8rAmU7ye1D9Tocq9E11EQIzh+zZ25tQ/yz4nOkDNRkChHAdJ
5IrUP4Ogqk4UcklAjIYCQ5Ff0z9/03tw7+lLQDKvaHXQf9E/aNONeFxVTkBj
3oZOO/TNP8lLY4y4elBA3k/OgRhcxz+AliZjRrRRQDcZlz6b2cA/VkP9BSgI
U0CyRgdK/M20P6NW9JvSVVRAcvxrGx8upj+SUpK4AI1VQIGdxmnP/ZQ/obBD
oYLeVkC4sGiGYId+P1L3mxCIGVhAjmXRkEZEYz8joAdM4W5ZQBmK7EGOP0E/
aq+TegO+WkBc5yWt5n0YP1Onxi+p9ltAY7h0m9ws7z5cAQ2xokldQGwkjBYS
Srs+B0T6uB+GXkC2twkkyWuHPintB7RlvF9AnXDaiijNUj42fJS9f4ZgQN6O
HqH7/RY+KHZ4ZI4jYUC+5A6HcfffPSohZvHGzWFADFZnDBGHoT1n/+P343Ri
QJh7tqhMg2M99VG1wcIQY0Ciy70eZkgwPZNVkHHLuWNALlKEAnv18jyCzb7k
lVdkQAAIIUunhi88rHh90UTyZED0MCkfcHezPObURaQdmmVAdGNY62sI2jxx
pWE6uDZmQPnL62EsLiQ9DCeHtnzgZkD823xGlYnFPPgcAPYCf2dAbQ9ZhEaH
Ar0gRgmvbRpoQEUX2hSpVj+9WCAcTgLDaEAwUp+MrOLfvOFugrBYYGlAQLwZ
987Qorx5bvL42ApqQCCVj9ZwCQA9TaHyuj2yakC2GSkJoJzDPHJIRkBkTmtA
2AxIf7VGsrynoKOrtPdrQEhjNdFth9+8LW1U2saVbECh/RcKCIv1vO5slYK9
MG1ATjdLxq756Dy/HeAQ3thtQMhpWbXyXaC84UJ+YsB1bkAPQVkndk6VvBMZ
JprMH29AqmzA+l1qcbyAIl5LvcZvQOkzRDDJbKQ8H9D03zcxcECmMH9jZgip
PIZnPw2mhXBAWJDSXitPobwWuTMcddRwQFIfSknBOcC8LuMsHtkpcUDi5Aif
PuzBvOMm7lyvfXFAMj2BICyRsbzBJFl95stxQKnz35ZpiK08J/vIkLIgckCF
0ZqXyyy/PLWL4oXfb3JAFY3ktXpWuTzvEqv6/79yQAxiKkZ9IHW8e6fGXQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.1133677971821037`*^-13, 
                    0.3265662705375909}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AQBa34kvxPfRcJVHn
jxNA5jHEfvMPaj/FyyIHhWIkQAmlT/X0wbI/Hy7qmjJJLkCuKDrqvrLHPxdi
2uMT/zNA7AKll3vMzz+fNY2q3UI5QN5qst7MU9I/r6vbi7UsPkDD+SlADrnT
Px/Vu07uv0FA8rAmU7ye1D9Tocq9E11EQIzh+zZ25tQ/yz4nOkDNRkChHAdJ
5IrUP4Ogqk4UcklAjIYCQ5Ff0z9/03tw7+lLQDKvaHXQf9E/aNONeFxVTkBj
3oZOO/TNP8lLY4y4elBA3k/OgRhcxz+AliZjRrRRQDcZlz6b2cA/VkP9BSgI
U0CyRgdK/M20P6NW9JvSVVRAcvxrGx8upj+SUpK4AI1VQIGdxmnP/ZQ/obBD
oYLeVkC4sGiGYId+P1L3mxCIGVhAjmXRkEZEYz8joAdM4W5ZQBmK7EGOP0E/
aq+TegO+WkBc5yWt5n0YP1Onxi+p9ltAY7h0m9ws7z5cAQ2xokldQGwkjBYS
Srs+B0T6uB+GXkC2twkkyWuHPintB7RlvF9AnXDaiijNUj42fJS9f4ZgQN6O
HqH7/RY+KHZ4ZI4jYUC+5A6HcfffPSohZvHGzWFADFZnDBGHoT1n/+P343Ri
QJh7tqhMg2M99VG1wcIQY0Ciy70eZkgwPZNVkHHLuWNALlKEAnv18jyCzb7k
lVdkQAAIIUunhi88rHh90UTyZED0MCkfcHezPObURaQdmmVAdGNY62sI2jxx
pWE6uDZmQPnL62EsLiQ9DCeHtnzgZkD823xGlYnFPPgcAPYCf2dAbQ9ZhEaH
Ar0gRgmvbRpoQEUX2hSpVj+9WCAcTgLDaEAwUp+MrOLfvOFugrBYYGlAQLwZ
987Qorx5bvL42ApqQCCVj9ZwCQA9TaHyuj2yakC2GSkJoJzDPHJIRkBkTmtA
2AxIf7VGsrynoKOrtPdrQEhjNdFth9+8LW1U2saVbECh/RcKCIv1vO5slYK9
MG1ATjdLxq756Dy/HeAQ3thtQMhpWbXyXaC84UJ+YsB1bkAPQVkndk6VvBMZ
JprMH29AqmzA+l1qcbyAIl5LvcZvQOkzRDDJbKQ8H9D03zcxcECmMH9jZgip
PIZnPw2mhXBAWJDSXitPobwWuTMcddRwQFIfSknBOcC8LuMsHtkpcUDi5Aif
PuzBvOMm7lyvfXFAMj2BICyRsbzBJFl95stxQKnz35ZpiK08J/vIkLIgckCF
0ZqXyyy/PLWL4oXfb3JAFY3ktXpWuTzvEqv6/79yQAxiKkZ9IHW8e6fGXQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.1133677971821037`*^-13, 
                    0.3265662705375909}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AAAAOeaFtPPRcJVHn
jxNAYrEQ17m3FD/FyyIHhWIkQDbEe01cPYQ/Hy7qmjJJLkBM7SinqW2pPxdi
2uMT/zNA0EVlkDFytz+fNY2q3UI5QJV8wfFtWsA/r6vbi7UsPkDS9gDIGu/D
Px/Vu07uv0FAYbRt+6R3xz9Tocq9E11EQJ2RJBRczco/yz4nOkDNRkCsvvGX
Ns3NP4Ogqk4UcklAmYMor+xj0D9/03tw7+lLQBy+ulHehtE/aNONeFxVTkC6
8bmnAT/SP8lLY4y4elBA9kIxNIVf0j+AliZjRrRRQPaDIQ1QrNE/VkP9BSgI
U0Ah5ZpXxMDPP6NW9JvSVVRACGx4S8BKyj+SUpK4AI1VQCjvvrO9JsQ/obBD
oYLeVkAGHDg8/va6P1L3mxCIGVhAnHqxoBl5sD8joAdM4W5ZQJt0oWUy2KA/
aq+TegO+WkAcmQv0IzqOP1Onxi+p9ltA5LT3CSkveT9cAQ2xokldQPSBc5Fe
DGE/B0T6uB+GXkAfUvAWYyRGPyntB7RlvF9ASWwOZeT0Kj82fJS9f4ZgQLDf
sdAtxgs/KHZ4ZI4jYUBf7FQliZDuPiohZvHGzWFAB4sCNMfazj5n/+P343Ri
QErf9wPgLrE+9VG1wcIQY0Aa05wvhHCXPpNVkHHLuWNA0ZFINqT4gD6Czb7k
lVdkQCBOQrMag24+rHh90UTyZECufEclnj5gPubURaQdmmVAU3ZHORr4Uj5x
pWE6uDZmQMIL1hoKOEk+DCeHtnzgZkCCpHYJWY5CPvgcAPYCf2dArtAK1zyz
PT4gRgmvbRpoQI/NJ8VSGjk+WCAcTgLDaEC2y2lcBPY1PuFugrBYYGlAYVJh
Fc0DND55bvL42ApqQFjRltAUljI+TaHyuj2yakBgU6UUIaAxPnJIRkBkTmtA
Z+SgV4j+MD6noKOrtPdrQFCLh4o1gjA+LW1U2saVbEDPow7rRC8wPu5slYK9
MG1AAygjhsHnLz6/HeAQ3thtQBuC+wfuiS8+4UJ+YsB1bkDMFL9srEkvPhMZ
JprMH29A+F0m0wMXLz6AIl5LvcZvQIpHGWO49C4+H9D03zcxcEAx4lD5nd0u
PoZnPw2mhXBAsPTCzC3LLj4WuTMcddRwQJy7dXMAvi4+LuMsHtkpcUDCfxNW
r7MuPuMm7lyvfXFAxZBCu9CrLj7BJFl95stxQLPLNbO+pi4+J/vIkLIgckBN
P9rkxqIuPrWL4oXfb3JAfs0PkyWgLj7vEqv6/79yQEwtM8cjni4+okO1zQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.2870800981227569}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AAAAOeaFtPPRcJVHn
jxNAYrEQ17m3FD/FyyIHhWIkQDbEe01cPYQ/Hy7qmjJJLkBM7SinqW2pPxdi
2uMT/zNA0EVlkDFytz+fNY2q3UI5QJV8wfFtWsA/r6vbi7UsPkDS9gDIGu/D
Px/Vu07uv0FAYbRt+6R3xz9Tocq9E11EQJ2RJBRczco/yz4nOkDNRkCsvvGX
Ns3NP4Ogqk4UcklAmYMor+xj0D9/03tw7+lLQBy+ulHehtE/aNONeFxVTkC6
8bmnAT/SP8lLY4y4elBA9kIxNIVf0j+AliZjRrRRQPaDIQ1QrNE/VkP9BSgI
U0Ah5ZpXxMDPP6NW9JvSVVRACGx4S8BKyj+SUpK4AI1VQCjvvrO9JsQ/obBD
oYLeVkAGHDg8/va6P1L3mxCIGVhAnHqxoBl5sD8joAdM4W5ZQJt0oWUy2KA/
aq+TegO+WkAcmQv0IzqOP1Onxi+p9ltA5LT3CSkveT9cAQ2xokldQPSBc5Fe
DGE/B0T6uB+GXkAfUvAWYyRGPyntB7RlvF9ASWwOZeT0Kj82fJS9f4ZgQLDf
sdAtxgs/KHZ4ZI4jYUBf7FQliZDuPiohZvHGzWFAB4sCNMfazj5n/+P343Ri
QErf9wPgLrE+9VG1wcIQY0Aa05wvhHCXPpNVkHHLuWNA0ZFINqT4gD6Czb7k
lVdkQCBOQrMag24+rHh90UTyZECufEclnj5gPubURaQdmmVAU3ZHORr4Uj5x
pWE6uDZmQMIL1hoKOEk+DCeHtnzgZkCCpHYJWY5CPvgcAPYCf2dArtAK1zyz
PT4gRgmvbRpoQI/NJ8VSGjk+WCAcTgLDaEC2y2lcBPY1PuFugrBYYGlAYVJh
Fc0DND55bvL42ApqQFjRltAUljI+TaHyuj2yakBgU6UUIaAxPnJIRkBkTmtA
Z+SgV4j+MD6noKOrtPdrQFCLh4o1gjA+LW1U2saVbEDPow7rRC8wPu5slYK9
MG1AAygjhsHnLz6/HeAQ3thtQBuC+wfuiS8+4UJ+YsB1bkDMFL9srEkvPhMZ
JprMH29A+F0m0wMXLz6AIl5LvcZvQIpHGWO49C4+H9D03zcxcEAx4lD5nd0u
PoZnPw2mhXBAsPTCzC3LLj4WuTMcddRwQJy7dXMAvi4+LuMsHtkpcUDCfxNW
r7MuPuMm7lyvfXFAxZBCu9CrLj7BJFl95stxQLPLNbO+pi4+J/vIkLIgckBN
P9rkxqIuPrWL4oXfb3JAfs0PkyWgLj7vEqv6/79yQEwtM8cjni4+okO1zQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.2870800981227569}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AAADFesqiO/RcJVHn
jxNArNk6gU2Tuj7FyyIHhWIkQAb05ShS6lE/Hy7qmjJJLkDGZsWKHgqHPxdi
2uMT/zNAejI/l8zvnT+fNY2q3UI5QOo/Ftk5gKk/r6vbi7UsPkAYRSt/lGex
Px/Vu07uv0FACvX99/patj9Tocq9E11EQDLh+Esobbs/yz4nOkDNRkD9nr22
LUXAP4Ogqk4UcklApnUPNNFKwz9/03tw7+lLQGxY9HHxUsY/aNONeFxVTkBY
T0SZVW3JP8lLY4y4elBA8ET+7DzRzD+AliZjRrRRQPHZPTCNzs8/VkP9BSgI
U0DL80DK4j3RP6NW9JvSVVRA93q79jUB0j+SUpK4AI1VQD4pwbWo+NE/obBD
oYLeVkCSfek0rO7QP1L3mxCIGVhAjkllT6MQzj8joAdM4W5ZQDfTAcMOe8g/
aq+TegO+WkCifjja9XXCP1Onxi+p9ltAA3LNGq90uj9cAQ2xokldQHmpGijf
NrE/B0T6uB+GXkDuxYW2IeWlPyntB7RlvF9AYiAL2/A0mz82fJS9f4ZgQBSo
eE+O+o8/KHZ4ZI4jYUD0Z389/JeDPyohZvHGzWFAQzILWUq1dz9n/+P343Ri
QIlQb6XAU24/9VG1wcIQY0C43s2jUQ9lP5NVkHHLuWNAVm491nspXj+Czb7k
lVdkQLC2+dOLX1c/rHh90UTyZEBPUOkcehxTP+bURaQdmmVAnNvS+tkaUD9x
pWE6uDZmQHr9q4qNd0w/DCeHtnzgZkCTkiPDMrtJP/gcAPYCf2dABs5gMTn4
Rz8gRgmvbRpoQCnmKlMavUY/WCAcTgLDaEDLy3mVlctFP+FugrBYYGlAkeq9
e2AqRT95bvL42ApqQKNEw+w1rUQ/TaHyuj2yakB5Z5jtTFVEP3JIRkBkTmtA
QybLA8EZRD+noKOrtPdrQB33G9zf6kM/LW1U2saVbEDgLqerJctDP+5slYK9
MG1AGTjJ6BW0Qz+/HeAQ3thtQFaKGQS4oUM/4UJ+YsB1bkBmJ37sEJVDPxMZ
JprMH29ARN/XYwqLQz+AIl5LvcZvQCiZpAk2hEM/H9D03zcxcEDyJoPAmX9D
P4ZnPw2mhXBAEVQog+57Qz8WuTMcddRwQEstz0pTeUM/LuMsHtkpcUCmF+PT
RndDP+Mm7lyvfXFA6cKYsbR1Qz/BJFl95stxQBBEULqrdEM/J/vIkLIgckB3
s3fv2nNDP7WL4oXfb3JA6E2ywE9zQz/vEqv6/79yQI/v6jbpckM/JunBmg==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.2813239011283452}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AAADFesqiO/RcJVHn
jxNArNk6gU2Tuj7FyyIHhWIkQAb05ShS6lE/Hy7qmjJJLkDGZsWKHgqHPxdi
2uMT/zNAejI/l8zvnT+fNY2q3UI5QOo/Ftk5gKk/r6vbi7UsPkAYRSt/lGex
Px/Vu07uv0FACvX99/patj9Tocq9E11EQDLh+Esobbs/yz4nOkDNRkD9nr22
LUXAP4Ogqk4UcklApnUPNNFKwz9/03tw7+lLQGxY9HHxUsY/aNONeFxVTkBY
T0SZVW3JP8lLY4y4elBA8ET+7DzRzD+AliZjRrRRQPHZPTCNzs8/VkP9BSgI
U0DL80DK4j3RP6NW9JvSVVRA93q79jUB0j+SUpK4AI1VQD4pwbWo+NE/obBD
oYLeVkCSfek0rO7QP1L3mxCIGVhAjkllT6MQzj8joAdM4W5ZQDfTAcMOe8g/
aq+TegO+WkCifjja9XXCP1Onxi+p9ltAA3LNGq90uj9cAQ2xokldQHmpGijf
NrE/B0T6uB+GXkDuxYW2IeWlPyntB7RlvF9AYiAL2/A0mz82fJS9f4ZgQBSo
eE+O+o8/KHZ4ZI4jYUD0Z389/JeDPyohZvHGzWFAQzILWUq1dz9n/+P343Ri
QIlQb6XAU24/9VG1wcIQY0C43s2jUQ9lP5NVkHHLuWNAVm491nspXj+Czb7k
lVdkQLC2+dOLX1c/rHh90UTyZEBPUOkcehxTP+bURaQdmmVAnNvS+tkaUD9x
pWE6uDZmQHr9q4qNd0w/DCeHtnzgZkCTkiPDMrtJP/gcAPYCf2dABs5gMTn4
Rz8gRgmvbRpoQCnmKlMavUY/WCAcTgLDaEDLy3mVlctFP+FugrBYYGlAkeq9
e2AqRT95bvL42ApqQKNEw+w1rUQ/TaHyuj2yakB5Z5jtTFVEP3JIRkBkTmtA
QybLA8EZRD+noKOrtPdrQB33G9zf6kM/LW1U2saVbEDgLqerJctDP+5slYK9
MG1AGTjJ6BW0Qz+/HeAQ3thtQFaKGQS4oUM/4UJ+YsB1bkBmJ37sEJVDPxMZ
JprMH29ARN/XYwqLQz+AIl5LvcZvQCiZpAk2hEM/H9D03zcxcEDyJoPAmX9D
P4ZnPw2mhXBAEVQog+57Qz8WuTMcddRwQEstz0pTeUM/LuMsHtkpcUCmF+PT
RndDP+Mm7lyvfXFA6cKYsbR1Qz/BJFl95stxQBBEULqrdEM/J/vIkLIgckB3
s3fv2nNDP7WL4oXfb3JA6E2ywE9zQz/vEqv6/79yQI/v6jbpckM/JunBmg==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.2813239011283452}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYLbx8CXiOvRcJVHn
jxNAkG2l3JCkXD7FyyIHhWIkQJxuujGM2ho/Hy7qmjJJLkCES5hp4xZiPxdi
2uMT/zNAZguTfREEgT+fNY2q3UI5QI4S86qJI5I/r6vbi7UsPkDZeAxwnxic
Px/Vu07uv0FA6j+GqffBoz9Tocq9E11EQL4i5DjW26k/yz4nOkDNRkDzyByA
eB6wP4Ogqk4UcklAVaLiCboQtD9/03tw7+lLQODTsBbuQ7g/aNONeFxVTkAB
Xkc/D+O8P8lLY4y4elBAPtqHZNA9wT+AliZjRrRRQHZhBEsrIsQ/VkP9BSgI
U0B4ztZti43HP6NW9JvSVVRAxuPMTFUYyz+SUpK4AI1VQIoNXGwYYM4/obBD
oYLeVkCSzpeCsMrQP1L3mxCIGVhAHYdYF27u0T8joAdM4W5ZQIAqbawGj9I/
aq+TegO+WkCBzy2hO2nSP1Onxi+p9ltA5N+v43ST0T9cAQ2xokldQDevUyJ3
DNA/B0T6uB+GXkDvEMGRAorMPyntB7RlvF9AGRI5AFXdyD82fJS9f4ZgQN5T
oKz8GcU/KHZ4ZI4jYUD4H7+93wvCPyohZvHGzWFAC5sS8/isvj9n/+P343Ri
QCc3kbFhiro/9VG1wcIQY0BCM0t6gZi3P5NVkHHLuWNArUYm8Ss0tT+Czb7k
lVdkQJsGzEIKjrM/rHh90UTyZEB94CDh61myP+bURaQdmmVA/AGIOxJksT9x
pWE6uDZmQLA/NM8fvLA/DCeHtnzgZkBX/+XX8TawP/gcAPYCf2dAxGLC4cS4
rz8gRgmvbRpoQBWUMW1WNa8/WCAcTgLDaECJxVeP8syuP+FugrBYYGlAwqDF
rLGFrj95bvL42ApqQBAqzXdlTa4/TaHyuj2yakCQLY5/WiWuP3JIRkBkTmtA
xnKkjPcJrj+noKOrtPdrQLA12ohA9K0/LW1U2saVbECX+6GFeuWtP+5slYK9
MG1AGZEU07XarT+/HeAQ3thtQCTCMmAc0q0/4UJ+YsB1bkD47kUfLMytPxMZ
JprMH29A9pUkknXHrT+AIl5LvcZvQHNuMPg9xK0/H9D03zcxcEAgD/S0EcKt
P4ZnPw2mhXBAdGMQwlfArT8WuTMcddRwQHV03YYev60/LuMsHtkpcUBpcovJ
J76tP+Mm7lyvfXFA0rFa/mm9rT/BJFl95stxQL034crrvK0/J/vIkLIgckDU
nCo7iLytP7WL4oXfb3JAzxDp9EW8rT/vEqv6/79yQBOINvoVvK0/8GHKjg==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.2899796184398511}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYLbx8CXiOvRcJVHn
jxNAkG2l3JCkXD7FyyIHhWIkQJxuujGM2ho/Hy7qmjJJLkCES5hp4xZiPxdi
2uMT/zNAZguTfREEgT+fNY2q3UI5QI4S86qJI5I/r6vbi7UsPkDZeAxwnxic
Px/Vu07uv0FA6j+GqffBoz9Tocq9E11EQL4i5DjW26k/yz4nOkDNRkDzyByA
eB6wP4Ogqk4UcklAVaLiCboQtD9/03tw7+lLQODTsBbuQ7g/aNONeFxVTkAB
Xkc/D+O8P8lLY4y4elBAPtqHZNA9wT+AliZjRrRRQHZhBEsrIsQ/VkP9BSgI
U0B4ztZti43HP6NW9JvSVVRAxuPMTFUYyz+SUpK4AI1VQIoNXGwYYM4/obBD
oYLeVkCSzpeCsMrQP1L3mxCIGVhAHYdYF27u0T8joAdM4W5ZQIAqbawGj9I/
aq+TegO+WkCBzy2hO2nSP1Onxi+p9ltA5N+v43ST0T9cAQ2xokldQDevUyJ3
DNA/B0T6uB+GXkDvEMGRAorMPyntB7RlvF9AGRI5AFXdyD82fJS9f4ZgQN5T
oKz8GcU/KHZ4ZI4jYUD4H7+93wvCPyohZvHGzWFAC5sS8/isvj9n/+P343Ri
QCc3kbFhiro/9VG1wcIQY0BCM0t6gZi3P5NVkHHLuWNArUYm8Ss0tT+Czb7k
lVdkQJsGzEIKjrM/rHh90UTyZEB94CDh61myP+bURaQdmmVA/AGIOxJksT9x
pWE6uDZmQLA/NM8fvLA/DCeHtnzgZkBX/+XX8TawP/gcAPYCf2dAxGLC4cS4
rz8gRgmvbRpoQBWUMW1WNa8/WCAcTgLDaECJxVeP8syuP+FugrBYYGlAwqDF
rLGFrj95bvL42ApqQBAqzXdlTa4/TaHyuj2yakCQLY5/WiWuP3JIRkBkTmtA
xnKkjPcJrj+noKOrtPdrQLA12ohA9K0/LW1U2saVbECX+6GFeuWtP+5slYK9
MG1AGZEU07XarT+/HeAQ3thtQCTCMmAc0q0/4UJ+YsB1bkD47kUfLMytPxMZ
JprMH29A9pUkknXHrT+AIl5LvcZvQHNuMPg9xK0/H9D03zcxcEAgD/S0EcKt
P4ZnPw2mhXBAdGMQwlfArT8WuTMcddRwQHV03YYev60/LuMsHtkpcUBpcovJ
J76tP+Mm7lyvfXFA0rFa/mm9rT/BJFl95stxQL034crrvK0/J/vIkLIgckDU
nCo7iLytP7WL4oXfb3JAzxDp9EW8rT/vEqv6/79yQBOINvoVvK0/8GHKjg==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.2899796184398511}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYLbx8CXiOvRcJVHn
jxNAFXcVlnSN+j3FyyIHhWIkQKhGRaDTcOE+Hy7qmjJJLkDQNX7xdAI5Pxdi
2uMT/zNADXHFQ0RjYT+fNY2q3UI5QAEZMTTounc/r6vbi7UsPkCQvdJPKDmF
Px/Vu07uv0FATwEJPGuQkD9Tocq9E11EQKu/XVI7TZc/yz4nOkDNRkAikubo
yJWeP4Ogqk4UcklAGeG7oW7soz9/03tw7+lLQEZ2wMAL/ag/aNONeFxVTkCf
MIP/T7WuP8lLY4y4elBAy+90FjTpsj+AliZjRrRRQCYKXi22tLY/VkP9BSgI
U0DgvnS8P2q7P6NW9JvSVVRAIw9aj4pZwD+SUpK4AI1VQNNQDZcwHcM/obBD
oYLeVkCm/X86d2jGP1L3mxCIGVhAf4GRQ6WtyT8joAdM4W5ZQLHZf6ImRs0/
aq+TegO+WkC4tYeOElLQP1Onxi+p9ltAviIcP++10T9cAQ2xokldQMLOUBFf
6tI/B0T6uB+GXkD7SkXDzLLTPyntB7RlvF9AP+LtKPQj1D82fJS9f4ZgQKYq
t0YqTdQ/KHZ4ZI4jYUAiIiSb/znUPyohZvHGzWFA2JmBT1/+0z9n/+P343Ri
QM5SyN3GsdM/9VG1wcIQY0DEeLCJ4GfTP5NVkHHLuWNAcTXY6fQd0z+Czb7k
lVdkQBLmkgKq4tI/rHh90UTyZEA1FHkVgrLSP+bURaQdmmVA3rwiftWI0j9x
pWE6uDZmQCWpV56XatI/DCeHtnzgZkAR//6Sg1HSP/gcAPYCf2dAKLx2qN0/
0j8gRgmvbRpoQGe1ZqDIMtI/WCAcTgLDaECGbbuNKSjSP+FugrBYYGlAbAor
3tMg0j95bvL42ApqQGBZ6lv6GtI/TaHyuj2yakBC9i6GyBbSP3JIRkBkTmtA
AYS+iuYT0j+noKOrtPdrQGKctUqbEdI/LW1U2saVbEDwPCbrCxDSP+5slYK9
MG1AKYujBuYO0j+/HeAQ3thtQGJ5TsD7DdI/4UJ+YsB1bkDSFbTtWQ3SPxMZ
JprMH29A8t7cZ9kM0j+AIl5LvcZvQJWWv5uBDNI/H9D03zcxcEAymHBGRgzS
P4ZnPw2mhXBAfBmtGRcM0j8WuTMcddRwQLMiN6z1C9I/LuMsHtkpcUAy9JFb
2wvSP+Mm7lyvfXFAKHk0JccL0j/BJFl95stxQM/6BbS5C9I/J/vIkLIgckA6
0z0TrwvSP7WL4oXfb3JAfQRR96cL0j/vEqv6/79yQBL8ec2iC9I/f3XFyQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.3172097864705087}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYLbx8CXiOvRcJVHn
jxNAFXcVlnSN+j3FyyIHhWIkQKhGRaDTcOE+Hy7qmjJJLkDQNX7xdAI5Pxdi
2uMT/zNADXHFQ0RjYT+fNY2q3UI5QAEZMTTounc/r6vbi7UsPkCQvdJPKDmF
Px/Vu07uv0FATwEJPGuQkD9Tocq9E11EQKu/XVI7TZc/yz4nOkDNRkAikubo
yJWeP4Ogqk4UcklAGeG7oW7soz9/03tw7+lLQEZ2wMAL/ag/aNONeFxVTkCf
MIP/T7WuP8lLY4y4elBAy+90FjTpsj+AliZjRrRRQCYKXi22tLY/VkP9BSgI
U0DgvnS8P2q7P6NW9JvSVVRAIw9aj4pZwD+SUpK4AI1VQNNQDZcwHcM/obBD
oYLeVkCm/X86d2jGP1L3mxCIGVhAf4GRQ6WtyT8joAdM4W5ZQLHZf6ImRs0/
aq+TegO+WkC4tYeOElLQP1Onxi+p9ltAviIcP++10T9cAQ2xokldQMLOUBFf
6tI/B0T6uB+GXkD7SkXDzLLTPyntB7RlvF9AP+LtKPQj1D82fJS9f4ZgQKYq
t0YqTdQ/KHZ4ZI4jYUAiIiSb/znUPyohZvHGzWFA2JmBT1/+0z9n/+P343Ri
QM5SyN3GsdM/9VG1wcIQY0DEeLCJ4GfTP5NVkHHLuWNAcTXY6fQd0z+Czb7k
lVdkQBLmkgKq4tI/rHh90UTyZEA1FHkVgrLSP+bURaQdmmVA3rwiftWI0j9x
pWE6uDZmQCWpV56XatI/DCeHtnzgZkAR//6Sg1HSP/gcAPYCf2dAKLx2qN0/
0j8gRgmvbRpoQGe1ZqDIMtI/WCAcTgLDaECGbbuNKSjSP+FugrBYYGlAbAor
3tMg0j95bvL42ApqQGBZ6lv6GtI/TaHyuj2yakBC9i6GyBbSP3JIRkBkTmtA
AYS+iuYT0j+noKOrtPdrQGKctUqbEdI/LW1U2saVbEDwPCbrCxDSP+5slYK9
MG1AKYujBuYO0j+/HeAQ3thtQGJ5TsD7DdI/4UJ+YsB1bkDSFbTtWQ3SPxMZ
JprMH29A8t7cZ9kM0j+AIl5LvcZvQJWWv5uBDNI/H9D03zcxcEAymHBGRgzS
P4ZnPw2mhXBAfBmtGRcM0j8WuTMcddRwQLMiN6z1C9I/LuMsHtkpcUAy9JFb
2wvSP+Mm7lyvfXFAKHk0JccL0j/BJFl95stxQM/6BbS5C9I/J/vIkLIgckA6
0z0TrwvSP7WL4oXfb3JAfQRR96cL0j/vEqv6/79yQBL8ec2iC9I/f3XFyQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.3172097864705087}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYLbx8CXiOvRcJVHn
jxNANjd3/p5wlT3FyyIHhWIkQM06en4H/aM+Hy7qmjJJLkCoFfJ3HtwOPxdi
2uMT/zNAdx5d64giQD+fNY2q3UI5QC+q+BMJ0Fw/r6vbi7UsPkBNiBEw5lRu
Px/Vu07uv0FA7q6jmPW4ej9Tocq9E11EQL2PGmiNc4Q/yz4nOkDNRkB74mIP
CXuMP4Ogqk4UcklAgRUMCAqDkz9/03tw7+lLQHfw5FJObZk/aNONeFxVTkBD
mBEf2x6gP8lLY4y4elBAAEwQqlprpD+AliZjRrRRQASJccOwC6k/VkP9BSgI
U0AYyI8DFNSuP6NW9JvSVVRAD/vssDOzsj+SUpK4AI1VQHNX3KWZNrY/obBD
oYLeVkB0Het+8o66P1L3mxCIGVhANxnlHusgvz8joAdM4W5ZQMyfdrdeTMI/
aq+TegO+WkB7ZdO3xzDFP1Onxi+p9ltAUCCA0lEAyD9cAQ2xokldQM+RvBnO
D8s/B0T6uB+GXkDBN/v2PNHNPyntB7RlvF9AMbq3/acp0D82fJS9f4ZgQKoy
xr21X9E/KHZ4ZI4jYUChGxoXhFfSPyohZvHGzWFAts0F12w10z9n/+P343Ri
QN+cB9Tm4tM/9VG1wcIQY0BpHeS682HUP5NVkHHLuWNA2E4CqwzM1D+Czb7k
lVdkQDHYFaUQF9U/rHh90UTyZECZvvTHAU/VP+bURaQdmmVAO9CKXG981T9x
pWE6uDZmQF/7on3pm9U/DCeHtnzgZkB/tcJoI7XVP/gcAPYCf2dA909lhnLG
1T8gRgmvbRpoQOAnCrIT09U/WCAcTgLDaEAs3ziCKt3VP+FugrBYYGlA/aob
FhPk1T95bvL42ApqQKZnDT2L6dU/TaHyuj2yakByKdKAcu3VP3JIRkBkTmtA
QbcUfR7w1T+noKOrtPdrQB+mpCA98tU/LW1U2saVbEA6LTOKrPPVP+5slYK9
MG1A8Xm7xrz01T+/HeAQ3thtQLvJrMCT9dU/4UJ+YsB1bkDtOGaDKPbVPxMZ
JprMH29AHakTmZ721T+AIl5LvcZvQEGgQDnv9tU/H9D03zcxcED6rJmuJffV
P4ZnPw2mhXBA7Wny8FD31T8WuTMcddRwQBoV3Jdv99U/LuMsHtkpcUB8MO2/
h/fVP+Mm7lyvfXFAfeDVV5r31T/BJFl95stxQN83Pbmm99U/J/vIkLIgckBD
kMx8sPfVP7WL4oXfb3JAeV6V+rb31T/vEqv6/79yQMQCRKm799U/RHHTQQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.34324542550897896`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYLbx8CXiOvRcJVHn
jxNANjd3/p5wlT3FyyIHhWIkQM06en4H/aM+Hy7qmjJJLkCoFfJ3HtwOPxdi
2uMT/zNAdx5d64giQD+fNY2q3UI5QC+q+BMJ0Fw/r6vbi7UsPkBNiBEw5lRu
Px/Vu07uv0FA7q6jmPW4ej9Tocq9E11EQL2PGmiNc4Q/yz4nOkDNRkB74mIP
CXuMP4Ogqk4UcklAgRUMCAqDkz9/03tw7+lLQHfw5FJObZk/aNONeFxVTkBD
mBEf2x6gP8lLY4y4elBAAEwQqlprpD+AliZjRrRRQASJccOwC6k/VkP9BSgI
U0AYyI8DFNSuP6NW9JvSVVRAD/vssDOzsj+SUpK4AI1VQHNX3KWZNrY/obBD
oYLeVkB0Het+8o66P1L3mxCIGVhANxnlHusgvz8joAdM4W5ZQMyfdrdeTMI/
aq+TegO+WkB7ZdO3xzDFP1Onxi+p9ltAUCCA0lEAyD9cAQ2xokldQM+RvBnO
D8s/B0T6uB+GXkDBN/v2PNHNPyntB7RlvF9AMbq3/acp0D82fJS9f4ZgQKoy
xr21X9E/KHZ4ZI4jYUChGxoXhFfSPyohZvHGzWFAts0F12w10z9n/+P343Ri
QN+cB9Tm4tM/9VG1wcIQY0BpHeS682HUP5NVkHHLuWNA2E4CqwzM1D+Czb7k
lVdkQDHYFaUQF9U/rHh90UTyZECZvvTHAU/VP+bURaQdmmVAO9CKXG981T9x
pWE6uDZmQF/7on3pm9U/DCeHtnzgZkB/tcJoI7XVP/gcAPYCf2dA909lhnLG
1T8gRgmvbRpoQOAnCrIT09U/WCAcTgLDaEAs3ziCKt3VP+FugrBYYGlA/aob
FhPk1T95bvL42ApqQKZnDT2L6dU/TaHyuj2yakByKdKAcu3VP3JIRkBkTmtA
QbcUfR7w1T+noKOrtPdrQB+mpCA98tU/LW1U2saVbEA6LTOKrPPVP+5slYK9
MG1A8Xm7xrz01T+/HeAQ3thtQLvJrMCT9dU/4UJ+YsB1bkDtOGaDKPbVPxMZ
JprMH29AHakTmZ721T+AIl5LvcZvQEGgQDnv9tU/H9D03zcxcED6rJmuJffV
P4ZnPw2mhXBA7Wny8FD31T8WuTMcddRwQBoV3Jdv99U/LuMsHtkpcUB8MO2/
h/fVP+Mm7lyvfXFAfeDVV5r31T/BJFl95stxQN83Pbmm99U/J/vIkLIgckBD
kMx8sPfVP7WL4oXfb3JAeV6V+rb31T/vEqv6/79yQMQCRKm799U/RHHTQQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.34324542550897896`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYLbx8CXiOvRcJVHn
jxNAFDMyFNthLj3FyyIHhWIkQNBL4zmopGQ+Hy7qmjJJLkCzmioqy4zhPhdi
2uMT/zNAmgPrHwptHD+fNY2q3UI5QDRQTrrrGUE/r6vbi7UsPkD4R3eVIaJV
Px/Vu07uv0FAOEkWf5fXZT9Tocq9E11EQO9EuLY0XXI/yz4nOkDNRkCCo3oH
rEt7P4Ogqk4UcklASKI5BQvAgz9/03tw7+lLQBqu7/9OzYo/aNONeFxVTkAt
3AXU/ouRP8lLY4y4elBAIpErSGzYlj+AliZjRrRRQPL8rbrikpw/VkP9BSgI
U0Dp4B0CrdyhP6NW9JvSVVRAXi2skwLppT+SUpK4AI1VQIb3CbxbOqo/obBD
oYLeVkDscM3nfZOvP1L3mxCIGVhAZt7pUDSfsj8joAdM4W5ZQBv3BSUXD7Y/
aq+TegO+WkAqD4DU8MS5P1Onxi+p9ltA86aKZ0V5vT9cAQ2xokldQOdmQp5B
08A/B0T6uB+GXkDM6iZZgcjCPyntB7RlvF9AzVb/L5WkxD82fJS9f4ZgQLp4
30DOhsY/KHZ4ZI4jYUBdXm/7PhzIPyohZvHGzWFAsaINHiOayT9n/+P343Ri
QB8BJSSI08o/9VG1wcIQY0C9sqnlmsLLP5NVkHHLuWNAlttZVk6RzD+Czb7k
lVdkQDIevX+9J80/rHh90UTyZEASOANlV5rNP+bURaQdmmVA6lRoPBL5zT9x
pWE6uDZmQIWMawqYO84/DCeHtnzgZkCDSA6EhXHOP/gcAPYCf2dA9Vk4os2W
zj8gRgmvbRpoQDtkyEEfss4/WCAcTgLDaECd1SU1HsjOP+FugrBYYGlAq/Ak
4TPXzj95bvL42ApqQN8sYksv484/TaHyuj2yakCKhIUjvOvOP3JIRkBkTmtA
fhUyoZnxzj+noKOrtPdrQIHOMPxC9s4/LW1U2saVbEBR2ZWUc/nOP+5slYK9
MG1AAbrvar77zj+/HeAQ3thtQC3Bmeia/c4/4UJ+YsB1bkC8YRd14v7OPxMZ
JprMH29Aw5KXf+b/zj+AIl5LvcZvQIyI2wGYAM8/H9D03zcxcEANdND7DwHP
P4ZnPw2mhXBAc78diW8Bzz8WuTMcddRwQCwW4VOzAc8/LuMsHtkpcUBaiP+R
6AHPP+Mm7lyvfXFA/miZTxECzz/BJFl95stxQCm2Pj0sAs8/J/vIkLIgckA6
ZLuUQQLPP7WL4oXfb3JA3jvR9k8Czz/vEqv6/79yQO0XwpRaAs8/SAjHIA==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.24225933326323404`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYLbx8CXiOvRcJVHn
jxNAFDMyFNthLj3FyyIHhWIkQNBL4zmopGQ+Hy7qmjJJLkCzmioqy4zhPhdi
2uMT/zNAmgPrHwptHD+fNY2q3UI5QDRQTrrrGUE/r6vbi7UsPkD4R3eVIaJV
Px/Vu07uv0FAOEkWf5fXZT9Tocq9E11EQO9EuLY0XXI/yz4nOkDNRkCCo3oH
rEt7P4Ogqk4UcklASKI5BQvAgz9/03tw7+lLQBqu7/9OzYo/aNONeFxVTkAt
3AXU/ouRP8lLY4y4elBAIpErSGzYlj+AliZjRrRRQPL8rbrikpw/VkP9BSgI
U0Dp4B0CrdyhP6NW9JvSVVRAXi2skwLppT+SUpK4AI1VQIb3CbxbOqo/obBD
oYLeVkDscM3nfZOvP1L3mxCIGVhAZt7pUDSfsj8joAdM4W5ZQBv3BSUXD7Y/
aq+TegO+WkAqD4DU8MS5P1Onxi+p9ltA86aKZ0V5vT9cAQ2xokldQOdmQp5B
08A/B0T6uB+GXkDM6iZZgcjCPyntB7RlvF9AzVb/L5WkxD82fJS9f4ZgQLp4
30DOhsY/KHZ4ZI4jYUBdXm/7PhzIPyohZvHGzWFAsaINHiOayT9n/+P343Ri
QB8BJSSI08o/9VG1wcIQY0C9sqnlmsLLP5NVkHHLuWNAlttZVk6RzD+Czb7k
lVdkQDIevX+9J80/rHh90UTyZEASOANlV5rNP+bURaQdmmVA6lRoPBL5zT9x
pWE6uDZmQIWMawqYO84/DCeHtnzgZkCDSA6EhXHOP/gcAPYCf2dA9Vk4os2W
zj8gRgmvbRpoQDtkyEEfss4/WCAcTgLDaECd1SU1HsjOP+FugrBYYGlAq/Ak
4TPXzj95bvL42ApqQN8sYksv484/TaHyuj2yakCKhIUjvOvOP3JIRkBkTmtA
fhUyoZnxzj+noKOrtPdrQIHOMPxC9s4/LW1U2saVbEBR2ZWUc/nOP+5slYK9
MG1AAbrvar77zj+/HeAQ3thtQC3Bmeia/c4/4UJ+YsB1bkC8YRd14v7OPxMZ
JprMH29Aw5KXf+b/zj+AIl5LvcZvQIyI2wGYAM8/H9D03zcxcEANdND7DwHP
P4ZnPw2mhXBAc78diW8Bzz8WuTMcddRwQCwW4VOzAc8/LuMsHtkpcUBaiP+R
6AHPP+Mm7lyvfXFA/miZTxECzz/BJFl95stxQCm2Pj0sAs8/J/vIkLIgckA6
ZLuUQQLPP7WL4oXfb3JA3jvR9k8Czz/vEqv6/79yQO0XwpRaAs8/SAjHIA==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.24225933326323404`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYLbx8CXiOvRcJVHn
jxNAmwciEEFmwTzFyyIHhWIkQFZaCCV+TiE+Hy7qmjJJLkCjCDMUJI+uPhdi
2uMT/zNARZ0cUPzh8T6fNY2q3UI5QDwDjNFqCRs/r6vbi7UsPkAX1wKJf4Az
Px/Vu07uv0FAgh+3iOuoRT9Tocq9E11EQAXi1JQ1elM/yz4nOkDNRkB8DszG
RWVeP4Ogqk4UcklA5ZVyQUPxZj9/03tw7+lLQFWffgJED3A/aNONeFxVTkBm
SgB8l4Z1P8lLY4y4elBAODxFrQiLfD+AliZjRrRRQPnkpr11D4I/VkP9BSgI
U0AHFAzrLsSGP6NW9JvSVVRA+rmIm70MjD+SUpK4AI1VQAdDlTfX0JA/obBD
oYLeVkDps+ePTz6UP1L3mxCIGVhAqHsrsoPYlz8joAdM4W5ZQG/7DHIjLJw/
aq+TegO+WkDb8bHm7WWgP1Onxi+p9ltA/Pakm9avoj9cAQ2xokldQKdJSrRU
PqU/B0T6uB+GXkBKgVxA3ZynPyntB7RlvF9AS2+bIQjWqT82fJS9f4ZgQGpn
RPs+EKw/KHZ4ZI4jYUDcKmJwf+utPyohZvHGzWFAckUZt/unrz9n/+P343Ri
QF7t2AooibA/9VG1wcIQY0Ctg88+dxKxP5NVkHHLuWNAUXNOAImIsT+Czb7k
lVdkQJoHrvsQ3rE/rHh90UTyZEDLzbh04x6yP+bURaQdmmVAT2slLUpUsj9x
pWE6uDZmQP2jhF68ebI/DCeHtnzgZkAlpFOm8JeyP/gcAPYCf2dAAu0n/9Cs
sj8gRgmvbRpoQJNfUq4qvLI/WCAcTgLDaECZRxbNYsiyP+FugrBYYGlA2S89
wc7Qsj95bvL42ApqQOBwBst917I/TaHyuj2yakB9D66xQ9yyP3JIRkBkTmtA
IZD2RInfsj+noKOrtPdrQAzRjUUi4rI/LW1U2saVbEC5FBdj4+OyP+5slYK9
MG1AobtUzzTlsj+/HeAQ3thtQDDm+Ho65rI/4UJ+YsB1bkCyN0cQ8eayPxMZ
JprMH29AwT2pD4Lnsj+AIl5LvcZvQBE3ojDl57I/H9D03zcxcEB8JswWKOiy
P4ZnPw2mhXBAWFrS9Vzosj8WuTMcddRwQNybjU6C6LI/LuMsHtkpcUC+BT3s
n+iyP+Mm7lyvfXFA01S99Lbosj/BJFl95stxQFMtPYTG6LI/J/vIkLIgckBt
CJqz0uiyP7WL4oXfb3JAtPx9odrosj/vEqv6/79yQCipqxzg6LI/t0rHSQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.07386589717831227}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYLbx8CXiOvRcJVHn
jxNAmwciEEFmwTzFyyIHhWIkQFZaCCV+TiE+Hy7qmjJJLkCjCDMUJI+uPhdi
2uMT/zNARZ0cUPzh8T6fNY2q3UI5QDwDjNFqCRs/r6vbi7UsPkAX1wKJf4Az
Px/Vu07uv0FAgh+3iOuoRT9Tocq9E11EQAXi1JQ1elM/yz4nOkDNRkB8DszG
RWVeP4Ogqk4UcklA5ZVyQUPxZj9/03tw7+lLQFWffgJED3A/aNONeFxVTkBm
SgB8l4Z1P8lLY4y4elBAODxFrQiLfD+AliZjRrRRQPnkpr11D4I/VkP9BSgI
U0AHFAzrLsSGP6NW9JvSVVRA+rmIm70MjD+SUpK4AI1VQAdDlTfX0JA/obBD
oYLeVkDps+ePTz6UP1L3mxCIGVhAqHsrsoPYlz8joAdM4W5ZQG/7DHIjLJw/
aq+TegO+WkDb8bHm7WWgP1Onxi+p9ltA/Pakm9avoj9cAQ2xokldQKdJSrRU
PqU/B0T6uB+GXkBKgVxA3ZynPyntB7RlvF9AS2+bIQjWqT82fJS9f4ZgQGpn
RPs+EKw/KHZ4ZI4jYUDcKmJwf+utPyohZvHGzWFAckUZt/unrz9n/+P343Ri
QF7t2AooibA/9VG1wcIQY0Ctg88+dxKxP5NVkHHLuWNAUXNOAImIsT+Czb7k
lVdkQJoHrvsQ3rE/rHh90UTyZEDLzbh04x6yP+bURaQdmmVAT2slLUpUsj9x
pWE6uDZmQP2jhF68ebI/DCeHtnzgZkAlpFOm8JeyP/gcAPYCf2dAAu0n/9Cs
sj8gRgmvbRpoQJNfUq4qvLI/WCAcTgLDaECZRxbNYsiyP+FugrBYYGlA2S89
wc7Qsj95bvL42ApqQOBwBst917I/TaHyuj2yakB9D66xQ9yyP3JIRkBkTmtA
IZD2RInfsj+noKOrtPdrQAzRjUUi4rI/LW1U2saVbEC5FBdj4+OyP+5slYK9
MG1AobtUzzTlsj+/HeAQ3thtQDDm+Ho65rI/4UJ+YsB1bkCyN0cQ8eayPxMZ
JprMH29AwT2pD4Lnsj+AIl5LvcZvQBE3ojDl57I/H9D03zcxcEB8JswWKOiy
P4ZnPw2mhXBAWFrS9Vzosj8WuTMcddRwQNybjU6C6LI/LuMsHtkpcUC+BT3s
n+iyP+Mm7lyvfXFA01S99Lbosj/BJFl95stxQFMtPYTG6LI/J/vIkLIgckBt
CJqz0uiyP7WL4oXfb3JAtPx9odrosj/vEqv6/79yQCipqxzg6LI/t0rHSQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.07386589717831227}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAASM6+/brURUDwTHwdOCasP8s+JzpA
zUZAVeeCDMiwpj+DoKpOFHJJQAFh6udwl5g/f9N7cO/pS0A37eYEQoiIP2jT
jXhcVU5A3N8ruTpVdT/JS2OMuHpQQNRK5y9/xVs/gJYmY0a0UUC3nMCqlu89
P1ZD/QUoCFNAaOHKkDFVFD+jVvSb0lVUQKBcMmbuUeI+klKSuACNVUBe20DM
XM6oPqGwQ6GC3lZAvjPMFKw7XT5S95sQiBlYQBdPr5tVtRQ+I6AHTOFuWUBq
XpmlfB2zvWqvk3oDvlpA6KGB9Hphkr1Tp8YvqfZbQBAEZzCbXWM9XAENsaJJ
XUAGuH8nPN1ivQdE+rgfhl5AoMRiLas7KT0p7Qe0ZbxfQNQqrWiLoC89NnyU
vX+GYEDBZyEtUPghvSh2eGSOI2FAbVhBCn/JDD0qIWbxxs1hQMwR8gnIrw49
Z//j9+N0YkCM7e6EtXjyvPVRtcHCEGNAcCnP7uyMFj2TVZBxy7ljQL4q24Dx
gRO9gs2+5JVXZECAiVMixh3gPKx4fdFE8mRAA5mdVPk49zzm1EWkHZplQHKY
OjuoHSI9caVhOrg2ZkD6ex1R6INuPQwnh7Z84GZA4E6WFbXyDz34HAD2An9n
QMNDZ7ouEky9IEYJr20aaEBAsLDIcaqHvVggHE4Cw2hAmj21GaXVJ73hboKw
WGBpQMAVf6iijeu8eW7y+NgKakCMzPinhudMPU2h8ro9smpAsm3vn4aIEj1y
SEZAZE5rQGmkNzXoSPu8p6Cjq7T3a0A1iBxUls4hvS1tVNrGlWxAne6JI3f9
Nb3ubJWCvTBtQJgue1pmgyA9vx3gEN7YbUDqsCzGTXjNvOFCfmLAdW5Aa4jC
czQlwbwTGSaazB9vQMy0IR8HU5K8gCJeS73Gb0CrhC9dSNLVPB/Q9N83MXBA
rHWoq88E2TyGZz8NpoVwQNzB9ZlwQ9e8FrkzHHXUcEDj9UfxclvzvC7jLB7Z
KXFAiF882Pi19LzjJu5cr31xQFTkQWhYkuO8wSRZfebLcUAT0Z+vWhPgPCf7
yJCyIHJAwSzBU4kR8Ty1i+KF329yQKk2ccfAUes87xKr+v+/ckCfG/gvzcyr
vB6BkrE=
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.738515785320405*^-11, 
                    0.054979089354810884`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAASM6+/brURUDwTHwdOCasP8s+JzpA
zUZAVeeCDMiwpj+DoKpOFHJJQAFh6udwl5g/f9N7cO/pS0A37eYEQoiIP2jT
jXhcVU5A3N8ruTpVdT/JS2OMuHpQQNRK5y9/xVs/gJYmY0a0UUC3nMCqlu89
P1ZD/QUoCFNAaOHKkDFVFD+jVvSb0lVUQKBcMmbuUeI+klKSuACNVUBe20DM
XM6oPqGwQ6GC3lZAvjPMFKw7XT5S95sQiBlYQBdPr5tVtRQ+I6AHTOFuWUBq
XpmlfB2zvWqvk3oDvlpA6KGB9Hphkr1Tp8YvqfZbQBAEZzCbXWM9XAENsaJJ
XUAGuH8nPN1ivQdE+rgfhl5AoMRiLas7KT0p7Qe0ZbxfQNQqrWiLoC89NnyU
vX+GYEDBZyEtUPghvSh2eGSOI2FAbVhBCn/JDD0qIWbxxs1hQMwR8gnIrw49
Z//j9+N0YkCM7e6EtXjyvPVRtcHCEGNAcCnP7uyMFj2TVZBxy7ljQL4q24Dx
gRO9gs2+5JVXZECAiVMixh3gPKx4fdFE8mRAA5mdVPk49zzm1EWkHZplQHKY
OjuoHSI9caVhOrg2ZkD6ex1R6INuPQwnh7Z84GZA4E6WFbXyDz34HAD2An9n
QMNDZ7ouEky9IEYJr20aaEBAsLDIcaqHvVggHE4Cw2hAmj21GaXVJ73hboKw
WGBpQMAVf6iijeu8eW7y+NgKakCMzPinhudMPU2h8ro9smpAsm3vn4aIEj1y
SEZAZE5rQGmkNzXoSPu8p6Cjq7T3a0A1iBxUls4hvS1tVNrGlWxAne6JI3f9
Nb3ubJWCvTBtQJgue1pmgyA9vx3gEN7YbUDqsCzGTXjNvOFCfmLAdW5Aa4jC
czQlwbwTGSaazB9vQMy0IR8HU5K8gCJeS73Gb0CrhC9dSNLVPB/Q9N83MXBA
rHWoq88E2TyGZz8NpoVwQNzB9ZlwQ9e8FrkzHHXUcEDj9UfxclvzvC7jLB7Z
KXFAiF882Pi19LzjJu5cr31xQFTkQWhYkuO8wSRZfebLcUAT0Z+vWhPgPCf7
yJCyIHJAwSzBU4kR8Ty1i+KF329yQKk2ccfAUes87xKr+v+/ckCfG/gvzcyr
vB6BkrE=
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.738515785320405*^-11, 
                    0.054979089354810884`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{5.084745762711864*^-6, 0.010000024411989052`}, {
                    4.890530841737235, 0.09286649464487125}, {
                    8.901196391090533, 0.27531014452259184`}}], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAHHK1d3ghSED40b5wrp7RP4Ogqk4U
cklA4+rRIoDIzz9/03tw7+lLQA4C5zN81sg/aNONeFxVTkCvwg6CGBnCP8lL
Y4y4elBAlqqcu4ERtz+AliZjRrRRQIjcjs8yuKo/VkP9BSgIU0C+zjjkNvWY
P6NW9JvSVVRAfARN+8I9gz+SUpK4AI1VQJRx1Iu4hWk/obBDoYLeVkCVjUrS
D65HP1L3mxCIGVhA2dR8R/iRIj8joAdM4W5ZQAF5Sx8IEPM+aq+TegO+WkCK
qHjzwGe/PlOnxi+p9ltAjgb3JNJniT5cAQ2xokldQFY/TfJeck4+B0T6uB+G
XkDGjxfd/rcUPintB7RlvF9AuVWtKHUq3T02fJS9f4ZgQNrcrclFx6A9KHZ4
ZI4jYUDyHLHwHoxlPSohZvHGzWFAVJsXtVLOET1n/+P343RiQL4smE5lNAk9
9VG1wcIQY0AWFWBA9msmvZNVkHHLuWNAVIg+FTGJIz2Czb7klVdkQMykCJN3
UvC8rHh90UTyZEB3ikFBTzIHvebURaQdmmVAeO/uPq0bMr1xpWE6uDZmQGTw
vzS4g369DCeHtnzgZkAzgKS0evUfvfgcAPYCf2dAI/xHk0wQXD0gRgmvbRpo
QAp/VuLBqZc9WCAcTgLDaECum23cFtI3PeFugrBYYGlAwKApcq+F+zx5bvL4
2ApqQIeJa0Q78ly9TaHyuj2yakDNa7OTRYsivXJIRkBkTmtAqNzA2PRdCz2n
oKOrtPdrQM4u5BSA1zE9LW1U2saVbEBbuQM9Ih1GPe5slYK9MG1Av9zGx6p6
ML2/HeAQ3thtQFwx+o+8oN084UJ+YsB1bkBDPlACTSnRPBMZJprMH29AaFJB
aPoupDyAIl5LvcZvQIRmjbJ9beW8H9D03zcxcEDscCvzsTXovIZnPw2mhXBA
YgN0+WxS5zwWuTMcddRwQGYh1jLrFgM9LuMsHtkpcUDUfJVwjlwEPeMm7lyv
fXFA8dc7shog8zzBJFl95stxQBqPwvEC3e+8J/vIkLIgckDYjPP9YdcAvbWL
4oXfb3JA8p8xvYfp+rzvEqv6/79yQDYZDs2bH708taaFUQ==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.7345501823523543`*^-12, 
                    0.27531014452259184`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{5.084745762711864*^-6, 0.010000024411989052`}, {
                    4.890530841737235, 0.09286649464487125}, {
                    8.901196391090533, 0.27531014452259184`}}], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAHHK1d3ghSED40b5wrp7RP4Ogqk4U
cklA4+rRIoDIzz9/03tw7+lLQA4C5zN81sg/aNONeFxVTkCvwg6CGBnCP8lL
Y4y4elBAlqqcu4ERtz+AliZjRrRRQIjcjs8yuKo/VkP9BSgIU0C+zjjkNvWY
P6NW9JvSVVRAfARN+8I9gz+SUpK4AI1VQJRx1Iu4hWk/obBDoYLeVkCVjUrS
D65HP1L3mxCIGVhA2dR8R/iRIj8joAdM4W5ZQAF5Sx8IEPM+aq+TegO+WkCK
qHjzwGe/PlOnxi+p9ltAjgb3JNJniT5cAQ2xokldQFY/TfJeck4+B0T6uB+G
XkDGjxfd/rcUPintB7RlvF9AuVWtKHUq3T02fJS9f4ZgQNrcrclFx6A9KHZ4
ZI4jYUDyHLHwHoxlPSohZvHGzWFAVJsXtVLOET1n/+P343RiQL4smE5lNAk9
9VG1wcIQY0AWFWBA9msmvZNVkHHLuWNAVIg+FTGJIz2Czb7klVdkQMykCJN3
UvC8rHh90UTyZEB3ikFBTzIHvebURaQdmmVAeO/uPq0bMr1xpWE6uDZmQGTw
vzS4g369DCeHtnzgZkAzgKS0evUfvfgcAPYCf2dAI/xHk0wQXD0gRgmvbRpo
QAp/VuLBqZc9WCAcTgLDaECum23cFtI3PeFugrBYYGlAwKApcq+F+zx5bvL4
2ApqQIeJa0Q78ly9TaHyuj2yakDNa7OTRYsivXJIRkBkTmtAqNzA2PRdCz2n
oKOrtPdrQM4u5BSA1zE9LW1U2saVbEBbuQM9Ih1GPe5slYK9MG1Av9zGx6p6
ML2/HeAQ3thtQFwx+o+8oN084UJ+YsB1bkBDPlACTSnRPBMZJprMH29AaFJB
aPoupDyAIl5LvcZvQIRmjbJ9beW8H9D03zcxcEDscCvzsTXovIZnPw2mhXBA
YgN0+WxS5zwWuTMcddRwQGYh1jLrFgM9LuMsHtkpcUDUfJVwjlwEPeMm7lyv
fXFA8dc7shog8zzBJFl95stxQBqPwvEC3e+8J/vIkLIgckDYjPP9YdcAvbWL
4oXfb3JA8p8xvYfp+rzvEqv6/79yQDYZDs2bH708taaFUQ==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.7345501823523543`*^-12, 
                    0.27531014452259184`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AUMm24kvxPfRcJVHn
jxNA7LPbE+r5aT/FyyIHhWIkQBqo/WG3ubA/Hy7qmjJJLkCQyNGBTXbBPxdi
2uMT/zNApZVGL366xj+fNY2q3UI5QDE1f/XxO8s/r6vbi7UsPkBh2gYN/bvO
Px/Vu07uv0FApvMnZpzr0D9Tocq9E11EQEl3hEODG9I/yz4nOkDNRkD6Vo33
+uPSP4Ogqk4UcklAyDNKhmhO0z9/03tw7+lLQBwzHNW5J9M/aNONeFxVTkBg
YSLHU1jSP8lLY4y4elBAce3oVCSW0D+AliZjRrRRQKz/v2bKP8w/VkP9BSgI
U0BtAFoU8Z/FP6NW9JvSVVRAq5S9KYShvT+SUpK4AI1VQGTSYC8db7I/obBD
oYLeVkAFOmz68/KiP1L3mxCIGVhAQ89ipyNskT8joAdM4W5ZQGPAwTxK+Xg/
aq+TegO+WkBRbJBqfO9dP1Onxi+p9ltAhDDtLHU7QD9cAQ2xokldQOHLAiir
ARo/B0T6uB+GXkBIkPVmG5vzPintB7RlvF9AndNDfbmvyj42fJS9f4ZgQGiw
5V8wv5s+KHZ4ZI4jYUALgfNyGZpuPiohZvHGzWFAKLcoWMluOz5n/+P343Ri
QJDdLSY0xQk+9VG1wcIQY0CNaA4bvy3gPZNVkHHLuWNA1TR9q5MntD2Czb7k
lVdkQIjeoSht9449rHh90UTyZEBpNvE0XSxzPebURaQdmmVAt3FfhGMwYD1x
pWE6uDZmQFkDRG84goA9DCeHtnzgZkCNs/a+alRCPfgcAPYCf2dAAPRQVvMf
V70gRgmvbRpoQBxvyxtfape9WCAcTgLDaEAW0xDS3pUoveFugrBYYGlAkBQw
6fMAID15bvL42ApqQL7ry+3TIF89TaHyuj2yakC/UHXoFAYxPXJIRkBkTmtA
3OMquJu6Dj2noKOrtPdrQMqHQyiX4iW9LW1U2saVbEDbcVdAH8dCve5slYK9
MG1A8ppxXt/8Nj2/HeAQ3thtQAooxVMfkhc94UJ+YsB1bkA6fkVpCPoXPRMZ
JprMH29A9AJ1DhGiGD2AIl5LvcZvQKg4abQ0VRs9H9D03zcxcECZzimKx6Eb
PYZnPw2mhXBASmZZZBiFFT0WuTMcddRwQJLital7Xg09LuMsHtkpcUCLqSpn
jNYLPeMm7lyvfXFAlkVgV91FEz3BJFl95stxQBd/9L4lFxw9J/vIkLIgckDp
NOU0TEggPbWL4oXfb3JArOcwP6XjHj3vEqv6/79yQCs8lyJztRc944q6hg==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-5.324071421830927*^-12, 
                    0.30166066278689785`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AUMm24kvxPfRcJVHn
jxNA7LPbE+r5aT/FyyIHhWIkQBqo/WG3ubA/Hy7qmjJJLkCQyNGBTXbBPxdi
2uMT/zNApZVGL366xj+fNY2q3UI5QDE1f/XxO8s/r6vbi7UsPkBh2gYN/bvO
Px/Vu07uv0FApvMnZpzr0D9Tocq9E11EQEl3hEODG9I/yz4nOkDNRkD6Vo33
+uPSP4Ogqk4UcklAyDNKhmhO0z9/03tw7+lLQBwzHNW5J9M/aNONeFxVTkBg
YSLHU1jSP8lLY4y4elBAce3oVCSW0D+AliZjRrRRQKz/v2bKP8w/VkP9BSgI
U0BtAFoU8Z/FP6NW9JvSVVRAq5S9KYShvT+SUpK4AI1VQGTSYC8db7I/obBD
oYLeVkAFOmz68/KiP1L3mxCIGVhAQ89ipyNskT8joAdM4W5ZQGPAwTxK+Xg/
aq+TegO+WkBRbJBqfO9dP1Onxi+p9ltAhDDtLHU7QD9cAQ2xokldQOHLAiir
ARo/B0T6uB+GXkBIkPVmG5vzPintB7RlvF9AndNDfbmvyj42fJS9f4ZgQGiw
5V8wv5s+KHZ4ZI4jYUALgfNyGZpuPiohZvHGzWFAKLcoWMluOz5n/+P343Ri
QJDdLSY0xQk+9VG1wcIQY0CNaA4bvy3gPZNVkHHLuWNA1TR9q5MntD2Czb7k
lVdkQIjeoSht9449rHh90UTyZEBpNvE0XSxzPebURaQdmmVAt3FfhGMwYD1x
pWE6uDZmQFkDRG84goA9DCeHtnzgZkCNs/a+alRCPfgcAPYCf2dAAPRQVvMf
V70gRgmvbRpoQBxvyxtfape9WCAcTgLDaEAW0xDS3pUoveFugrBYYGlAkBQw
6fMAID15bvL42ApqQL7ry+3TIF89TaHyuj2yakC/UHXoFAYxPXJIRkBkTmtA
3OMquJu6Dj2noKOrtPdrQMqHQyiX4iW9LW1U2saVbEDbcVdAH8dCve5slYK9
MG1A8ppxXt/8Nj2/HeAQ3thtQAooxVMfkhc94UJ+YsB1bkA6fkVpCPoXPRMZ
JprMH29A9AJ1DhGiGD2AIl5LvcZvQKg4abQ0VRs9H9D03zcxcECZzimKx6Eb
PYZnPw2mhXBASmZZZBiFFT0WuTMcddRwQJLital7Xg09LuMsHtkpcUCLqSpn
jNYLPeMm7lyvfXFAlkVgV91FEz3BJFl95stxQBd/9L4lFxw9J/vIkLIgckDp
NOU0TEggPbWL4oXfb3JArOcwP6XjHj3vEqv6/79yQCs8lyJztRc944q6hg==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-5.324071421830927*^-12, 
                    0.30166066278689785`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AAACQraNtPPRcJVHn
jxNAYHQ6PzFKFT/FyyIHhWIkQOwjeOh+HIQ/Hy7qmjJJLkCxlYsdjNGjPxdi
2uMT/zNAaLsNllthsD+fNY2q3UI5QJibx7J8srY/r6vbi7UsPkDbmiUsrGm8
Px/Vu07uv0FAfkWeA7xEwT9Tocq9E11EQDCWru9YQsQ/yz4nOkDNRkC0vmvI
lA7HP4Ogqk4UcklARreazRgfyj9/03tw7+lLQHEmksiJ/cw/aNONeFxVTkBG
/OyzhLLPP8lLY4y4elBA648m1zwd0T+AliZjRrRRQOYuz9W35NE/VkP9BSgI
U0AhANYHpALSP6NW9JvSVVRAA/m3hdgg0T+SUpK4AI1VQPFTgYpCqs4/obBD
oYLeVkCP/YLgsQbJP1L3mxCIGVhAZnKI1cD1wj8joAdM4W5ZQCVEFp9iULk/
aq+TegO+WkB2XAnHcpeuP1Onxi+p9ltARfPqDwZuoT9cAQ2xokldQPbJ4+XI
R5E/B0T6uB+GXkBVJGPxQ7GAPyntB7RlvF9Ajf9LCrgdbz82fJS9f4ZgQJRn
PJH1X1o/KHZ4ZI4jYUD9zxWqR61HPyohZvHGzWFAaVCwFJ6NND9n/+P343Ri
QKGb+obXUiM/9VG1wcIQY0DNV7On4LMUP5NVkHHLuWNAVWxr6Kc3Bz+Czb7k
lVdkQDBfGO0rt/0+rHh90UTyZECVqNHfidv0PubURaQdmmVA7aja9ybY7j5x
pWE6uDZmQNAyl6G4vug+DCeHtnzgZkBzEqICe7XkPvgcAPYCf2dAF5hq8DlD
4j4gRgmvbRpoQDRkQTewn+A+WCAcTgLDaEB69NW0otfePuFugrBYYGlAz2Rk
c75G3T55bvL42ApqQFHpoUKdFdw+TaHyuj2yakClwiRRg0LbPnJIRkBkTmtA
v3LvVhS12j6noKOrtPdrQKKQF6OjRto+LW1U2saVbEAQjdFORfzZPu5slYK9
MG1AHyxC94DG2T6/HeAQ3thtQOkRcubQm9k+4UJ+YsB1bkD92aDwdn7ZPhMZ
JprMH29AAw+ptT9n2T6AIl5LvcZvQHcKudF3V9k+H9D03zcxcEDXPGe70kzZ
PoZnPw2mhXBAsdKHk1hE2T4WuTMcddRwQKNbcORPPtk+LuMsHtkpcUD2mZv9
kjnZPuMm7lyvfXFA1PfLJ/I12T7BJFl95stxQBkdtW+SM9k+J/vIkLIgckD3
jB7ttDHZPrWL4oXfb3JAjNUHqXcw2T7vEqv6/79yQJLfUZWLL9k+pT7Rlw==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.28141117825726}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AAACQraNtPPRcJVHn
jxNAYHQ6PzFKFT/FyyIHhWIkQOwjeOh+HIQ/Hy7qmjJJLkCxlYsdjNGjPxdi
2uMT/zNAaLsNllthsD+fNY2q3UI5QJibx7J8srY/r6vbi7UsPkDbmiUsrGm8
Px/Vu07uv0FAfkWeA7xEwT9Tocq9E11EQDCWru9YQsQ/yz4nOkDNRkC0vmvI
lA7HP4Ogqk4UcklARreazRgfyj9/03tw7+lLQHEmksiJ/cw/aNONeFxVTkBG
/OyzhLLPP8lLY4y4elBA648m1zwd0T+AliZjRrRRQOYuz9W35NE/VkP9BSgI
U0AhANYHpALSP6NW9JvSVVRAA/m3hdgg0T+SUpK4AI1VQPFTgYpCqs4/obBD
oYLeVkCP/YLgsQbJP1L3mxCIGVhAZnKI1cD1wj8joAdM4W5ZQCVEFp9iULk/
aq+TegO+WkB2XAnHcpeuP1Onxi+p9ltARfPqDwZuoT9cAQ2xokldQPbJ4+XI
R5E/B0T6uB+GXkBVJGPxQ7GAPyntB7RlvF9Ajf9LCrgdbz82fJS9f4ZgQJRn
PJH1X1o/KHZ4ZI4jYUD9zxWqR61HPyohZvHGzWFAaVCwFJ6NND9n/+P343Ri
QKGb+obXUiM/9VG1wcIQY0DNV7On4LMUP5NVkHHLuWNAVWxr6Kc3Bz+Czb7k
lVdkQDBfGO0rt/0+rHh90UTyZECVqNHfidv0PubURaQdmmVA7aja9ybY7j5x
pWE6uDZmQNAyl6G4vug+DCeHtnzgZkBzEqICe7XkPvgcAPYCf2dAF5hq8DlD
4j4gRgmvbRpoQDRkQTewn+A+WCAcTgLDaEB69NW0otfePuFugrBYYGlAz2Rk
c75G3T55bvL42ApqQFHpoUKdFdw+TaHyuj2yakClwiRRg0LbPnJIRkBkTmtA
v3LvVhS12j6noKOrtPdrQKKQF6OjRto+LW1U2saVbEAQjdFORfzZPu5slYK9
MG1AHyxC94DG2T6/HeAQ3thtQOkRcubQm9k+4UJ+YsB1bkD92aDwdn7ZPhMZ
JprMH29AAw+ptT9n2T6AIl5LvcZvQHcKudF3V9k+H9D03zcxcEDXPGe70kzZ
PoZnPw2mhXBAsdKHk1hE2T4WuTMcddRwQKNbcORPPtk+LuMsHtkpcUD2mZv9
kjnZPuMm7lyvfXFA1PfLJ/I12T7BJFl95stxQBkdtW+SM9k+J/vIkLIgckD3
jB7ttDHZPrWL4oXfb3JAjNUHqXcw2T7vEqv6/79yQJLfUZWLL9k+pT7Rlw==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.28141117825726}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AAABlqsyiO/RcJVHn
jxNAHvTiMa0PvD7FyyIHhWIkQBp9n1CRlVM/Hy7qmjJJLkDVWpFJpDaDPxdi
2uMT/zNAkvifN9IqlT+fNY2q3UI5QK8rNzRCSqE/r6vbi7UsPkD/QL8Ft/qn
Px/Vu07uv0FAKf0k7K/Drz9Tocq9E11EQMNAHUDo+bM/yz4nOkDNRkAPp79g
Sg24P4Ogqk4UcklA0GoryTfQvD9/03tw7+lLQLEakDI318A/aNONeFxVTkD5
QWZej3nDP8lLY4y4elBAzPq5jt6gxj+AliZjRrRRQBGGQ9dCy8k/VkP9BSgI
U0Ao1TdCREzNP6NW9JvSVVRAXGJqhTJA0D+SUpK4AI1VQGSCMweZb9E/obBD
oYLeVkCY/YmDzh/SP1L3mxCIGVhA50qb+Tn/0T8joAdM4W5ZQN0vhlDT6dA/
aq+TegO+WkAHDuwpVP3NP1Onxi+p9ltAqRat9tFryT9cAQ2xokldQFG1kf0W
KcQ/B0T6uB+GXkBaNrXqni+/PyntB7RlvF9AhN2CgCyftz82fJS9f4ZgQKIi
CTgXP7E/KHZ4ZI4jYUAySD9KK8qpPyohZvHGzWFA9vxcF1Ipoz9n/+P343Ri
QJoPzh7bfJ0/9VG1wcIQY0AnQXd6ctqXP5NVkHHLuWNADU6py7yskz+Czb7k
lVdkQHmTJTyRAJE/rHh90UTyZEBf2Ekg81GOP+bURaQdmmVAawuvVmqDiz9x
pWE6uDZmQLY7yFFDqYk/DCeHtnzgZkBV02BxdDyIP/gcAPYCf2dAfPCQL0xJ
hz8gRgmvbRpoQLTdQr5Sm4Y/WCAcTgLDaEBi16yp3xKGP+FugrBYYGlArxaD
xoS2hT95bvL42ApqQC2ku58EboU/TaHyuj2yakDQsFWXrjqFP3JIRkBkTmtA
hR/3irIXhT+noKOrtPdrQOvYrOcH/IQ/LW1U2saVbEDKVgYEQOmEP+5slYK9
MG1ACN7EiJDbhD+/HeAQ3thtQAQ23iam0IQ/4UJ+YsB1bkCGaW53HsmEPxMZ
JprMH29AlijGeSXDhD+AIl5LvcZvQHqgD5oSv4Q/H9D03zcxcEBftLlRUryE
P4ZnPw2mhXBAmJqgSSK6hD8WuTMcddRwQGvjrviUuIQ/LuMsHtkpcUCCSfVc
XLeEP+Mm7lyvfXFA0ukNV2y2hD/BJFl95stxQHdJ92fNtYQ/J/vIkLIgckCv
jHIBULWEP7WL4oXfb3JAckgRXPy0hD/vEqv6/79yQCJbDkC/tIQ/+arBQQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.2831913265763091}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AAABlqsyiO/RcJVHn
jxNAHvTiMa0PvD7FyyIHhWIkQBp9n1CRlVM/Hy7qmjJJLkDVWpFJpDaDPxdi
2uMT/zNAkvifN9IqlT+fNY2q3UI5QK8rNzRCSqE/r6vbi7UsPkD/QL8Ft/qn
Px/Vu07uv0FAKf0k7K/Drz9Tocq9E11EQMNAHUDo+bM/yz4nOkDNRkAPp79g
Sg24P4Ogqk4UcklA0GoryTfQvD9/03tw7+lLQLEakDI318A/aNONeFxVTkD5
QWZej3nDP8lLY4y4elBAzPq5jt6gxj+AliZjRrRRQBGGQ9dCy8k/VkP9BSgI
U0Ao1TdCREzNP6NW9JvSVVRAXGJqhTJA0D+SUpK4AI1VQGSCMweZb9E/obBD
oYLeVkCY/YmDzh/SP1L3mxCIGVhA50qb+Tn/0T8joAdM4W5ZQN0vhlDT6dA/
aq+TegO+WkAHDuwpVP3NP1Onxi+p9ltAqRat9tFryT9cAQ2xokldQFG1kf0W
KcQ/B0T6uB+GXkBaNrXqni+/PyntB7RlvF9AhN2CgCyftz82fJS9f4ZgQKIi
CTgXP7E/KHZ4ZI4jYUAySD9KK8qpPyohZvHGzWFA9vxcF1Ipoz9n/+P343Ri
QJoPzh7bfJ0/9VG1wcIQY0AnQXd6ctqXP5NVkHHLuWNADU6py7yskz+Czb7k
lVdkQHmTJTyRAJE/rHh90UTyZEBf2Ekg81GOP+bURaQdmmVAawuvVmqDiz9x
pWE6uDZmQLY7yFFDqYk/DCeHtnzgZkBV02BxdDyIP/gcAPYCf2dAfPCQL0xJ
hz8gRgmvbRpoQLTdQr5Sm4Y/WCAcTgLDaEBi16yp3xKGP+FugrBYYGlArxaD
xoS2hT95bvL42ApqQC2ku58EboU/TaHyuj2yakDQsFWXrjqFP3JIRkBkTmtA
hR/3irIXhT+noKOrtPdrQOvYrOcH/IQ/LW1U2saVbEDKVgYEQOmEP+5slYK9
MG1ACN7EiJDbhD+/HeAQ3thtQAQ23iam0IQ/4UJ+YsB1bkCGaW53HsmEPxMZ
JprMH29AlijGeSXDhD+AIl5LvcZvQHqgD5oSv4Q/H9D03zcxcEBftLlRUryE
P4ZnPw2mhXBAmJqgSSK6hD8WuTMcddRwQGvjrviUuIQ/LuMsHtkpcUCCSfVc
XLeEP+Mm7lyvfXFA0ukNV2y2hD/BJFl95stxQHdJ92fNtYQ/J/vIkLIgckCv
jHIBULWEP7WL4oXfb3JAckgRXPy0hD/vEqv6/79yQCJbDkC/tIQ/+arBQQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.2831913265763091}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYH6ZF/7NOvRcJVHn
jxNAnLjgTSgFXz7FyyIHhWIkQJ59QqueASA/Hy7qmjJJLkCHL886qCJgPxdi
2uMT/zNA27Dab4SieD+fNY2q3UI5QAjWKlVoYYg/r6vbi7UsPkA3de2S8faS
Px/Vu07uv0FA4E/MYMCFmz9Tocq9E11EQGp6mwQ6j6I/yz4nOkDNRkAN3gpU
z4ynP4Ogqk4UcklA5nkkeIGLrT9/03tw7+lLQOvVh9Dt5LE/aNONeFxVTkD4
lDs4r1e1P8lLY4y4elBAbOUH+DyhuT+AliZjRrRRQNRzlFgqOr4/VkP9BSgI
U0AAb7+zi/TBP6NW9JvSVVRAT/Tas0IXxT+SUpK4AI1VQKHEruYBRMg/obBD
oYLeVkARHHv8mtbLP1L3mxCIGVhAKbasLlUWzz8joAdM4W5ZQIFgAJCCGtE/
aq+TegO+WkBaTFfP5ELSP1Onxi+p9ltAzyxY6+Xh0j9cAQ2xokldQOuIooeT
/tI/B0T6uB+GXkD4RCSisprSPyntB7RlvF9AdCVkguTc0T82fJS9f4ZgQCfc
aRru0dA/KHZ4ZI4jYUDHgW1avovPPyohZvHGzWFAIOIrmjJfzT9n/+P343Ri
QAvjoXLpfMs/9VG1wcIQY0DvbPkEvALKP5NVkHHLuWNAE/J7qli3yD+Czb7k
lVdkQKEMn8C1xMc/rHh90UTyZEBQqAYydwvHP+bURaQdmmVAmi/l/VJyxj9x
pWE6uDZmQIOH957hBsY/DCeHtnzgZkAmW7PR2q/FP/gcAPYCf2dApZJWW8Jz
xT8gRgmvbRpoQPxYfpq1R8U/WCAcTgLDaECces5xXyTFP+FugrBYYGlANd1H
lR0MxT95bvL42ApqQNgkz53c+MQ/TaHyuj2yakBk4YGXHuvEP3JIRkBkTmtA
eA2mjLLhxD+noKOrtPdrQJqrBIY22sQ/LW1U2saVbEB14utCHdXEP+5slYK9
MG1AFS4sf2XRxD+/HeAQ3thtQL86dPBrzsQ/4UJ+YsB1bkDJFA8aXszEPxMZ
JprMH29AY9v3n7zKxD+AIl5LvcZvQGHPlImfycQ/H9D03zcxcEDsySvy3sjE
P4ZnPw2mhXBArxCF6kXIxD8WuTMcddRwQNmLl3vZx8Q/LuMsHtkpcUBsJCMQ
hMfEP+Mm7lyvfXFApupOXULHxD/BJFl95stxQHefN6QWx8Q/J/vIkLIgckAW
QaQg9MbEP7WL4oXfb3JAx9RMId3GxD/vEqv6/79yQK2M5H7MxsQ/X7vWHw==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.2967881035384738}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYH6ZF/7NOvRcJVHn
jxNAnLjgTSgFXz7FyyIHhWIkQJ59QqueASA/Hy7qmjJJLkCHL886qCJgPxdi
2uMT/zNA27Dab4SieD+fNY2q3UI5QAjWKlVoYYg/r6vbi7UsPkA3de2S8faS
Px/Vu07uv0FA4E/MYMCFmz9Tocq9E11EQGp6mwQ6j6I/yz4nOkDNRkAN3gpU
z4ynP4Ogqk4UcklA5nkkeIGLrT9/03tw7+lLQOvVh9Dt5LE/aNONeFxVTkD4
lDs4r1e1P8lLY4y4elBAbOUH+DyhuT+AliZjRrRRQNRzlFgqOr4/VkP9BSgI
U0AAb7+zi/TBP6NW9JvSVVRAT/Tas0IXxT+SUpK4AI1VQKHEruYBRMg/obBD
oYLeVkARHHv8mtbLP1L3mxCIGVhAKbasLlUWzz8joAdM4W5ZQIFgAJCCGtE/
aq+TegO+WkBaTFfP5ELSP1Onxi+p9ltAzyxY6+Xh0j9cAQ2xokldQOuIooeT
/tI/B0T6uB+GXkD4RCSisprSPyntB7RlvF9AdCVkguTc0T82fJS9f4ZgQCfc
aRru0dA/KHZ4ZI4jYUDHgW1avovPPyohZvHGzWFAIOIrmjJfzT9n/+P343Ri
QAvjoXLpfMs/9VG1wcIQY0DvbPkEvALKP5NVkHHLuWNAE/J7qli3yD+Czb7k
lVdkQKEMn8C1xMc/rHh90UTyZEBQqAYydwvHP+bURaQdmmVAmi/l/VJyxj9x
pWE6uDZmQIOH957hBsY/DCeHtnzgZkAmW7PR2q/FP/gcAPYCf2dApZJWW8Jz
xT8gRgmvbRpoQPxYfpq1R8U/WCAcTgLDaECces5xXyTFP+FugrBYYGlANd1H
lR0MxT95bvL42ApqQNgkz53c+MQ/TaHyuj2yakBk4YGXHuvEP3JIRkBkTmtA
eA2mjLLhxD+noKOrtPdrQJqrBIY22sQ/LW1U2saVbEB14utCHdXEP+5slYK9
MG1AFS4sf2XRxD+/HeAQ3thtQL86dPBrzsQ/4UJ+YsB1bkDJFA8aXszEPxMZ
JprMH29AY9v3n7zKxD+AIl5LvcZvQGHPlImfycQ/H9D03zcxcEDsySvy3sjE
P4ZnPw2mhXBArxCF6kXIxD8WuTMcddRwQNmLl3vZx8Q/LuMsHtkpcUBsJCMQ
hMfEP+Mm7lyvfXFApupOXULHxD/BJFl95stxQHefN6QWx8Q/J/vIkLIgckAW
QaQg9MbEP7WL4oXfb3JAx9RMId3GxD/vEqv6/79yQK2M5H7MxsQ/X7vWHw==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.2967881035384738}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVx31Q03UcwPE5zzAHwTWDAyFAnnyCcKTYDvh+YLhrTncNHIPiaTw/bozD
IgShGUOPB8kJ5JADhHgaObRhwzZ5yqWMGcp+hSQPYwTRKSAPQhjQrz/e976X
Y4wgKJ5IIBB88P7/semHJxXBmB8h+sJ1qy0ddSXchT17hQwVj4XlQVmbvg+0
+00KY5xhSe+6R3t5xs/e428pheEBj7MbY8113sgqZtRI3vaCvvcOq9vnwlDt
sdK2sYCPQFvcIk0wCJBc9kdx5xE/eKdtjkz1z0X22E+s+W5/SGYfilr6QYyC
6wfU5IhAsGEM/NVfVI60fm5U0NGBb86q035YiS7WtbH2ZjLg6KgFkUerQfnD
5zMW5phwS76pco26iZKGS7PDOSwYft5krRU3oUfM2BJlziegyvk2m9spQwWV
rrF0BRt+nuhVX2zuQCG0zV0HdgdDk5V+ucddgRpCVqqfcs7CefrC5UEvJboa
dFVJKOWAf2o6yVigQvUdtHrReAh49pxYbZ/qQUFr1RaXrEMhREVSSqT9yKnO
5LSBHwaDN4pXOBoNSpFLcnbe/xTIqtVLL4gDKLhZ80Hr68+AcuJRcv5OHQrf
YXb7JiMC5sQRihTTIWQSuKG0F0fC1xuTQxzuE3TwpYkiXhUFi7/TTavTnqLj
udfU+eJo+CqPSbsdOYwOfJ4dV+bEg855d4ElSY8OOSa80uh48CCtlUuR6FHi
tnHNmBUDApdTL6cW9GiV3dnbZxELJc+IEtvDGJJwyoXarljYeC7+hxaCIZHu
/nQFNw7MebuZ6xkYas/OexK4FAc3RmaXZSIMzehPNtpJ46GFNDZadgVDwu94
VOXxBKj03Vsir8KQqVvR3dzJBPAso1S212Bo3ZbwmpifCBbB67mF9RhyoL8t
T7dJApIT+w2lEUOhDrYsYn8SNC6fmfZpwpCBL+oIjU6Ge+PLW1XNGPqSv7Q+
sicFqqKsthpaMHSmfume750U+F66+CKqFUOZH9MhjpUKhUElXeO4m+saZIq1
VGDf4rEC2jDknn52VFORBrU7vvAV455PqxCpPdPBkfwb6S7ubrtJi/GRdCja
quWO4TYEXIjpOceHXx0NNuu4ydau0kF7AcjNv2GYyTBUsD+SqdYIIMv5VMc+
3PZDKxPeRzOA+NYvKS64xYnIrKkwA/6143u547bs8rI9p8+ARWtuDwW3h/HI
+88OCqGm+pqlN26j63y4PE8II7v28ai4e53D8ma0QviTqRf54HZ787D8jkMm
9Dn4evnh7iyeKpwQZMKP469CEe6Fd2Ub292ZQJtNpQLu/wBYudLi
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.338577324917072}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVx31Q03UcwPE5zzAHwTWDAyFAnnyCcKTYDvh+YLhrTncNHIPiaTw/bozD
IgShGUOPB8kJ5JADhHgaObRhwzZ5yqWMGcp+hSQPYwTRKSAPQhjQrz/e976X
Y4wgKJ5IIBB88P7/semHJxXBmB8h+sJ1qy0ddSXchT17hQwVj4XlQVmbvg+0
+00KY5xhSe+6R3t5xs/e428pheEBj7MbY8113sgqZtRI3vaCvvcOq9vnwlDt
sdK2sYCPQFvcIk0wCJBc9kdx5xE/eKdtjkz1z0X22E+s+W5/SGYfilr6QYyC
6wfU5IhAsGEM/NVfVI60fm5U0NGBb86q035YiS7WtbH2ZjLg6KgFkUerQfnD
5zMW5phwS76pco26iZKGS7PDOSwYft5krRU3oUfM2BJlziegyvk2m9spQwWV
rrF0BRt+nuhVX2zuQCG0zV0HdgdDk5V+ucddgRpCVqqfcs7CefrC5UEvJboa
dFVJKOWAf2o6yVigQvUdtHrReAh49pxYbZ/qQUFr1RaXrEMhREVSSqT9yKnO
5LSBHwaDN4pXOBoNSpFLcnbe/xTIqtVLL4gDKLhZ80Hr68+AcuJRcv5OHQrf
YXb7JiMC5sQRihTTIWQSuKG0F0fC1xuTQxzuE3TwpYkiXhUFi7/TTavTnqLj
udfU+eJo+CqPSbsdOYwOfJ4dV+bEg855d4ElSY8OOSa80uh48CCtlUuR6FHi
tnHNmBUDApdTL6cW9GiV3dnbZxELJc+IEtvDGJJwyoXarljYeC7+hxaCIZHu
/nQFNw7MebuZ6xkYas/OexK4FAc3RmaXZSIMzehPNtpJ46GFNDZadgVDwu94
VOXxBKj03Vsir8KQqVvR3dzJBPAso1S212Bo3ZbwmpifCBbB67mF9RhyoL8t
T7dJApIT+w2lEUOhDrYsYn8SNC6fmfZpwpCBL+oIjU6Ge+PLW1XNGPqSv7Q+
sicFqqKsthpaMHSmfume750U+F66+CKqFUOZH9MhjpUKhUElXeO4m+saZIq1
VGDf4rEC2jDknn52VFORBrU7vvAV455PqxCpPdPBkfwb6S7ubrtJi/GRdCja
quWO4TYEXIjpOceHXx0NNuu4ydau0kF7AcjNv2GYyTBUsD+SqdYIIMv5VMc+
3PZDKxPeRzOA+NYvKS64xYnIrKkwA/6143u547bs8rI9p8+ARWtuDwW3h/HI
+88OCqGm+pqlN26j63y4PE8II7v28ai4e53D8ma0QviTqRf54HZ787D8jkMm
9Dn4evnh7iyeKpwQZMKP469CEe6Fd2Ub292ZQJtNpQLu/wBYudLi
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.338577324917072}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYBjAF/7NOvRcJVHn
jxNAexVGX1tUmD3FyyIHhWIkQPo/eTdk4qs+Hy7qmjJJLkDsZ0Z9Nz8PPxdi
2uMT/zNASlZvXHrTOD+fNY2q3UI5QF9zC/s9d1M/r6vbi7UsPkCFnxxyagNk
Px/Vu07uv0FAKdhxC2gOcj9Tocq9E11EQORs763QrHw/yz4nOkDNRkC9yJg7
ooqEP4Ogqk4UcklAHQoGAUqfjD9/03tw7+lLQLhwY8XYt5I/aNONeFxVTkAQ
9bnKO6yXP8lLY4y4elBAeJHC5pbcnT+AliZjRrRRQIo2oWTgQ6I/VkP9BSgI
U0CAkkITx3KmP6NW9JvSVVRAAhL0twU5qz+SUpK4AI1VQGKx5JlmLbA/obBD
oYLeVkBGj9PYkVyzP1L3mxCIGVhAIe+liUu4tj8joAdM4W5ZQK/YPw/axLo/
aq+TegO+WkBPKjjjmhu/P1Onxi+p9ltAYEZ/2MSxwT9cAQ2xokldQK9gNTgL
E8Q/B0T6uB+GXkAKEfz4l0fGPyntB7RlvF9A3HxmfXZayD82fJS9f4ZgQK7S
yyvnbco/KHZ4ZI4jYUDP9vRawSbMPyohZvHGzWFA/x2MFZjAzT9n/+P343Ri
QGlsUVEfDc8/9VG1wcIQY0CWRcPQVwTQP5NVkHHLuWNAVhGlN2lw0D+Czb7k
lVdkQEBQeHKuvtA/rHh90UTyZEACCIaOHPrQP+bURaQdmmVANEuX3xsr0T9x
pWE6uDZmQB/BhMNvTdE/DCeHtnzgZkCcrbHzPWnRP/gcAPYCf2dA4VZYP298
0T8gRgmvbRpoQOigT+B8itE/WCAcTgLDaED434Kjy5XRP+FugrBYYGlA9Lxq
24ud0T95bvL42ApqQO/spOazo9E/TaHyuj2yakD8xBNhF6jRP3JIRkBkTmtA
xPTgQhqr0T+noKOrtPdrQAH4U9J+rdE/LW1U2saVbEAiADcHIK/RP+5slYK9
MG1A9kA9j1Cw0T+/HeAQ3thtQIRBoqVDsdE/4UJ+YsB1bkDllsi/67HRPxMZ
JprMH29A9OfHOHGy0T+AIl5LvcZvQHfwL2PMstE/H9D03zcxcEDbmnf2CbPR
P4ZnPw2mhXBAUVnX1zqz0T8WuTMcddRwQE4fQHVds9E/LuMsHtkpcUDOrVfC
eLPRP+Mm7lyvfXFAUUbhzI2z0T/BJFl95stxQM8cT9ibs9E/J/vIkLIgckBf
aajqprPRP7WL4oXfb3JARpdcQ66z0T/vEqv6/79yQNgQA4izs9E/8r3OBg==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.27659309656543263`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYBjAF/7NOvRcJVHn
jxNAexVGX1tUmD3FyyIHhWIkQPo/eTdk4qs+Hy7qmjJJLkDsZ0Z9Nz8PPxdi
2uMT/zNASlZvXHrTOD+fNY2q3UI5QF9zC/s9d1M/r6vbi7UsPkCFnxxyagNk
Px/Vu07uv0FAKdhxC2gOcj9Tocq9E11EQORs763QrHw/yz4nOkDNRkC9yJg7
ooqEP4Ogqk4UcklAHQoGAUqfjD9/03tw7+lLQLhwY8XYt5I/aNONeFxVTkAQ
9bnKO6yXP8lLY4y4elBAeJHC5pbcnT+AliZjRrRRQIo2oWTgQ6I/VkP9BSgI
U0CAkkITx3KmP6NW9JvSVVRAAhL0twU5qz+SUpK4AI1VQGKx5JlmLbA/obBD
oYLeVkBGj9PYkVyzP1L3mxCIGVhAIe+liUu4tj8joAdM4W5ZQK/YPw/axLo/
aq+TegO+WkBPKjjjmhu/P1Onxi+p9ltAYEZ/2MSxwT9cAQ2xokldQK9gNTgL
E8Q/B0T6uB+GXkAKEfz4l0fGPyntB7RlvF9A3HxmfXZayD82fJS9f4ZgQK7S
yyvnbco/KHZ4ZI4jYUDP9vRawSbMPyohZvHGzWFA/x2MFZjAzT9n/+P343Ri
QGlsUVEfDc8/9VG1wcIQY0CWRcPQVwTQP5NVkHHLuWNAVhGlN2lw0D+Czb7k
lVdkQEBQeHKuvtA/rHh90UTyZEACCIaOHPrQP+bURaQdmmVANEuX3xsr0T9x
pWE6uDZmQB/BhMNvTdE/DCeHtnzgZkCcrbHzPWnRP/gcAPYCf2dA4VZYP298
0T8gRgmvbRpoQOigT+B8itE/WCAcTgLDaED434Kjy5XRP+FugrBYYGlA9Lxq
24ud0T95bvL42ApqQO/spOazo9E/TaHyuj2yakD8xBNhF6jRP3JIRkBkTmtA
xPTgQhqr0T+noKOrtPdrQAH4U9J+rdE/LW1U2saVbEAiADcHIK/RP+5slYK9
MG1A9kA9j1Cw0T+/HeAQ3thtQIRBoqVDsdE/4UJ+YsB1bkDllsi/67HRPxMZ
JprMH29A9OfHOHGy0T+AIl5LvcZvQHfwL2PMstE/H9D03zcxcEDbmnf2CbPR
P4ZnPw2mhXBAUVnX1zqz0T8WuTMcddRwQE4fQHVds9E/LuMsHtkpcUDOrVfC
eLPRP+Mm7lyvfXFAUUbhzI2z0T/BJFl95stxQM8cT9ibs9E/J/vIkLIgckBf
aajqprPRP7WL4oXfb3JARpdcQ66z0T/vEqv6/79yQNgQA4izs9E/8r3OBg==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.27659309656543263`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYGNVKP7NOvRcJVHn
jxNA4yBt6POcMT3FyyIHhWIkQODH4NcoAm8+Hy7qmjJJLkCkCMVO9eTiPhdi
2uMT/zNAld2hcFWjFj+fNY2q3UI5QFZu27pWVDc/r6vbi7UsPkD6quaFIGRM
Px/Vu07uv0FAlLVzpP0rXT9Tocq9E11EQIvVtnhBfGk/yz4nOkDNRkAsjPel
vJNzP4Ogqk4UcklAECNmxBv1fD9/03tw7+lLQI83FoaLxoM/aNONeFxVTkBH
uDEYgtaJP8lLY4y4elBACcICMEG6kD+AliZjRrRRQO1uvjdW0pQ/VkP9BSgI
U0BdaB76AOyZP6NW9JvSVVRA7Vsg/kexnz+SUpK4AI1VQGGio8LB7KI/obBD
oYLeVkAlAQSXFLmmP1L3mxCIGVhAI8JKbtu1qj8joAdM4W5ZQBjHnrlIga8/
aq+TegO+WkAbqFRZ9FGyP1Onxi+p9ltA5e8TUrLatD9cAQ2xokldQI4L9bF7
rLc/B0T6uB+GXkARFCdR50q6PyntB7RlvF9ABYINMyDEvD82fJS9f4ZgQKyh
7sU7Qb8/KHZ4ZI4jYUD+0Ady4qnAPyohZvHGzWFAO42SuBChwT9n/+P343Ri
QFnRh6P4acI/9VG1wcIQY0DF9bRoOgLDP5NVkHHLuWNAhXXmPViFwz+Czb7k
lVdkQJN6BKaS5MM/rHh90UTyZEAAa6tRCy3EP+bURaQdmmVA2LcBFexoxD9x
pWE6uDZmQMTjlG71ksQ/DCeHtnzgZkDRAwf4DbXEP/gcAPYCf2dAFfDOqqDM
xD8gRgmvbRpoQFICTuX63cQ/WCAcTgLDaEAcTnUSzevEP+FugrBYYGlAXqUL
cVb1xD95bvL42ApqQDm7Zm7m/MQ/TaHyuj2yakBSqWDyUQLFP3JIRkBkTmtA
0sFm2wcGxT+noKOrtPdrQC3W2/T5CMU/LW1U2saVbEAPE+Xn+ArFP+5slYK9
MG1ALuxF+nMMxT+/HeAQ3thtQHOmOWGfDcU/4UJ+YsB1bkDGhvuKbg7FPxMZ
JprMH29Aq93nCBMPxT+AIl5LvcZvQCTXf2KDD8U/H9D03zcxcEC8WBJIzw/F
P4ZnPw2mhXBAh0pqjwsQxT8WuTMcddRwQCGMLEI2EMU/LuMsHtkpcUDEGPbn
VxDFP+Mm7lyvfXFAXjMuzXEQxT/BJFl95stxQMQP4w2DEMU/J/vIkLIgckBh
tvmrkBDFP7WL4oXfb3JAsEZHvZkQxT/vEqv6/79yQIF6t0igEMU/jubE5w==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.16456988859768631`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AYGNVKP7NOvRcJVHn
jxNA4yBt6POcMT3FyyIHhWIkQODH4NcoAm8+Hy7qmjJJLkCkCMVO9eTiPhdi
2uMT/zNAld2hcFWjFj+fNY2q3UI5QFZu27pWVDc/r6vbi7UsPkD6quaFIGRM
Px/Vu07uv0FAlLVzpP0rXT9Tocq9E11EQIvVtnhBfGk/yz4nOkDNRkAsjPel
vJNzP4Ogqk4UcklAECNmxBv1fD9/03tw7+lLQI83FoaLxoM/aNONeFxVTkBH
uDEYgtaJP8lLY4y4elBACcICMEG6kD+AliZjRrRRQO1uvjdW0pQ/VkP9BSgI
U0BdaB76AOyZP6NW9JvSVVRA7Vsg/kexnz+SUpK4AI1VQGGio8LB7KI/obBD
oYLeVkAlAQSXFLmmP1L3mxCIGVhAI8JKbtu1qj8joAdM4W5ZQBjHnrlIga8/
aq+TegO+WkAbqFRZ9FGyP1Onxi+p9ltA5e8TUrLatD9cAQ2xokldQI4L9bF7
rLc/B0T6uB+GXkARFCdR50q6PyntB7RlvF9ABYINMyDEvD82fJS9f4ZgQKyh
7sU7Qb8/KHZ4ZI4jYUD+0Ady4qnAPyohZvHGzWFAO42SuBChwT9n/+P343Ri
QFnRh6P4acI/9VG1wcIQY0DF9bRoOgLDP5NVkHHLuWNAhXXmPViFwz+Czb7k
lVdkQJN6BKaS5MM/rHh90UTyZEAAa6tRCy3EP+bURaQdmmVA2LcBFexoxD9x
pWE6uDZmQMTjlG71ksQ/DCeHtnzgZkDRAwf4DbXEP/gcAPYCf2dAFfDOqqDM
xD8gRgmvbRpoQFICTuX63cQ/WCAcTgLDaEAcTnUSzevEP+FugrBYYGlAXqUL
cVb1xD95bvL42ApqQDm7Zm7m/MQ/TaHyuj2yakBSqWDyUQLFP3JIRkBkTmtA
0sFm2wcGxT+noKOrtPdrQC3W2/T5CMU/LW1U2saVbEAPE+Xn+ArFP+5slYK9
MG1ALuxF+nMMxT+/HeAQ3thtQHOmOWGfDcU/4UJ+YsB1bkDGhvuKbg7FPxMZ
JprMH29Aq93nCBMPxT+AIl5LvcZvQCTXf2KDD8U/H9D03zcxcEC8WBJIzw/F
P4ZnPw2mhXBAh0pqjwsQxT8WuTMcddRwQCGMLEI2EMU/LuMsHtkpcUDEGPbn
VxDFP+Mm7lyvfXFAXjMuzXEQxT/BJFl95stxQMQP4w2DEMU/J/vIkLIgckBh
tvmrkBDFP7WL4oXfb3JAsEZHvZkQxT/vEqv6/79yQIF6t0igEMU/jubE5w==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.16456988859768631`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AgPBn9f3NOvRcJVHn
jxNAAo681smexDzFyyIHhWIkQJOxdg7VGCw+Hy7qmjJJLkA6U3bAaTCxPhdi
2uMT/zNAu0uoyc/C7D6fNY2q3UI5QHiY+EguUxI/r6vbi7UsPkBQFAL94WEp
Px/Vu07uv0FAL9EJXfLRPD9Tocq9E11EQO1SIR8wFEs/yz4nOkDNRkAqdIRW
juhVP4Ogqk4UcklA/FFKO4HoYD9/03tw7+lLQGPVr3enyWc/aNONeFxVTkDZ
X4CLAsJvP8lLY4y4elBAD1nF/nvodD+AliZjRrRRQD73N3uVTHo/VkP9BSgI
U0A3p7BUMHuAP6NW9JvSVVRATOWmbe82hD+SUpK4AI1VQHrb//mIKIg/obBD
oYLeVkDqHVu6/PaMP1L3mxCIGVhAUctv1OX4kD8joAdM4W5ZQF5FuJVX7ZM/
aq+TegO+WkDec5yNFQuXP1Onxi+p9ltAdvtXvTEQmj9cAQ2xokldQO67VUVQ
W50/B0T6uB+GXkDOaguiiy2gPyntB7RlvF9AHDp57UmRoT82fJS9f4ZgQPyW
A9u076I/KHZ4ZI4jYUBtzVyW4QykPyohZvHGzWFAhWMmF5IQpT9n/+P343Ri
QND9Yooi36U/9VG1wcIQY0D5MIP873imP5NVkHHLuWNAMtQfhab7pj+Czb7k
lVdkQAIv1PWoWac/rHh90UTyZECm2nekmaCnP+bURaQdmmVAvnmlyOXapz9x
pWE6uDZmQGH8B43MA6g/DCeHtnzgZkBMBewVoCSoP/gcAPYCf2dAZKthxVY7
qD8gRgmvbRpoQGUSOnngS6g/WCAcTgLDaEBTZOkIW1moP+FugrBYYGlAjKUo
rIViqD95bvL42ApqQC+YbNTSaag/TaHyuj2yakChyWKu/W6oP3JIRkBkTmtA
8P0BMYxyqD+noKOrtPdrQDx7yN9gdag/LW1U2saVbEArLiBMVXeoP+5slYK9
MG1ABOdj67J4qD+/HeAQ3thtQG2t92bUeag/4UJ+YsB1bkBVoPQEm3qoPxMZ
JprMH29AyhpKsTh7qD+AIl5LvcZvQJc7mlGke6g/H9D03zcxcEAHGQ4S7Xuo
P4ZnPw2mhXBARgrqCCd8qD8WuTMcddRwQPrviitQfKg/LuMsHtkpcUAXd2N0
cHyoP+Mm7lyvfXFA6mLUIIl8qD/BJFl95stxQEKg6GeZfKg/J/vIkLIgckCk
tldQpnyoP7WL4oXfb3JA9jl6CK98qD/vEqv6/79yQAHVt4G1fKg/RPzGWQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.047826454243400825`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAANeTIRbRT1T4AgPBn9f3NOvRcJVHn
jxNAAo681smexDzFyyIHhWIkQJOxdg7VGCw+Hy7qmjJJLkA6U3bAaTCxPhdi
2uMT/zNAu0uoyc/C7D6fNY2q3UI5QHiY+EguUxI/r6vbi7UsPkBQFAL94WEp
Px/Vu07uv0FAL9EJXfLRPD9Tocq9E11EQO1SIR8wFEs/yz4nOkDNRkAqdIRW
juhVP4Ogqk4UcklA/FFKO4HoYD9/03tw7+lLQGPVr3enyWc/aNONeFxVTkDZ
X4CLAsJvP8lLY4y4elBAD1nF/nvodD+AliZjRrRRQD73N3uVTHo/VkP9BSgI
U0A3p7BUMHuAP6NW9JvSVVRATOWmbe82hD+SUpK4AI1VQHrb//mIKIg/obBD
oYLeVkDqHVu6/PaMP1L3mxCIGVhAUctv1OX4kD8joAdM4W5ZQF5FuJVX7ZM/
aq+TegO+WkDec5yNFQuXP1Onxi+p9ltAdvtXvTEQmj9cAQ2xokldQO67VUVQ
W50/B0T6uB+GXkDOaguiiy2gPyntB7RlvF9AHDp57UmRoT82fJS9f4ZgQPyW
A9u076I/KHZ4ZI4jYUBtzVyW4QykPyohZvHGzWFAhWMmF5IQpT9n/+P343Ri
QND9Yooi36U/9VG1wcIQY0D5MIP873imP5NVkHHLuWNAMtQfhab7pj+Czb7k
lVdkQAIv1PWoWac/rHh90UTyZECm2nekmaCnP+bURaQdmmVAvnmlyOXapz9x
pWE6uDZmQGH8B43MA6g/DCeHtnzgZkBMBewVoCSoP/gcAPYCf2dAZKthxVY7
qD8gRgmvbRpoQGUSOnngS6g/WCAcTgLDaEBTZOkIW1moP+FugrBYYGlAjKUo
rIViqD95bvL42ApqQC+YbNTSaag/TaHyuj2yakChyWKu/W6oP3JIRkBkTmtA
8P0BMYxyqD+noKOrtPdrQDx7yN9gdag/LW1U2saVbEArLiBMVXeoP+5slYK9
MG1ABOdj67J4qD+/HeAQ3thtQG2t92bUeag/4UJ+YsB1bkBVoPQEm3qoPxMZ
JprMH29AyhpKsTh7qD+AIl5LvcZvQJc7mlGke6g/H9D03zcxcEAHGQ4S7Xuo
P4ZnPw2mhXBARgrqCCd8qD8WuTMcddRwQPrviitQfKg/LuMsHtkpcUAXd2N0
cHyoP+Mm7lyvfXFA6mLUIIl8qD/BJFl95stxQEKg6GeZfKg/J/vIkLIgckCk
tldQpnyoP7WL4oXfb3JA9jl6CK98qD/vEqv6/79yQAHVt4G1fKg/RPzGWQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.047826454243400825`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}], ",", "262.76976337227296`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.839722609826493`*^-17"}], ",", "7.900288364053596`*^-17",
      ",", 
     RowBox[{"-", "5.276560145591806`*^-17"}], ",", "3.5870094789442`*^-9", 
     ",", "0.0005947203697677404`", ",", "0.05811147613260738`", ",", 
     "0.2819908264478414`", ",", "0.3432173251799674`", ",", 
     "0.2422283804206905`", ",", "0.07385726786211667`", ",", 
     RowBox[{"-", "6.632775096333438`*^-16"}], ",", 
     "1.3546038398931634`*^-15", ",", "2.0387601173226656`*^-14", ",", 
     "6.0261476974225275`*^-6", ",", "0.010121721648830313`", ",", 
     "0.16236654877986148`", ",", "0.3385723111048141`", ",", 
     "0.2765613204655035`", ",", "0.1645503084524749`", ",", 
     "0.047821763400797045`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.693389968331793*^9, 3.693390021432624*^9, 3.69339010207858*^9, 
   3.693390192079955*^9, 3.693390341221437*^9, 3.693390490930476*^9, 
   3.693465258355644*^9, 3.69350911994417*^9, 3.69354910672754*^9, {
   3.6935491496217813`*^9, 3.693549156313843*^9}, 3.693549232583171*^9, 
   3.693549335712225*^9, 3.693549370445331*^9, 3.693549403648347*^9, 
   3.6935494718642807`*^9, 3.693549509583885*^9, 3.693549546058125*^9, {
   3.693549606508971*^9, 3.6935496300639763`*^9}, 3.693551609001602*^9, 
   3.6935516494861507`*^9, 3.6935517889493513`*^9, 3.6935518999816303`*^9, 
   3.693552015515254*^9, 3.693552099000599*^9, 3.6935522034072857`*^9, {
   3.693552241937991*^9, 3.693552267705894*^9}, {3.693552299027066*^9, 
   3.693552347121438*^9}, 3.693552393964518*^9, 3.693552462425097*^9, 
   3.693552522641201*^9, 3.6935526105826*^9, {3.6935526445257273`*^9, 
   3.6935526711130133`*^9}, 3.6935527542435493`*^9, 3.693552807018931*^9, 
   3.693552849398324*^9, {3.69355295841033*^9, 3.693553016977631*^9}, 
   3.6935530620682497`*^9, {3.693553112414743*^9, 3.6935531509249887`*^9}, 
   3.693556714058526*^9, 3.693556776732691*^9, 3.693556809830985*^9, 
   3.693559568917816*^9, 3.693559602828021*^9, 3.693559637576953*^9, 
   3.693568787609873*^9, 3.693569114821322*^9, 3.693934026086227*^9, {
   3.6939340583271713`*^9, 3.693934064722024*^9}, 3.693934900246608*^9, {
   3.693935130552536*^9, 3.6939351556150703`*^9}, 3.693935307408387*^9, 
   3.693935471119501*^9, 3.69393574363562*^9, {3.6939359197144613`*^9, 
   3.6939359597066813`*^9}, {3.693936007455413*^9, 3.693936041875388*^9}, 
   3.694021904029187*^9, 3.69402196563278*^9, {3.694022021599785*^9, 
   3.694022079539008*^9}, 3.694022522852318*^9, {3.6940833727702293`*^9, 
   3.69408337669344*^9}, {3.694083435736018*^9, 3.694083453767137*^9}, 
   3.6940835728068333`*^9, 3.6940836792164507`*^9, 3.694083737350519*^9, 
   3.6940837899411297`*^9, {3.6940838354985647`*^9, 3.694083862793253*^9}, 
   3.69408389922355*^9, 3.694084074131235*^9, 3.694084111609817*^9, {
   3.694084143883684*^9, 3.6940841606570168`*^9}, 3.694084366188423*^9, {
   3.694084424184041*^9, 3.69408444485282*^9}, 3.6940845441864233`*^9, 
   3.694084579992293*^9, {3.694084768956826*^9, 3.694084823580924*^9}, 
   3.694084880806756*^9, 3.6940849782060347`*^9, 3.6940854941511583`*^9, 
   3.694085557350854*^9, {3.6940856314506273`*^9, 3.694085727245247*^9}, 
   3.694085773556508*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Numerical (floating-point) approximation to interior exact \
solution: \\n\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "4", "]"}], "\[Rule]", "3.561791883342726`*^-9"}], 
     ",", 
     RowBox[{
      RowBox[{"x", "[", "5", "]"}], "\[Rule]", "0.0005933986567782835`"}], 
     ",", 
     RowBox[{
      RowBox[{"x", "[", "6", "]"}], "\[Rule]", "0.05807158506526721`"}], ",", 
     
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "\[Rule]", "0.2819567721578138`"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "8", "]"}], "\[Rule]", "0.3432485749922069`"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "9", "]"}], "\[Rule]", "0.24226280160390945`"}], ",", 
     
     RowBox[{
      RowBox[{"x", "[", "10", "]"}], "\[Rule]", "0.07386686396223253`"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "1", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "2", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "3", "]"}], "\[Rule]", "2.1366058394916076`*^-14"}], 
     ",", 
     RowBox[{
      RowBox[{"y", "[", "4", "]"}], "\[Rule]", "6.00232316029848`*^-6"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "5", "]"}], "\[Rule]", "0.010109098352003808`"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "6", "]"}], "\[Rule]", "0.16231129060719954`"}], ",", 
     
     RowBox[{
      RowBox[{"y", "[", "7", "]"}], "\[Rule]", "0.33857789099922664`"}], ",", 
     
     RowBox[{
      RowBox[{"y", "[", "8", "]"}], "\[Rule]", "0.2765966554834968`"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "9", "]"}], "\[Rule]", "0.16457208176175375`"}], ",", 
     
     RowBox[{
      RowBox[{"y", "[", "10", "]"}], "\[Rule]", "0.04782698047313769`"}]}], 
    "}"}]}],
  SequenceForm[
  "Numerical (floating-point) approximation to interior exact solution: \n", \
{$CellContext`x[1] -> 0., $CellContext`x[2] -> 0., $CellContext`x[3] -> 
    0., $CellContext`x[4] -> 3.561791883342726*^-9, $CellContext`x[5] -> 
    0.0005933986567782835, $CellContext`x[6] -> 
    0.05807158506526721, $CellContext`x[7] -> 
    0.2819567721578138, $CellContext`x[8] -> 
    0.3432485749922069, $CellContext`x[9] -> 
    0.24226280160390945`, $CellContext`x[10] -> 
    0.07386686396223253, $CellContext`y[1] -> 0., $CellContext`y[2] -> 
    0., $CellContext`y[3] -> 2.1366058394916076`*^-14, $CellContext`y[4] -> 
    6.00232316029848*^-6, $CellContext`y[5] -> 
    0.010109098352003808`, $CellContext`y[6] -> 
    0.16231129060719954`, $CellContext`y[7] -> 
    0.33857789099922664`, $CellContext`y[8] -> 
    0.2765966554834968, $CellContext`y[9] -> 
    0.16457208176175375`, $CellContext`y[10] -> 0.04782698047313769}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.693216069662969*^9, 3.693216187121756*^9, {3.693216666070216*^9, 
   3.693216695508848*^9}, 3.693216794429591*^9, 3.693216861001594*^9, 
   3.693216895034821*^9, 3.693217282937132*^9, 3.6932174092519073`*^9, 
   3.693267792647324*^9, 3.693268006247285*^9, 3.6932680766715593`*^9, 
   3.6932682151100473`*^9, 3.693268257387802*^9, 3.693388071195992*^9, {
   3.6933882963702593`*^9, 3.693388305329612*^9}, 3.693388736771392*^9, 
   3.693388917678261*^9, 3.6933889798898697`*^9, 3.693389084986813*^9, {
   3.6933899508750963`*^9, 3.693389970387224*^9}, 3.693390091194821*^9, 
   3.693390150187726*^9, 3.693390233903132*^9, 3.693390391827153*^9, 
   3.693465241027198*^9, 3.693508955037485*^9, 3.6935491065857162`*^9, {
   3.693549149501539*^9, 3.693549156183898*^9}, 3.693549217959503*^9, 
   3.693549321676759*^9, 3.693549357157795*^9, 3.693549389894163*^9, 
   3.693549458715068*^9, 3.6935494962045*^9, 3.693549532719714*^9, {
   3.693549592165887*^9, 3.693549616213064*^9}, 3.693551608891541*^9, 
   3.693551649383109*^9, 3.693551788849519*^9, 3.69355189987843*^9, 
   3.693552015393626*^9, 3.693552098899064*^9, 3.693552203306796*^9, {
   3.69355224185544*^9, 3.693552265704995*^9}, {3.693552297001133*^9, 
   3.693552344328611*^9}, 3.693552391022505*^9, 3.693552459673304*^9, 
   3.693552519805025*^9, 3.693552607780953*^9, {3.6935526420782747`*^9, 
   3.6935526684726973`*^9}, 3.693552751517625*^9, {3.693552804320837*^9, 
   3.693552816207534*^9}, 3.693552924526701*^9, {3.69355296281409*^9, 
   3.6935530150837917`*^9}, 3.693553059770514*^9, {3.693553110247304*^9, 
   3.693553150821951*^9}, 3.6935567139532022`*^9, 3.69355677662545*^9, 
   3.69355680943888*^9, 3.6935595685789757`*^9, 3.693559602440136*^9, 
   3.693559637186779*^9, 3.6935687873672533`*^9, 3.69356911454039*^9, 
   3.69393402622366*^9, {3.6939340584719543`*^9, 3.693934064598426*^9}, 
   3.693934899872707*^9, {3.693935130154244*^9, 3.693935155210321*^9}, 
   3.693935307007538*^9, 3.693935470601185*^9, 3.693935743059915*^9, {
   3.693935919315153*^9, 3.693935959112762*^9}, {3.693936007174004*^9, 
   3.6939360413501577`*^9}, 3.694021903918817*^9, 3.6940219656116133`*^9, {
   3.694022020456333*^9, 3.694022079191965*^9}, 3.694022522376161*^9, {
   3.69408337295192*^9, 3.694083376268001*^9}, {3.694083435290024*^9, 
   3.6940834531717863`*^9}, 3.694083571670354*^9, 3.694083678095149*^9, 
   3.694083736421473*^9, 3.694083789106988*^9, {3.694083834560821*^9, 
   3.6940838622124577`*^9}, 3.694083898659315*^9, 3.694084072094207*^9, 
   3.694084108623722*^9, {3.6940841411961603`*^9, 3.694084157825118*^9}, 
   3.694084361621031*^9, {3.694084421326167*^9, 3.69408444082271*^9}, 
   3.694084540040264*^9, 3.6940845759298553`*^9, {3.694084764903928*^9, 
   3.694084819474948*^9}, 3.69408487696754*^9, 3.694084975415893*^9, 
   3.694085491525*^9, 3.6940855555660143`*^9, {3.6940856307327967`*^9, 
   3.6940856913646*^9}, 3.694085724413669*^9, 3.694085774117729*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"We now solve the differential equation numerically (with \
NDSolve), starting at the initial point: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.08295203010192337`", ",", "0.11091488642224939`", ",", 
     "0.08813225260367356`", ",", "0.10317133694760057`", ",", 
     "0.08502099002033174`", ",", "0.13099142621121845`", ",", 
     "0.15396550496884925`", ",", "0.004128889594882227`", ",", 
     "0.07458720273010638`", ",", "0.16613548039916495`", ",", 
     "0.10618127319105757`", ",", "0.1376973401638229`", ",", 
     "0.1109369037329784`", ",", "0.08537164299180382`", ",", 
     "0.08599920233856292`", ",", "0.06690533274354797`", ",", 
     "0.15748820303980907`", ",", "0.100290816694045`", ",", 
     "0.04979049183297225`", ",", "0.09933879327140013`"}], "}"}]}],
  SequenceForm[
  "We now solve the differential equation numerically (with NDSolve), \
starting at the initial point: ", {0.08295203010192337, 0.11091488642224939`, 
   0.08813225260367356, 0.10317133694760057`, 0.08502099002033174, 
   0.13099142621121845`, 0.15396550496884925`, 0.004128889594882227, 
   0.07458720273010638, 0.16613548039916495`, 0.10618127319105757`, 
   0.1376973401638229, 0.1109369037329784, 0.08537164299180382, 
   0.08599920233856292, 0.06690533274354797, 0.15748820303980907`, 
   0.100290816694045, 0.04979049183297225, 0.09933879327140013}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.693216069662969*^9, 3.693216187121756*^9, {3.693216666070216*^9, 
   3.693216695508848*^9}, 3.693216794429591*^9, 3.693216861001594*^9, 
   3.693216895034821*^9, 3.693217282937132*^9, 3.6932174092519073`*^9, 
   3.693267792647324*^9, 3.693268006247285*^9, 3.6932680766715593`*^9, 
   3.6932682151100473`*^9, 3.693268257387802*^9, 3.693388071195992*^9, {
   3.6933882963702593`*^9, 3.693388305329612*^9}, 3.693388736771392*^9, 
   3.693388917678261*^9, 3.6933889798898697`*^9, 3.693389084986813*^9, {
   3.6933899508750963`*^9, 3.693389970387224*^9}, 3.693390091194821*^9, 
   3.693390150187726*^9, 3.693390233903132*^9, 3.693390391827153*^9, 
   3.693465241027198*^9, 3.693508955037485*^9, 3.6935491065857162`*^9, {
   3.693549149501539*^9, 3.693549156183898*^9}, 3.693549217959503*^9, 
   3.693549321676759*^9, 3.693549357157795*^9, 3.693549389894163*^9, 
   3.693549458715068*^9, 3.6935494962045*^9, 3.693549532719714*^9, {
   3.693549592165887*^9, 3.693549616213064*^9}, 3.693551608891541*^9, 
   3.693551649383109*^9, 3.693551788849519*^9, 3.69355189987843*^9, 
   3.693552015393626*^9, 3.693552098899064*^9, 3.693552203306796*^9, {
   3.69355224185544*^9, 3.693552265704995*^9}, {3.693552297001133*^9, 
   3.693552344328611*^9}, 3.693552391022505*^9, 3.693552459673304*^9, 
   3.693552519805025*^9, 3.693552607780953*^9, {3.6935526420782747`*^9, 
   3.6935526684726973`*^9}, 3.693552751517625*^9, {3.693552804320837*^9, 
   3.693552816207534*^9}, 3.693552924526701*^9, {3.69355296281409*^9, 
   3.6935530150837917`*^9}, 3.693553059770514*^9, {3.693553110247304*^9, 
   3.693553150821951*^9}, 3.6935567139532022`*^9, 3.69355677662545*^9, 
   3.69355680943888*^9, 3.6935595685789757`*^9, 3.693559602440136*^9, 
   3.693559637186779*^9, 3.6935687873672533`*^9, 3.69356911454039*^9, 
   3.69393402622366*^9, {3.6939340584719543`*^9, 3.693934064598426*^9}, 
   3.693934899872707*^9, {3.693935130154244*^9, 3.693935155210321*^9}, 
   3.693935307007538*^9, 3.693935470601185*^9, 3.693935743059915*^9, {
   3.693935919315153*^9, 3.693935959112762*^9}, {3.693936007174004*^9, 
   3.6939360413501577`*^9}, 3.694021903918817*^9, 3.6940219656116133`*^9, {
   3.694022020456333*^9, 3.694022079191965*^9}, 3.694022522376161*^9, {
   3.69408337295192*^9, 3.694083376268001*^9}, {3.694083435290024*^9, 
   3.6940834531717863`*^9}, 3.694083571670354*^9, 3.694083678095149*^9, 
   3.694083736421473*^9, 3.694083789106988*^9, {3.694083834560821*^9, 
   3.6940838622124577`*^9}, 3.694083898659315*^9, 3.694084072094207*^9, 
   3.694084108623722*^9, {3.6940841411961603`*^9, 3.694084157825118*^9}, 
   3.694084361621031*^9, {3.694084421326167*^9, 3.69408444082271*^9}, 
   3.694084540040264*^9, 3.6940845759298553`*^9, {3.694084764903928*^9, 
   3.694084819474948*^9}, 3.69408487696754*^9, 3.694084975415893*^9, 
   3.694085491525*^9, 3.6940855555660143`*^9, {3.6940856307327967`*^9, 
   3.6940856913646*^9}, 3.694085724413669*^9, 3.694085774252185*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
NvkldK4Xf7E4nWNmYAbIjN3kc6EPxwX1Xv5xyAx0HodpPnDrx4eEu4Zljc3g
pZaQhm/SIF6tb52QZWoGz2/nyy2rHcJDN9ptjtLMoOWrf2jtwjC+/7OlzY1l
Bpe9jxYd9x7FH5vrP7bYm4H7WEl7n8IkjpAwuX/5ohlsMSyZu/BjEl88+umQ
sJMZjGoa53zCU1iCqC7ScjODXYXW/ZnXZ3D3byP3z+5mkFHysOrO6V84S6NS
287DDNr3v9hUxpzF1PjSzBBfM0hyTlDbZz6HN3YeuKj2wAxcw40P4TN/8KxM
sUqFvxnQpbfmHL85j58/LIz9FWwGqe2VF9QqFnH7lTfB1DgzULKaSwnv5yHS
0jQpo4lmEFWoJZEZuIS4NZgp7p1iBj6KvfMDhryEgmW6b3aWGRSe21zP/5aP
sNVPdJN8T9Y/K3RnU48gsct9457kMjPguXtE5vQ7IYI/N3bqQJUZRM4cWcF5
LkwkbI067/jZDHoG1UNaTi8lRiRCreo6yPvr9/6YNBInHhvJrd7WbQa1G2nC
rnrLiV0ekXV3+8zAxP+cYIm8BHHzZ7zBvh9mYD9rf3aP0gpC4lPW1oQ5Mzhj
+Fjz5Qkp4o3Anl6eRTNYW5p/ubFTirBAb8Mt/5nBkaPOCcuuriTiUouWrxCk
guj8ilvxSauII336H86LUIGjJiQbfEiaGF9b4VkhRoXu/uR2izZpItDsiK6i
BBUOGUnf38dZTWg9qP11Q4oKhW6mwf0Nq4n2kpOvm6WpMPfylKOQhgzhMd9w
VkOWCmUtjICTrjLExp10pYfyVNhqrHnWIUGGqD73rW1AgQqjiv/Oir2VIS5F
s4IPbKDCsEup4Pc0GWLlt07j8M1U+HvFL+expwzxVsJW+LcKFUR06P2fd8kQ
1kYD703VqDAwtkvsRMlqgs/j3I1UDSpcyVYNf7NlNZGUN7pLaDcVHqUfFM4/
LU0c/3lpnKtNBS+Ti9aGN1YRk5umEwv3UcFtJ1/SO4+VRIj1Ne5qPSoIyh6I
7r0hReiE/JF10qfC6a36wnMXJQlvAR7/zUeoEHVwdnXFQQliK/I67HmcCru3
F7j1WIoTn5wFl3ScpMLZ7d2Pm7aLEav7xJwD6VSwY/JLMoeEiMK1T7aPmVNB
dan9tepvAgTHTGrwsBUVeFTmnkV+5yOSS9ZY/GdLBcViaz7tXTzEyflwKaYd
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
9ZzBLickbaSvM8Bof+XeZf4zuMo0eU3WTQZ0ihkN3b81g2Xp+vUn7jDALTA8
4xFlBjtYtPoNezMgM3fnS03hGUxYO8FdPwYocF3zX7ycxhK2S+cUHjKA49Ym
1i0xjbl2Ma8LHzPgYVm/tgpnCmed17FjPiX5ruis+f5sEvNfblg3E8KAfWWy
gqllE5jubN/8+AUDVoy1z9PrfuJEV17/bREMOBykMz8oNI6P3tn5n008A8Lj
6LLutBH8JDCwrT6bAbLZpfZPSntwT4jK0wt5DBgU+3zOYKgLa4aVHBUpYMAn
/TUZPGrfcXPs1FsoYQDPcH5P4v6veEvSfcf2cgZQmL59ov99wddTlba6fmAA
r2deTGVHHZZ/Q3n+uo6sd1xKrH1rBb74duTksUYGvDr9ojFxuBgXY0+hwa8M
iOj9TnCV8rFkiWyRZxsDQLIu/UNiOj5VkXVtXScDki4blaEfL3Fu9VG1dz0M
qIvqNFhicBoLfe7ppw0wYH81dt+2PQgxv1x/OTnMgKoktdDy//9//VWS9miM
AUMBabedMl6hxbZksa2TDFjWwbj6+mkaOtGlX1Y2w4CcD69uPk5KRxF9rTc4
c+S8n68P3/ghFU0MOWkuLjDAcIVwSltFEtIfW/rj2T8GiEWykm9WxaKnkzEx
mnxMGPqTKSryPQz1/dKx+CzIhMvlwyflHR6hPfMNK84vZQLPiEJksP8e5PfX
/oOgOBMmFNxcHgw9wt94+e7ErGBCfnkB12AmAruLak58k2HCQKhR2j+eDPxp
eU3iVTkmXNy+kZe5IQcrrLRlr1Bgwvy7Of/unfm4VO7pJ6PNTMjSvK9sUVeE
TyH1V19UmGAp7diR8ew95rf+6GWtxoRSTnK5pnwpjrtlbz2swYRiLu+9dIcy
fDBSaK/zbiboPm2WnvYqxwNFcVL/tJlQN7Pp0hLbCuzTdWD8ni4TaD7TAd9E
KvGmJZ1VK4EJK410b99wrcSViu6xkQZMkNRZojWYXonP6q+5pXKYCVtZ+m/l
0iqxsG0u881RJjim/xOQu1KJk7zMNMGYCZPqe+X7eSrxkbiJZTWmTHDqHf/r
Qq/AI2WPhmg0JohVKKQ0XinH9/tVSruYTHCJn/7SZVOGazaddp1lM+HNcrUw
ZSjBDod5ze7YMkH1pMzVNM33WOxs5HYxOyYY/Ng97a5SjE+8+tajeJEJcFk6
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
oYsnO0/cybwarQFifmRwQL8vhn9+BXjuUBMTpvUBfdf/xvBxExMlHy8mnLX9
3U2Psf26xzrMUhwihMVee0L9WXwVJN2yxocI/ZE9uvPOYPCreahrUjBC2FrY
JD87i2Eq4GxDoNYocSx6q/KhIHa+nzXBXZGjxBM9NO3uOQxChSXr1ZzHiE2k
Vt26ixgyo4YVbv8YJ1wfqO/6fgmDhEPfxwxigogYV3kTcgXD7nrP8sLrE8T7
WPkcURQGjeUVK8Y2TxL73o5cdL6BYWe6zTx8YYoIUB7gSsRjeOoyB7tXTxGJ
/G7/VAGG4Z8piQbyHNQ81Yh7EzG4Hg1PnuHAQVLW9bUxNzHUmFktaTvBQcvj
a2zWJrPn3hYbHsdxkLeRaH3wHQzLP39R1fzMQVFBrx9qpmLI+ffom5eDHJTz
vlDrbRqGuvsbmqwVuWjEPVdpdgaGU13e69QtuUj18YOI/PsYrK6VH3Jz4SIk
kT7l9ACDcRRZFn2Si879l9h5JxuDSdzs9XEpXJTSccNlWw6Gk+qrdH2ecVGp
cXRNdy6GYO5Zo6UfuKjr3GXr6DwMzSeG3jz5wUWzKsJeGj/BgEoEzjr9XGS4
KHht3VMMFrpenickeGjP4YAHgQUYYtoolyRFHvJ74rd0KYPhtUl4fqIaD8VJ
HRGUPsdw5eCn5mN6PFSw20vBuwhDhMByv9paHvp2kx+m+BKDnW5zZJI5D3G7
D048LsZw0zZltNeKhzTWOx7d/5r11/YrM5XseMgifM/PqRJWL3sFaJoTD3lU
7TgoLMVQkC/ivXThoUuLt1ZZvmX5zFD/YO3KQ5k+5tt/idj+/o5Tvu3BQ0c9
Ck/kvseQ6p7D/eHFQyaYSDldzuafMXuXeZiHJpyeVm6uwLCXeB88g41f2Btz
Z33CwNFrXN7H5oftzNGvrmLxrZYuw2x9q22GTok1rB+KRJ4H2PsVN2VGuNZi
wP75SvWOPFRD6OTpf2XjQHtRwy4eSjBOaxbXYZDiGya4buUh0nCp4vNvGN7c
r7xwGPGQlk7yhrAGDOuaSpJ6DXmoS2PRXzaNLP+XbzT2LuGhhwsT4uc1Y1i5
ptzRazaLt/L8N99b2H1Djcg5s3xwZJWW+P5k943fNhthHRe9kozcadKJocMz
rL3/NRddmJI9w/mF4fz0hrpHD7hodr9UbWQvhuz9swYDAriotitEal8fBkuN
Ea3gQ1yU2MoxUh/AYJq3/FOPGRct/zJ65eEQhjXO5x+P87iou9K/4OQIBseQ
krHrDaxe3w383DjG6j3mxOfoAg5CRd2bKiYx2Cft8bvjw0G70hpH+yQpuBa4
Rr8vZIqYl3xw2bPpFBR4S1a/1Jgi6gR1diEyFMxgnJYav5gkXK9WZynNpMC0
eFjc1zdBnPIrczWaTUHadiNZW51xAny3xIzPoUC8KCa2KGuMkPIsLiqeR4FX
vcbGnJVjROQBRtVOhQKrfXqr5HVHCeGm7IrjiylgDJYZGg0MER7IgIM0KDiq
ewBvOcDuG5MMPSlNCr7Fe+nTL8TEE52U8NjlFCTJe7wtDB4k3ivGo7wVFJxG
RiVPqvuIoYag9GFEwbK6AC4p6iBS9gXZJwMFxTLXXMj4n4R9RSDPyoyC/ILH
N1cfbidyXp51TNpMQYJx0EVZlVbCN+X0DAsrCoSSTkzw7R9Eu9dJz+h9FJjc
9my9mFRBfBH7ausfoyArULD3cfIrOsLHt7rmOAVq0+/eXDKzlDZp9wkO8qdg
heWy4O1HRHRsrfeXT/9QYDmq3DEY/ZHeXXD4wqkgCnzbcyW0dT7ToiD3jjdX
KKBmX9v57HQjTcseSsd3KYhPkepbKt9DawxW1qB7FHQbHsyA/h76Qv0WyQX3
KZjK1nyd4NVL7800OFSeRcHqSNPZc2x/0302U3OIfArqlU/+IJf008uiE4Pm
llDw9NVrCZ9eMX31lOKD328oaHIc+vLBe4gW4/N1ojIKlH3lEty7h+iXRt7G
Ie8pIDbTCsd+D9PO1cSvnioKakqCzHdJj9Ex8+v3ljZT4HZ5wzmtc1P0GNf2
vLCVgpiYpNsDMzkM2VH86Gw7BUYnbrVUOXIYg2cZs9Z0UTAwRy4le4j9JTkF
FCf3s/y/KPt0DvGYqSSVFQE8PiRcvvRWRkqScQ2/esBhGh/s19V+/UFJMiJf
iYsrpfgQVXShyKhYkonf2NnSLsMHicyzC46flmKMmp4K7BT4cDr/UVde7XRG
8Fa/dIUSH252Wlit0JVmeDnJ4j/m8GFH+P2wqgBp5sO5C7YvlPkQmI4d7yvL
MGv+mjzz3wI+OJ3vsGvCMkyC3d8ZJ1T5IPZ/NGh1X4aRQK21uxfyIVf7S2fn
gAzjqek43UCNDxFb/+koWjeD+R9RPgME
             "]]}, 
           RowBox[{"x", "[", "1", "]"}]], Annotation[#, 
           $CellContext`x[1], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwUl3k8lN8Xx63Zt7QglZC1bAnhPs+x74wxIyGhjUhKoZJQSVoJFZLIkiWy
ZnnsRcguimzZ9zX0Jb/5/TWvz+vcOfe+P+ecmXsPOF8in2Wgo6OrZqGj+//n
T9bPLIOzjdg7yfN8M2dK8b8LVJEzoWm4/uNPrye6SnHPoefaMqHFuGeOmOQn
nMAXz/qrh41V48exJM6CWAJP/5ljxRVaj19Ad7zPzxF4TopXgW5UC/7Xn89O
W60M5xniqg4aa8cVc19bV/iU4e7Cqc0Val34yP0BLssPZXidtXbvvwc/8Q2F
6N3nesvwg2G945o9v/ChB8/NzjOU45VnS26gqAH8UOLlU2Ui5fh8EGtgLzaE
f6ymd2hWLcf3xVPv3xz7jfe982xdMSjHTYmEx0LPRvDMz2q5jyzL8Rs/554X
qY3hrv0J2BylHE9d1Yy2GRzHsf0PjK6Qy/GuHaHxqw8mccYDzt2njcvxbUpd
yVFK03ieMXM7HyrHlS3EM4/2zOCdUfq/vsqU487ul3M77szhbNN6vm385Xid
bn/vsah5nPPDMTrPtTL8VDuz44MLC/j960Jpo91l+B+nQ7+7sUXc5x03l3d+
Gf5knnxOin8JTyxpHbJ5QuO9fX3CZ2wJL/1Fyfp6ugwv5Yp3ry1ZxkuHTQQZ
VMpwSuyXuV3PVvAY6l4+FeYyPKiI/0++2ip+1jG1wCaGwAUN1a8zc63hS2Hj
q+nOBJ793XGDMriGJ5pHYcWSBN63lMmw/OAv3jFdF5mUXopfC+q4p+PwH87D
u/NO64VSnJPvP9bnShv4T62T8tZSpbiGnCGPUs8m7ukYE/hfXAluqrzApRZF
B1bpPPx0/sV4qsdDIe8xRvgSXbh0XugT7vy7/MjiA3ZY6/UVOWKSi5tZ/etk
2WSHK0UvL7D8l4OrVWv67vXkgMOHb/T4pefg3IlFpYbWnBA2amd6gTsHL3LO
1Xsjyg1sfTzT073ZOOvldtnkX7wQOKok6QSZ+L/UxQ2F3Xxw62NbZv2nDHxp
gK+phMQHCWf1p2aVMvA+EsmztZoP/vNYdb14KB3PVfiWt/F+OzxitJA5q/we
d5j/gqy8d0BRCGd3x4sknCI1yt2XtQOct/qG1mWTcCNH5gGXiR3g03/hT2Pl
O1y5RSfI334nkN0P8l9eTMTZsiu+vNfeBaVe2b0O5xPwf2P9L5T9dgFPyL9n
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
wetfHZxGs0h8w3u1VLs9RP8871cTwxE46VLx6JARMX/IvUvZxyLwMFXTPZeA
mK+PPXUpIByv/dQcILyP6KdsuunrpTCc25/WnHjADrjsh/gTnEJxQ63f67Yf
toOUz1fWJ5Lv4B5fL7lyrOxgOLj1SvH7IDw7WOD5ERs7UDK+IT+A38T7d0Yv
d9vaEfvRbD1scw1f36dyyMPeDub7jKuGZD1x27D8aF5Hop5adbtmEBMPRVhP
FMMOKtYcsgk9bYmqRxq2qToR8/k+9pozOY8MzIbemrvbwfpHo7ca54PQvvFL
og/P2EHVs1XGfNP3kXWiqO3EeTtYsnhtYW8UhdwmdAbjfexAwJ7hsSnqIfJ+
UKU1dsUOwp7l/eKze4QCDpC8Ta7bQdZRhed1/Gno4UNfwV+37OC7i9np/zoy
UZb5Gmvj23ZgIH5UVmUpB5VMPYqPvEv4KS65LnpbPnqbpN87dJ/YR+D6Nn+e
QtR8sEbDKJLQlz9r7DVXEfo2bX8hLIaY5z2tQku9BP1M/v2qP56Ih1nPcy6V
Ip5ZCct7KYRevYePdCThSOxRWnTPY6LeaXCSN6xA6yx2f9/5lPDnMbXcNOL+
66dSz35/RvirSmCf6qp3CCz/vNAtIPRbJYf4GquR5bw/V1CRHXQrpCqG5dUi
F6un4Tte2YG6pvUfP8575PF3T+dNDuHfr3fvffjdiK6nvVdpf0OcH3hR0pDQ
jOIWJp771RL8TmxT3SP6CTWkG7V9/GwHcQULy3Ox7ajdummDagfhp8vHxU9u
7ET9S0zXy9/sYJ9l3vrh4q9o2SZoXqWP8G/NtU9z4j+Q8LL8Xu9BOzB0MtZY
dutGazNzbjf8tIPGfQ3YFdsepL3yUcFz3A5yVsJfdpj0IaMsJ3btlB0cCpJc
PWPWjw7azmWvn7OD3IMawtetBxArez16988OdrVnddrcGEJRJFe6rAgJLseV
F262+o1SeBaeuomRIOlM3e7u2FH07NndcY4ECZb1/aUnR8ZQNW+hv6scCT7N
VNpWt42jv3lLj0u3kCCX0yHb/2kK8VPu/xbdSoJ21eX0/ORpJMmvspO5jQRO
PQF7HpybQduoB6qF9EhgsLR8VFhlDtEEI4YdgAT4zXulX6oWUL6oRsqsKQlU
1yxjcs2LiFuikhRxgASkLQnGgz1LKE1+srrOigS1moKnPOVX0KxiyDVnGxJs
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
dKWhAvY/7aE2OQ==
             "]]}, 
           RowBox[{"x", "[", "2", "]"}]], Annotation[#, 
           $CellContext`x[2], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
E0lK/+Nucl7fT/3cN8eFrGSfkvA3kjheNnqgeZELYy6Ndi/OSOJWyT2zk8sc
oSnKsu3PTQlcIZ6pWbzcEXzNeryq10ngndGdNjeFHeGN4ssSw3Jx3Pl+a5bM
CkfAVQz8pidX4Fc865z1ZR0hS/nWOetNYjh4HAqbl3MEBwXl35VZorigW2VZ
pYIjiJiGhBboiuIPHAhlm1WOoMl09ZDZLIInHMhpvqjuCHWpcrBzajnuim/l
wdc5gnF+r5OZA/neGKRtEdzgCOVSO9aVlgviRZuSgiI2OsLbytdJFTeW4R+k
o/CCbY6gez7Y9U0rH/632y91BncE5QMKdOd3s1iSvZ9tPDhCDds63jnqH2bb
7MtnbuQIB5aGq3e5z2C5FdepscaO0Hnb01dy1TTmkXRN5KC5IyRfFbUKeD6B
DZ685BZq7wiF3qGxIbE9WMe0h5b2BVLvGn6FrPgWFHzGo7XtoiPwWI2nq6xo
RwaDZ274eZH+Nf3rMj7biSLaT3d8ukzqPbDS+Xfod3T8jfvtK35k/FZvJc1N
g+id34mhmnuO5Hto9ef1tUmExFip3BRHqLyc17BBcgmt+/OxDX/pCO+kC+P2
/V5Ct7sOLVNKd4TP3DeHn57kISgZW1mNWY7waOVAlpwlLzF5bEkOK3SEm9Ye
6dy1/IRmaIyffLUjrPaZ1vMYFyTuX5HOnKhxBJfIw4pNp5cT09yAznd1ZD3J
zAHX0eVEhf7pnTc/OEL1X3evixNCBKMVGxlrcYRGZ7vvx4VEibCVXZTaPkc4
vfta9EZ/CWKO1zIgYcAR9J8cKfizQpLgDFW+uj7oCGfOX+Fto0oSW4vTxHf8
cgSViMfNr/5KEnX0q5Xxvx3BVXbjugBcmliKXbXtKp8TFG7pdhYVlCOcg+47
2Ak4gfHGo369jnLEOw/+/3QFnWDn3a1nd1TKEVH7hvsHhZ1gd/9Sl+c1eUK/
93W0jZQTzPTUthS1KxDR9dq122ScYPKoFa67WZHgy42fFpVzgkupfjfarioS
Df63LcsVncCh8IBzpuJKYsepRZ+nSk4gu1XSrZ+7knhicy7NW9kJglUmpY6l
ryT48YH246pOsM5ZUHJ0aiXhtoG6fKuaEzQPnZCvNFQi/gezl8kK
             "]]}, 
           RowBox[{"x", "[", "3", "]"}]], Annotation[#, 
           $CellContext`x[3], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Bw7dg8I=
             "]]}, 
           RowBox[{"x", "[", "4", "]"}]], Annotation[#, 
           $CellContext`x[4], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV1Xc8V+8XAHA7IWSUkr1HQr6ocA6fj73Hxx4fK6KkIpSRFalUkpFQQgOl
UkayfcxEKpKUUmYSomT87u+fe1/v13Oe85z73HueK+Z11MaXgY6OTpm4/P8+
xNq6aXS2W8cwYqFgrvkprPyiiPqk3IeohPClYaZnEPzlqp58Sg3kCzWZrpKe
QcnQY9stKZ1wq/xvv+CLZ9Burze8fm4IrmzZvkkitxKkrgxPaH34CCeseJg6
+iqh0ff5Ke2MzzCmt2V+P3MVCN+kJJ0e/wqJ+i+UWvyrYIAv5ebyuSlQev3j
FpdkNbCoDhRnqM5Ao+eAXr1VNahZSpb99+EHcIybtJdFVkM7+dPwvow5iL8T
Yxv6uhqkYiImw8YX4E59oNOHkzUwslDGsHhuBXrLGGS/3X8OoXFvEknu/+Bv
nrwEc+9z4Nj6j/Wq6ipQdRLOTy8+hwNKRlyqH9aAfTr9g5hOLZip/dqimUGH
bVtsNR721MLdoPM7T44zYnXU1uS86Rfg9bV+7/w5NqyWM2DdzNMA5rbrbzet
saHyY6pdgFQDaDZrhQsFs6Oo0SG3Xs0G4LxdXWtkz4FmNgLe9z0aoNrriX6+
OCdaSKbkppY1AOuxfoXij9yY4SZc/Ny4EdznaNq2J/kwbT71lUlME9jJfucc
eciHXJE3H1qkNYExlfmz/yQfsu7jziUVNYFaLyku2pUff3GjxlpnE2wub6Dd
09uGxRXTe7P4m6HiaI0lHZcAWv+UVXhS3AxsP8s8y+4IYvRY7Y+Zxy2gwyTE
6P9REHMEfMpON7bA8R0XCsV5d2FOFOfk+KsWeE8KGM+M3oWfdPWq7Wda4G6W
9JE4ihBeGdgpe0aiFfT18sMdGEXQ+ED7j8yUVgh34NzJs08EBe6od7RktELp
4ajn3UEiqOr+r7OtoBX4Ml3WdYdEsP/Op1yLmlb49ZtdL8NRFHdKc9pTxluh
waS97cweMVwtzQv7p0kD57cxAu4mYlh9vzeJqkeDRQ+NQwd8xZAv62JChikN
ZEOL2Zaui+GNlKO7Q9xocCk/wTyQRRz3mKULzEUT4/JaeUZi4liE5xbfnqVB
U8XCrJSWOO7cuzSVkkqDpQ6vy5+PiSOlME/XM5cG7ovYT/kojrLOP0Vqqmjw
J/qPxN4/4riRQMrlradB2ubyEG5eCbw1fmlhfysNaMIi27qMJFDo6t1z8700
oN57d/CutwR6nW4Ij3tHg5W9qZWJ0RJoNOSX/+kDDXYbrzlihQQO1WjO030n
5vdX3BN6JYFZPZ83tU4R890Pr6xMSuAcR5eM/U8apJ/4kPNURBKdFMNVPi3T
QGk9bSZtvyR+Em6Ze/ePBu3JJtrBFEkcd/fxzdmgwWpu9Yj8eUkMnHqyI4Wl
DbawXzeMLZLE5KXZjsLNbSAcfqp8oF4S/455DV/kaAPlb847lIYkMW3G+ag+
Vxvo2hyIS1iUxHUdubtdW9vApl5weohTCl/2uCaI8rWBj+KqrYqcFF5MTaAn
b2uD0Ozh2iQSMR68R0hdoA3OsryQGnGTwp3+M2+WdrRB5oncVLVwKWTyM5E+
K9gGdz9HLaekSaEAdZBzbFcb1Ji7U0dLpfC7vtQFbuE26KrR6dBok8JVtoYc
dpE2GJYRUU0dlUKV032kt4Rn0zeuj/0jzP2q4IhoG2zQf2Y8sE0a3eX3vXlD
mPtow+ErytL4rtBqgU2sDcSGb74dN5HGKmd7QW7CqsaxOjq+0igpc95vjIgn
P/O8kx4jjZrf9iwkEaZI6HFPZ0sjb3Di+xVivYOXxSN0K6TxTUH3f9qEw9cY
vmT2SON1RwMJS6LecwFfTWYnpDHh8N4XykJtcH2g+QmZUQYfVb8R/kI8bwm5
cFeOkAy2u+Z7eO9sg9pHCYm/NGTQe1zlbAWxXz3CvrOGNjLo4dBR+ZbYz0/n
9R3yDsvgteN+Im3Efs/9kWpYPCuDw+tbJpJ52oDhIIuc6S0ZZG+q0xLkbgNJ
bFtZfiuDCUwG6o/Z2uC/sjveFnMyGMklqlK5qQ0MdiZ3F7LJYq0/u89FpjY4
tGiUZw2yeFxISPjBGg1OecptuuskiwuVCv/+/KXBhZ7NwesnZFFFZXsF/xIN
Htzt1C25K4t9t9yjW3/QoJ6/5D59sywyaB/bcJykQW/ceV7Hj7K4qjKvWj9G
gwVXs29MPHI4FVx6mYn43jW39iS7n5bDBY0NvQiiX4yjH/yquCaHVRmxJ+4S
/eQ8nerMXi6HgmndfKXVNIhqtVSsGpPD7XnKd1TKiH6N6Hu11UIejUbzc7TT
aND//ZGmv788NpVsLdt+ngZjtmm36uLkUbWPx7o9ngYsSrYnAivlUUww1/dB
CA1Mv7zZ1iqqgLmnk8yv2dEgYcfnZXttBaxpWNI8QZwfdVbTgxNOCnj2bCKv
BHG+KNfT53BcVcDvdy1kV5RowHdDScSOWRE/vL/fe5mFBsOUZJmvk4oYNTUm
VFPWCvwXr7KGsuzGkr+2+8ZvtYJFS94ki8RuVPtHGpu5Rpxnqk9L5F13o47G
7L34qFYo5Pqy53jPbszLDxGeNmmFwx0HNOmfKKE24o1Nn1qgiM5wx9VXSmjE
t+f4Qm8LjGjYrEjOKCH5Yht/fVMLWBX71xpJ7UEQoC9dLmoBtfhreDlzD17Z
N+H+L6AFovPCCrl0lFEqlX7u2c9mMHDsK80TV8HS7DdN5uNNoDodcGVhjwoW
WwmukwaaQDia6aSRtgrOV4YYKbQ1wdJtDZh3UMH3zUyXe4qb4M7P3D79iypY
Prvr9zHfJmBNCliaWVbB5vRnI1GfG6HzKSMeeKmKTwaq2CR7if8hr3r/QJga
XpVK9Xhr8QLM2b+dMDmrhn8G72SVyBFmTOd7ka6GOb/zRy4wEV74RSl4pIYn
jZ6sHK+pBfP+ssHD02p4yFfIfkSa8FWpEXqP/1A4pmX0AcNzIj//pIKBOq4V
Hq2ndFQR+VvO5dmpY4isJX1SMWHGE/JbvdUx5Q/9q754wgu9gUsx6nioRvT6
Ux3C/RdmG6rVscVvraXhaSWRn2mRslsDfylM/Ja494zIv7gew6eJ0TMlnneL
KyA5slLhobgm2jbM14gmV0DLt1OOI8qauLO9sKzqUAVoVdE/1jLXxJS6SRaj
3RUg78bl+zdREzntbIQnnz4B1jvyXceXNXGorkna6OVjaN7vmek7tA+1NCcu
vuZ7BOu3JVvSJ/ahfUlR7MGVcti/ZWKueWkfXpqdeyn4uRwefwoyEefdj+1p
4YlTJeVwMyFybcR0P7Jw6zHv0C+H6J5Mb8cX+3HUSP5awL8HsM+rZ4/pzQOo
PW98n4erFFqaiqzOlh3A2c2ae4O/lYCVRNSxxpoDKFmrKMRcWwIHxxSeaLw9
gMfPl958c6gE0g+eU5dk00IzviztTe33YTaArL12QgtnMx6x56beg4ITNSYP
DbVRO/livzXpDux+cyVwyk4b5yPytlmL3oEqtUMXpLy08X78w9C4tWJ49Xt7
T06kNn7t2NF9qqoYVsNCrZMfEfEXWKpqlYvBPlLZ0VNQBwdkMwNd5YuAPbHY
l/cn4YKL/fl4G+6bXNU7vKaD+7lPPuYSuw0m3GdEWtkB07NjGJ7Q34bkHKf3
J2UBc3839KU1FwDTYw7zIU9A+5gTbx8aF8D6yHG1W28AScfMKyU9bkH4jfzY
7W6IlaUbCZbO+WC0wT9H8kF0pkvpZ5HJh+1eF9yDAxFrGJwt+Bbz4JlMxIGO
CMRvXLem91zKg9+PbX6fykDkHztzx7UjF453MB8aeYXY18O9IGh+AwKXAq2K
9HQRI7oHO1Oz4YvdTJWDsS4GfnX/u80/G5yfHBZjs9LF/xSOfr6pmw1GwUfm
g9x08aPB45OHf2eB9FRQuma4Lsa/0I9/75EFox+PDXaV6aIe49W1esgEh9Yw
6ryAHnrwj1wzlrsGPRJ/2gtF9HCLSumWws3XwCAuXMVBWg8l0rbGqEylgxpE
MNTu1cPhbZtWv5akA0/1qcJECz3c6PDYlaeSDi9LoyYEEvSwg+2xppTBVSCl
xwfDTz1kzTbmiLhyBRwVOEV6f+vhqjNnmGj4FQhqynpJXdXDS757OObcr0DW
XJl83GYSmhweesCy+wrMmA2OtUiQUOOb6B22rsuQwbzbycSRhFFhAQJqnJdh
6uQ7XUojCdsDaIVL7hdhY4vn3Lc2Epb736n0+u8i8BVN553sIeGFqm55bo6L
AP10q5kfSOj1uctcqeYCpO9ReDb0m4Sdjp2MQTsugM5EjDxVnoySOsE8+V9T
4IqTHG/gVTIe75zs21yYDMq36/JTrpMxUI8WxBKTDL0ztor3b5HxclLiLj3n
ZOA8E60/+ZCMiy0DnSFbkyGluD/Mr5uM1rtWbGvikiBhIWrYm1kfD1kuSx4N
PgsnL74ucg3TRycWZcXW0ATgH/BTjYzWx3bP3z+GHBKgQnStLidRHyVZeKkS
+xNg/onM4NBVfbzZm/HZZCMejg5FsjmV6+ONtSixqfPx4C8jc5QyqY+m9fe9
dzyIA5fG05oWLgbYwm/ev40vFgpYBOsXPA3wqq+Xwem1MzBhWqOf7W+A8lSy
POP4GTj57o/NWKgBHhFocoqsOQNp06FHTl02QMuvIZNbvM9AJ39wQXGrAfIW
hlQshsTA/gAfjo09hmj7evf0D/ooiH3IeLVQ3RD/e50eXTMcCe2LBTtMtA3x
yXON6w2VkWAfMyp9zcQQpUC6LywoEo6nu+sq+Bqi7iNHzqSR03CvzvGkw3VD
TKhmLP/QfgoEeM0/P2QyQkvOkrOCLeEwybZMHmM3wnblGdqHgnCoYbh1T4DX
CK+Pt0N/bDi4zi8ejxUzwvjQFfODGA75fTeYbXWM8Ht78/rWhjCQvjwjvxRm
hPfohWiyHSfhvy0XQrWmjVDs+wrd2EYIsDCrDwXPG6H4e959A2Mh8G71k07R
XyO8EyMQsdQRAuEze1k5WY3xqJvH08r0EKjt+nD9k6QxOtnBIS3FECCnKDTE
uRvjtKGDvqD3CbDZ1MXW0WeMt+ZTKlRnj0GjRszTD4PG+C72V0ji4DFQ9t9L
nf1kjBfz+E+vNB2DLR05T3lnjfFHu7K3SdYxaE85THVnM0HD4amZU+RjoMPJ
+WxBzwRzGk66TBYEgzy/tadwhQm+p/DxKfwIgmx9Zg6V5ya4vmvV+FxHELCe
rH5GajLBDEO5GOHiIPj2TozjUK8J7nE4rTvjEQQ3s+afPZkxQcHiZz5c747A
tl3pHMZSpujt1Wcq330YGCQGKk9kmKKmgLvu/o8BIGB5zZUj1xTpsw7d7m0M
gD2nbemLbptiG/uLzanFAeDa/8rkXbkpGki4fIkMDoBn8e0fNbtMMdvN8oUE
SwAEjlUzrm+YooDr/ISb5iF4U3TDMvmQGTKV36FyVPrBVJ/zomiwGUbgX0Ge
m35Avy6QXX3SDLtqHPs0zvmBkv21L1PxZlhz7avZFxc/SGZJDTXPM8PtBaTU
MgY/0PKLyeHpN8OCe5zUVcpBKJL1Gr+hZY7U+9fWNHl8wWCTQkALyRylWlti
cc0Hvn9bmJk2MceDffQ3fCd8QPp24vx+J3O0rStKY633gbtC99YGQ82xfzI9
+dERHyjlmePlf2iO8UncmZd6vaFiNQovilngvrNfhrNLvMDug0FzhawFdhTm
0Mlc94Lf1VwGw3ssMFt26ObLZC9QD7tlqqBjgUzUcXu/g15Q9avFvsPZAtcu
6mV3i3tB7Xf2I8zpFkij+ytucNMTWnqzs6NYLPHHZp/HIyVU4Cg5vE1hiyUO
BVNsjPOoYJcIVwd5LfGXlsQf2mUqfNv37cJeMUsc47mg8y+UCiy3lc9MHrDE
V/PBe1CXCkahbQcpxyzR+t6KktQzD3i54/fe3cOWyLXLvM7tP3fYtthWPvTF
EqUPFBQZC7uDe8/13cmTllhcOS5pu8kdZuNQ5uuSJaaajh+pe+8GrEv6F7tZ
rXCyfNfpXzFuIOdx5UychBUG08dsKexzhUAVWb9ZRytUd7qdznPOBd4sZ6Rf
cLVCKo/yfN0JF9CpY26Sp1oh7VV5f7K7C3Cbft3l52eFfKn3EkLUXKDCJ+/1
p1Ar1M1UN78z6gyrmXw6fWlW+Knv8ayDrjOkrtPxV3RboSpDiGMnnxMstxzV
s+m1Qpn9zzsGGZyAen7k6Fy/FRq78SVtzDmCqkBtp+IHKzyTJ3Xg2ktHGFAJ
O1M0aYXP88aGh5McQdT3x3QGizVmS7+/U0nnCI+73jdFoDWWjsxNHWNwgIAH
5rybyNZ4quHeavyCPYhfafRON7RGr4aG5Xtj9pBmf4/poYU1bt7as1mlzR6O
j4YbjLlao6N19sOdF+1BdXl7p0WENT5yt5m33mUPT8Tt+yQeW2P/p0np94YU
OMzcKfboqTWqqx27K3SAApIT2sd1qq1x92XzpONKFEgvk+J1arDGl+7Mbub8
FAjR/G2X2mOND//+i2v8agdqFumDf6ascfCR6+SxeDuoiHj96aWEDRrUzN9u
fmkL6Gy6W1jGBrOzQpYym22he3/LqSB5G/yP6WVHWLUtjP17ys+lYoOkePoF
pyJb4IvONrXSscHnohGWd6Ns4UQctfK1ow1aaWmdCFC2BdXzs6kDF23wnQ5n
Qn+uDdQF+g3LXLHBo5tv1tJfswETs89y4ek2GGMtob//gg14bXndIpBjg6tJ
Ceqdp2wg7dLTFae7Nviejqrl7WgDv65GHhxussEA9/6iQH4bKL/BpjO6bIM2
f4ZG/DOsIfZd8kr4Pxvk8DnlLJxqDTbcmyq5N2ww98j6nY+J1rAYz6iMLLY4
J2pwKCLUGjQCV8Xy+Wzx98leRwmKNdTtm2V2U7FFK0rF+T3brOHlu76XgwG2
qHKpPv9xnhXkcVulBAfZoonWF/64TCsIMukxYD1uiw+PLnY6XbYC7rrOeo0I
WxT17nshFmcFdkXNjzKSiHjrfieeg1YwfOLpNbtCW8z8KcUSuMcKpriz3Xo/
EvmfLfHoXLKES0a7tiuM2mLj83Tv1HhLUDuT35s4ZovXlS7CVJglRP0sIh2Y
tsVA1RZyC9USuHseyxX/sUXd1E7VDVVL0Djf/fs0rx1O5D/LOv/eAhKY6VJl
jO0QHryX+axsAXLa8YZxZnbIrPBTrUXaAnpCWOg/WhLxtooDj3dZwPYxjpA0
ezu0fbm54gGrBdxv2uG85m2HNyi0FwKj5tAbs1e6P9oOI3iKFSqvmoPQysG6
6Ao7fD2MA4J05sBt8fN6e6UdWgnkcbsvmwFTQVgYz3M7pFoF7rw3awYzxsnK
xY12aDE4GOv00Qxqsu8VvOyxw22Ork6iz83Acd/M2V2Tdvgn4degbrgZpIcf
s6wRoiCTq3fvtT+mkNz9V4FJjIIpLrr7Ps6ZQqRoHKuFJAUrvuXoKU6agnd7
WuOoPAV/Z9PUR9+bEv1csXezJgWDi0P7i56bQm/l0nZHGwq6Dvu3nz9jCuzL
pz//PkvBkMYHm4u4TIFcuFkxKYWCI5O1NC1WIr91ZphAKgXfC084DtOZwmzJ
Y84D1yiof4kOVOdNoJc6qXXmNgW/tKxy73trAhmd9tlsDRRUiEzLfHzDBMTz
VGxE/lLQOKCdU07FBFxM63PLVynIxVjvVCpvAul/zCZ16exRZkk3TF3SBJht
/c/4bLLH7OY+Ro/tJjCxKf/BPX57zP3m7Ei3bgxlxzjY1VTtcSJDPPt0tzFo
6o83GwXaY60aQ+fWIGMgz0Vw5AbZI6j6udT5G4N1Dgfl1zF7FFgdfnPU2xgC
fql8zw63xxJpRs9RR2PIzY1knU60xwNqJ5jXScbAsLTV/OJNe0zu+ForJGgM
XcVa7/re2iMl5rjbeLcRDFq/EpZ+b49k4+WL8u1GMLbq6Xdq2B6dpzRljjcb
wbpN0h/xr/Y4Ino3irPGCJQ3+naGzNljnZ+i8Ok7RpDu4Oexjd0BBW5GmovE
G4E7a9qEMzqg99sXXoe1jaCcQ/7mEskBk5rXLQY0jYB+a5NDmqEDjqbuyDRQ
M4LCHfO0DgsHLC45LayqYART8jZFmm4OmEH96qK1wwjCzHm8tp1ywMajP/n2
LhnC5bS0D31PHLDo1umvb58YwpcM+atHKh1Qtl4u8c1DQ9ib02Sy+bkDcqR/
/PGuxBDe3Z6vxiYHjBqR6vp+2xCEntpkPex1QLfkbw570w3h/gAP5eIPB6z6
eOFJXKghNO+62mMk44h1ly6pfdpvCD7ayvf65R3RyW3qp7eGITC5v4x3V3LE
c/nsHDN7DUE/f9O+kP8ccXW7rjjLbkNoE4u8nU9yxMNPI/I8RQyhS9o3fMnD
EYcu/7B4ymQI/coa4oVZjkgLoERX9BnAV/KH0I3NTtjc2p7mE2IAjt5R5uZb
nFAppnLu7TED6I4VkcrhdkKVwgtXjI8aQEWd9xv17U7IqDKVoxFgAGc1Z1SD
JJ2wh3K8X4lqAPKKaz+HdZxQ6LDocpKZAQTzigTUnHDCRUky7ytpA1gd9XIP
/eiEtvQc54+N6sMzJ7YitlEnfHOT9eW+T/pwtO/RdP6YE3rdytrN9FEfvjTQ
RXROO2Fs+WnIH9SHtvy8qyIrTvj2+AWn2Vf6kOY21N6xzRnZJ7roZuv0Qfa9
9V5hK2f0z3Cb9sjTB9teZG1rckZLSmxZqpc+fNb/YSpCc8ZY+E91iqoPQc+z
L4V1OGP5f07Shh76kFw8v0221xlD79EcmF31oS6yUOrcR2dMObjleRqFyC/H
SjL944wvlpY954z0YTX2VdSr3S54+ECN6wNlfSjc674wkOWCeXSbOeYZ9eFM
K5ezyA0XrA00cypm0AdXh8aGg/kuqLmoWOdCrw/8pyVTfxe5oJFba0/HOhnO
Nk3J8j5xQd6neYxP/pLBzzrM3eKlCybUpOlU/SSD/NHLHS30rtjj47WaPEyG
8vtN+Y8CXDFOyu3w1moy9F2LCMUgVywfLlv8UUmG+TPKpq+OuWK9ctC5rmdk
UHPIW5oJd8WbtdV95yrIUM14ylw2yRVLmWRmtpaToclV5V/ebVc8vWvLDcs7
ZHjLedP+wrArrgRsmjiTQYaV41Fb/CzccEGooqcsjAw/XfZ9rrJ2w6F/PM/e
nCTDGPn3YzaKG7J7yFmshpKhZ9sRxwcubmjzNPKyeQgZCmpcb//2d8PDt164
/QkmgymD1r6EeDfsC7u782gAGW5cWfG5VeWGHkLiwqNuZNAuD6v9IO6OuT/k
L5YZkCF8XnM9RNodN6UO18zqk+Gx2gpwyrujRp94hjJh6erIZlRxxwk4QnlG
IgNnU2xnEbjj+bq/Sx1IhpH+84NHXd1xEH+1bj1Ahujl/EXGDHeEYC9jMWUy
1Ou0Kypu9kAp9kpexl1k6I5ODUzm8MAhyKaECpJhqM7u/hiXB55/zsc1sZMM
SzqjMrnbPHAuiH28ZwcZlGBFnFPSA3frcIkUbCdDHijumNPxwIe6ilbuvGSI
xMvMFSEeuPXU2Tfy7GTYr+c4cuCzB8bS1IzoVkmQmSeBSV89sHSts+TSPxIs
rszeev3dA1WYuY+IEH7wJNH30A8PNEksZsUVEohJPZnJWPHAgo2ZK4l/SMDE
lLQWzkbF15LTwWK/STD9fZT9jSQVFamfmq/PkqC6NFM2xYmKwor7k+O/kCBl
E90VWxcqmqiNbYgQdvby/7vLjYqPDmW/qh0lwer2fZ0PqVTc7SoVtvyZBBg/
FPjWj4ojHs3fgz+RoN1J6KHoSSrKfdluFDJMgncst/+rTKOiLNOka/U7on7q
A72xLirSFbouKXaT4OH+bLlLL6moZFOZ+aWLBAF8Cdz7X1ExSOFUWBbhz21O
I5deU1HKQ3OeiXCXEvOpA++peKQr483nDhIUrLo8SvtORfcXm4wK20hglbVZ
VJfeE5PUBoodm0lQ8spnLVfdEwVd698GPCcBq/3rnMOanuij87dLjvDBYdh/
YL8nktZN1iZqSCA6uTNsUNsTV/r4uP0JZzD0zfHoe2LNuOOsfzUJzvynPZZk
64msDS4WoZUksM/h7zoW7Il99bwFz56QgMGPlqV/3xP3DJ+jdZWSIOn0s3b2
Uk9s9m/VziLMcbn4T1+ZJx5OTRn2IcxffdbR/ZEnfhrPv7ReQgJZdkOBsCqi
vjunWvYStnzYlnmX5okxn7Iriu+R4MZyewb7V0+cInn8flJMAvXkrvQ+QS/c
YS7yxekWCYoEdUgRQl5o3tjjp0aY72H5L1ERL/y2Or6Fi/Cvt9csgsW9kHFN
t6blJglKJaisXHJeSE74d16FsHj94mkzdS9U66h/x51PAs4lIe82Ky/s3vCV
GLtBgnHvYJUXiV6YUfnTryeLBH9u+2YmJ3nhvvYu7VLCbGPOa7bnvPDFpI1U
CmFFH/2OqQtemLCPTtaA8DGfnZ4C6V44IFV7uT6TBP98Wi6fKPDCvE0RN6oz
SMB1UGBOrt4LS0rdX7Snk0DDv+FBxh9i/ofd70hXSKAqo3mVtELUF94gqUBY
6fvDsLl/XhjZX5XEQ1jSJx9NNrzwE/3yudHLJOCmRr9eY/ZG4y9BEWcITzlo
LfnweqPGm4jXjZdIkGdYpb1XyRvZr/iOWKUS/SJT3v3K2xvZ5A/ypZ8ngXTI
fb0QX29MyzS2iyFs3FhYJeDnjY++LN4LIJzqkl3oGeCNW//bkqFLeMfluMiF
YG/sblQ4MpdC1PfXTnF7tDf2qzsuWRN26vp73j3LG90PKwZJnCP69yjJ9Ee3
Nyr/LG9cPkuCE4cawp/2eKN0hdL4N8Ka3trFUb3eGF2iL/iGcJO9Bj3nG2/s
eBnzoJzwgLZCpdIHb5yUmTwdQJiOg1cieNIbDwY+Tv6cSAKbu19W5pl98N+y
suDbBBIsf469/0fHB7c0GooNxJGg2CnWvgB9sC6OZ6qdsP3rMwxmej6YKH6i
qYZwRXOMc76+Dwq8Oncrj3BwcRSbgZkPNuRv3+ZHeCIwIuCqkw8G72dvXIkl
wdBSsLxSiA+yKjN6KhJ+wUG9733PB7/+qh15HEO8n9/9AzolPqgQnHW4mHDK
R0PmnWU++ILrKPN1wo4P9lB7y32QXzPMIZbwvOUGv3aVD759/TbcirDs1bzY
bW0+WOM8emkumgTpOz46doz5IDB/2KRB+B+99dnC78T6uhqlCoS9plqexEz4
YEX7kL0o4T3PSznVZ3yQSdezbjPhTtfIloIFH+w7ZfF6OIoEG/mCypEMvrhP
u34mnvDB5EtuDky+OPLux9dwwt3BjOdVWXzR89iN0SOEr+tOf5vY7IucSScY
HQmrfa3JoWz1xZ/vVEcVCed0KXUo8/qixri+pjhhhoqCJXZ+X9SyHszZTvhV
Qop1k4AvxsfJJzMQVj+yHp270xfbfzVy/4kk+p1yvDR8ly/2siUX/SDMqPP9
va2wL+be8jf4SjhA2nnTHlFfVE6xXBgk/D8eItpf
             "]]}, 
           RowBox[{"x", "[", "5", "]"}]], Annotation[#, 
           $CellContext`x[5], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           RowBox[{"x", "[", "6", "]"}]], Annotation[#, 
           $CellContext`x[6], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Rx7V7V4wlHTpgTT2f9pydek=
             "]]}, 
           RowBox[{"x", "[", "7", "]"}]], Annotation[#, 
           $CellContext`x[7], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           RowBox[{"x", "[", "8", "]"}]], Annotation[#, 
           $CellContext`x[8], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           RowBox[{"x", "[", "9", "]"}]], Annotation[#, 
           $CellContext`x[9], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
aw==
             "]]}, 
           RowBox[{"x", "[", "10", "]"}]], Annotation[#, 
           $CellContext`x[10], "Tooltip"]& ]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"First mover\"", TraditionalForm], 
       PlotRange -> {{0, 169.005744259562}, {-4.561800159976225*^-9, 
         0.34321764122341575`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"x", "(", "1", ")"}], 
         RowBox[{"x", "(", "2", ")"}], 
         RowBox[{"x", "(", "3", ")"}], 
         RowBox[{"x", "(", "4", ")"}], 
         RowBox[{"x", "(", "5", ")"}], 
         RowBox[{"x", "(", "6", ")"}], 
         RowBox[{"x", "(", "7", ")"}], 
         RowBox[{"x", "(", "8", ")"}], 
         RowBox[{"x", "(", "9", ")"}], 
         RowBox[{"x", "(", "10", ")"}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwUV3c8Vv8Xt7fskZCMbNn73nvs+fBY0RIlCSlEVkiKVL5kJiGVSomySu6T
VQnZMrP3yB7J+D2/v+7r/Tr3nM/7nPe5537OkXNXbC9QUVBQfGCgoPj/s4/h
K/3InybU4mbBSIHCZ2x72UHELS4fS7urOkapVYFdHU3Sl4mrwOa5Vu5yET5h
b/o+2LHGNWBtNjRddInl2IeX/mWGqa0YAwcvJ1dVGcY2ylobNdWBTUkQG6w2
S7H64/oDe3f7MOqU+t9TYSWYROLAtG7/b2yNNWg3paEYq77wOQRJHcZqVFJv
8hwuxoRzHGJCp8YwUSuaEMf+91g3d1zO5t1ZzDNOWGleuRCjU+7OS1Wex/zS
o1gk5d5hqtbiBWr9CxiLhS/XukIBVm84NKCVuoTVqUJ6ufUb7GwHrctdz2Us
r+tB04x3PrbhKjfWg65gi7yPq+QevsYkIoJnrk+tYqNfeNWyV19ilaw53t8/
r2GkDJK6/LGXmH3mt0XehHVMLp39QKJvHhb1iWujVHMT454+U1zP+AIbXC2g
Wru7jQn+sLZdj8zFAqI6bxs4/8PseE+baM8/xVg4/jEkKe9gQ85MGddPP8V0
FEzZlPt3sfKg6nU+ixysvdLn4c3CPczZr4Xf6mE25mmRwtN2ax+b7tr+9Dc1
C7NUXWbVTKUA492U4hcfM7H00OiWsxSU8P0YBWGn8zE2VsOXGONJCUu0+rFP
tjKwEBuUuxulAuKn9oO/7R9hr3zuCQROUcPNDM4T706mYmulwgNPbGgg4Nhb
ypn8FAzbff/k62cagOPEgdcUKdivez0iPAm0YCwqEkpfmYSJdniN6m7Twvab
/WnTI0mYj8D+Mzc3OrieYDNw4t5DjPa1hGSJJj2wZCUe0b+ciBGXPk7359LD
Vvy1c63jCVimhmU+NSsDfDt3uSHZJQFT/eYnbzfCAEbMve6n6+Oxc2NfVFbu
MoEb1z9S17F7GMFur4t+lwkqDp8udDKLwzRrdYOErjKDwLiKop/nXezAs0+V
psdZoK/Ck82+Jgb7y7nl7PyDBQTzH/Jnbd3BxqPUKa/psgJbyo7/LbU72Kdz
xUbZogfAlKO1Ur8mGnvevjxVknIA5MJ+bRZwRGPx+opxDQxs8IzdnqPH/Rbm
JlrQvP6HDQazOD0Kj0RhDL4dsnm/2aE99+AFhtcR2N6rlR1FPg6IPdGesPwo
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
             "]]}, 
           RowBox[{"y", "[", "1", "]"}]], Annotation[#, 
           $CellContext`y[1], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
zVNurC5UdoYp9qNK+aE27PhpzT4BNWcomld+nm/Ujg3canznpO4MJTt6p+wv
t2PU7FMxT7ScoSvgPHdzSTtWUy91ZFrXGd6lnUl+M9WO7fqVD7sMnYGp0Xii
XbIDy1tDk442cSbv8xtnzNQ6MNXtS7+6kTO0WKe/mtTuwBItkz6pmjlDRr+S
7ND2DkziyK6kQAtnMGniebdJpgOLCO8/U77PGS5t2PVf4p92bPHJlYNrrZwh
tujLTXZFO+ZXpqzEtnEGdmF35dH/SL59lUuZ9uR+xE30C4Dku8KnZcnRGcw+
/G2xHmnDPm8SfnnA2Rm0P0s/V7rUhpmh12H36M7QqRmfuVu4Dcuj29OHGc7A
+Rnw/WlUK6Z6fkZHj0Py48un2C61YIn37ghePuwMeWeofzBmCyaeb9hff8QZ
Qnc5V/vlNmPhrZ0FcsecodGjoHFksQlbnAmK9fEj9eo/vyZNvwnzk9jkXXDS
GULw7yqLtEZsQKtk16oAZyg2WFNR5dyAOdtyZCjnSJyS8FhevR6r9eWbfHyB
xCLnwm1ef8bMrj+tmAwhcZ82a+2rKizvxf7knWHOALVZA/2HPmGqVT8CroeT
eGiPgnjyByxx5LpNVyTZLzDMYWhzESaxUlN52w1n4Codlsnbn4dFbG38dyaG
xCmZ3gFez7FF81OtZXEkdk8zmZ+4hPmxpV6Jx5PY1kzuZ8AjfCAk/wozgcTf
K3cwHubg1CQX11eJJH4+dTY/tRj/jC/qLj4i+z86Il/K+oTnzcPA3WdkHq5s
e/9BsAlXlel/P/jCGZJfxF76LNCGJxlcuaWTSfKzEf0vE3XhEacqzepyyf35
O2xSVenDF2OPym58R87ve+fDujuA+2WtmfIuJOsHO1e93jKMO/+0e8T/geyv
/OeJ+e0xvFZoJtCh3Bk01T6vdz3/CzdTu2ObUukME4/L922ESVzVq3MZq3cG
rx4sb/bkDL74je12uodcf2VC/+TDBTzPefWT1d+cYc7xgqB34RJ+vCHrR9KA
M/hJB2ed+rWM9xVzna36QZ7H7baqR/dzEwmGz4oYv5whYkvst85QHsLhtQ3/
7yny/F2dmOou4yU+JSXe2jTvDM3/3G/LH11JhKzb05mz5Aw11tsZabWrCOPo
cXnLFS5AP+c/swdbTWQEm746tcoFmN09U0zTNUSsa2dFpZQLUKf9Mjr6xAir
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
             "]]}, 
           RowBox[{"y", "[", "2", "]"}]], Annotation[#, 
           $CellContext`y[2], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           RowBox[{"y", "[", "3", "]"}]], Annotation[#, 
           $CellContext`y[3], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV1Xc81d8bAHARykpEQhnJTpSk4pzHzN6bcAcyCiGSkRZpSVJ2hOJLSXZl
l8qm4l4jK7OIrFD9Pr+/7uv9Ovc+53me85xzxci+Fm6MDAwMrEwMDP//pG95
yzo824KkHAI0ZuileG3eWpQam4/HmZqePGQtw34j9zRlY6swr5zFcTPlMvwf
vdiSM/Yj/tmFbjHdLsPvbTT7/16n46yksmpZrXLcsyP20cr1aaxHkWNrL6vA
g78KGRevr+GQhsWzFypf4aBLn65qOa/j+w9eXP019QpzbF/fcu/gBmZKpxid
FHyNjyvobTvY9wfr5jfZL4W+xkbK85yqiQxQP6p0/POxN/jpmRuC5yaY4Nnc
2ndycTUmj9YcWrjOBl0/+x4KldViY8u/n1n/sEGS2VqeSEstVm1QC9ntxw4D
sPXp5HAt5npc+VrPhgOK7qf6vOWow5XklzoZ4lxQ3XiOes+lDmd3zU+U3OeC
88V9bbkBdfi2pmLsxy3bYMxasDIkug5TxQvblma3gSF2pVs/q8Nb/Lvlcge4
gTNy9vXEah3++3RhQ3HndsjWMFsbYqvHv4a2t70y2w7fRrp6E4Tr8aCZmV9n
w3ZgvB46JYvr8UvF1pKNPB4IN8tjYImqx84/36lbntsBjO7mkmor9dhKepxr
8PkOUHfeRK/a3ID1XZmHTk3tABWrdNWf2xuwcofWpQgnPpCt078WIdeAtxbV
vsvT5IdEJSYbSccG/Hfi6wPlMH5I5b9zx9a9AS+K/DtVU8oPfuvibci/AQ/e
UWf/LL0TNNns5A9ca8AlvlWmDNsEgD/cPj+xoAHnP6GJ3tATgImIh+bBpQ04
4+vqPN8lAVBV+jrJWd2AY02PJMgtCYCcVM2iU1sDjoy2cStT2AVPP28K5fvS
gANrglQ0Tu2CgR2tvFcGGrDLgZJem75d0P6E3HR5pgFbeXTnDe8QhDcFLox8
Cw3YIGMh1MdEEBqyDRKcVon6tintvlQnCClb5f5xbW7EsifMZjnWBUGI6zNr
6NZGLBLpW/NAWQg8/lOuT+FqxGxzhaTCJ0LALjtexSTQiNHm3UynBoSA03hu
mkm4EZ/ddTNbnFcY6DZRcY0ijThXYV1nQE8YiidP1+vsbcQ0La+JBxHCIO84
mBot2Yg57GkxFiXC4FnaiGNlGjGc0ZPlnBaGu2sizcbyjTjwcnlzk8huaN0/
59yl0IifPpQ8fcl6N2hbKAkJKDXi/sL7XOo3doOI9zcRkUONeFvD5qKV2t1w
7QLbrQnlRqzZG2BevLwbwkVfXPJXacTnfows+MjvgdV7GRJvjjTifEaLBCny
HvC9KZL6UbURD+6sOzzyYA8oHvzBk3y0EfPsV+xJbd0D1wsbi+WONWIdzYwQ
WyYReCtJzokkHGLLJchzVAQOvYvakUi4wCf8VcsZERAp+SrjS3go6rtTdLYI
9AiobmMnvOOB418NugiYZn2Y8yTiS9h8M/3LKgosdpF/bhD7Vw+lPuoTF4Wo
mp0+/kR+dt5W8xXqolBubO4rSOQ/v8SumWgnCmnB08eiifpiLzbEBwSIgnxx
JmPFQSIe+4VRs9uiYHf28FqBIhHv/kFlhTxRENxPtXYn+mcnOn2FvVEUgr4Z
6Y3JNeKF/MzPk4OiwEz5ySFF9P/mYXvJd79F4XNi8bACcT61Bu+bLh4Qg4Oz
Z0tvE+fp8DlSwNlADI6vuipNCDXiRZcjnsfdxCDiqnE5MzEP0kG5bMvJYiDa
zt13f1sjrv930rG7VAy2fni7aQt7I3aK5Sso6hCDuBFTXQ2WRnwn44qxN4s4
FNirANtGA5aWVUvXExOHPhm1qOTlBlxf8mt2n5o49P/1XFn42YCXP5DjhvzF
ITY1LvnPWAN2XoRu6wFx2FEWOxr1sQGvRqzuPbQqDs/CNUSdGhpw/NaiQG7e
vfDl3NTOTa8b8Ls9IvzNenshofxaaAFx//br/7GDkr3gzxM4ePcGsd5dkre7
fS9wV0t//3ipAbs6+6ytTe0FU1LY9c7zDTghoC+lVEQC/nv4d0rPowFvpFUO
yt6QgEfcpMvTuAFzsiefiMqRgD9+CbfbDjfgPSGhRT01EsClunv2CvF+aFgc
v3RlUQIKbSg3vfgb8DWWN/sGT+6D05ZeYxLT9Zjbt9bnrqIkGL6/Vl54vR6L
9T/6PGEgCV851gYmw+rxQf0ohNwkIcHlN/8f33psvVeTeyZJEp5u67tXbF2P
k3saXmozSYH565FIZ5F6LAFNayufpYD14twfkYI6fLjwCcXkpxTE9uc57k2r
w7qCMS3ZbNLAYsKpz3q7Dnsu6qWbY2kQbHR/f9a3Dj97+lHjv6fSQHv09u43
xTqsur0txvmCDAScqNqV86wWG4584n8rKgc+pde4Nh+swVd2Da3YqMuBuvKb
jc3sNbjabKZ30l4O1j+U8A+PVmPFmk0pHPfkiPdnYOjA/Wq8I1VBxIpZHqYY
ui0Ml9/gfusYqdEpeWgN/jB4++Vr7PPhuOqmlwpwwF01P068CuvadRakiytB
LdOtJMRVig/OeN39dUAJ4tuqwiKnSvCeiM3n9NSVYEeTGYXWWIKXHx/BC7ZK
IAZpXfQLJfjJXFqnzi0lEJ/MsxeZeYm3RHstf19RAqsgoXyB9mL8sZQJjrce
BLUxnpnx50W4TC9NIo5+ENLcZtYl7xThrD6Vrd8mDkKuY1XlzTNFOHSTV9dt
xkMQJn/d5+P+Iixn3EEdOXII9MR4GBWcnuObY6nXr2cdgvjp8AhPn0JszKvS
3ROsDEZaWuybm/OwMfu3AINrytA4dXCb2B3CTAk73iQog32Q7mqmJeFf89ZZ
L5Thav8ZkY6Bp9i4u7DXZ0YZnpv2640sP8HG9/YNbnI5DBdtn2jPHc/Fxjc+
RQSePgyy/eLRliyEL18WmbhwGC6H9F8R6szBxgHDri0PD8Omc3XBXzwIW6aN
JnYdBtdFm8fLSdlEfnxTcroq8CExklTM/ZjIr/F6upUKOF+z70DDWUR+AbLb
KSqQYq5/V66Y8K8O7+VIFSjkdZXaZ024++ZsbaUK3D4rdi4+I5PIb/Oi9f4j
cKHBUHKz7iMi/uLfyB2qYJ+U4eNdkIJjwsrlnourQpHvq4lgtxTc+C3UblBR
FYwy1rMlRFKwWsWmYjVjVQiYnvN0TEjGsie3uf2+qgprZr2V+64l4S1PZJvP
rqhCb3/Xgt21B1ibe3Ylk/koqCTG3F/Te4Avnn8h0cl7FHY/vWq6n+MBXjFU
jTigeBTG97epaSYk4vGfOkrfTx2FSrlR6rb/7uOGY6QHbvSjEG9+qNpp4R7+
+1iiMWHyKCitZbSkvLmHj3FO/mxYPgr/vj6wd7p+Dxd/PWMgznsMdr8z3OIs
fg8/uhL2Z9DwGLwrKjml5xCPI9oeUOzeHINdR8/tGRmKw0fJbQcMHx0Hepwu
086rN3FjfY7ZtcLjINEfIX9K/SY22xvuX1d1HFyShOjuyzew+5jcyyOfj8OY
2+cxd68bOMH9uooEmxrMyN15qucQi2e9tNX/BKgB0hCi29jF4PPNQs6qUWrA
P6GwtUcwBm+W/xURcFsNFEI+r84ORGOhH5m1U0/VYO/V+dIht2is5/tP68uA
Gtz1ZPieE3YNZwVUGTw/oQ6yPi0adxqv4P2f7npPW6nDdpX5ytk7V3CFsufN
fWR1wAYJu7scr+D2pZ1tKWHqkCXwullk6TLeCA4yj3mhDgy1pPqS/ZexTZii
HUkIQaVLSHJpaRRmv5rrxjuHYMXL1zLoUATON7in6fMHweHMjizqUDg24L4o
8pYdg3b64Jrq7XAck2JPOyeNwaBukvXm9zC8uZjDmE7CcF9UmT/p5QX8d/Cs
cuYnDHeSyx8d8zyP07Ndtq+NYDB3rpQL2nseq3sZzVrMY5AX+uXjNxiCq9d4
rBhZAfoFuxpybULwxtXvnMTzD6dNFLZ9NQ3GIakZUTtPAsRk8KiUUIKw3j++
n1pUgNb7n7ylZYLwTvJNZz9vgB4ZOieeC8RlUuePfzgPUNT8j9E0PBAvFVss
hSYCvHn0+3LvowB89gOz52A7AJXP+DLH5rNYUz6sh60H4Mf5IzsXu/zx9jsL
OkcGAcQu0MyoWf64yOqreNx3AA1GZejV9MezXyv6NbZqQOBVxtiV637Ye9nb
LEdTA/By785SlzN4xOp7ha2+Bsx+Fg39xHMGO7z0EWMz04At5RIKr9+dxnp+
pxfOnNSAUaV/a3TF01hy+kyCaogGxJUPV8tw+eDhAf/e5kINQGcWch/OeGI7
tQWIKCHWQ57KUfI9cUfy2TzFVxrwO0aHrdfTE1fbBoTef68B+9Z2dVRMn8Kp
nYHCLqMa8OZsbIbooge2fRvsuiCgCb7Gq2NkCXfctnf1fbaIJjCz3D2x7Ycb
1r0UomQrqQnLLO+sjMrcsDI+z/j6kCbwPXJ542/ghnkqQ7OvmmgCE6ll5th5
Km4tCJ8UuKIJ7HIizx7NkbFWwmU/PKcJ11eve35SccV2clwiHUua0Jo697Fi
mys+U/+w1XVDE3pWJs4zdrnghz8LZS9t1YKillvMgUdd8Hej3rHGvVow8FDh
o/12Z5zIvN/ewE4LnA9yeZuOOuL/UstZ+5y14Jne1bW0R4649pBmmbebFowo
/MpNdHbEMyRb3ltntYDpVjaK7HfAUB3V2n6TiBexVLv+1R5Pn/uiYV2nBbMF
29p2bLbD/zhJP781aUFTzWFHxWZbvCNnJv1cmxZ0yu7MocXbYtzNsPGgTwvu
M6ye+7TXFicckCujL2nBkSH/A6ZGNhhNRsq6ymrD1f/8r/CUWeG79jK83ve0
QS2mhNVz1BwrPq7OiE3WBtFvuonuZea447ulfH6mNnQXS30YuG6OuS5G6Ew9
1wbNlzfXDx40x7G53cEeLdrg+OF7kXGMGb7yK7yfwqwDBo2JUUnxJnivOq/n
ZQ4d6Ap76P9A1wTXX3u6lMWrA0P7xHaS140xg2A314iYDmDFinRLD2McDtIa
rkgH3gfeo5D1jPC5W105TsE60Mugsk9zvwHm6/E4GBahAzz6BU0MP/Rxieif
6pSrOtDiTkvwLtTHCy+leun3dMA25Ee2uqI+9qWHsdkX6cAnAx7LFHU9fEpK
ytd6SgfocqZvrwbpYse6C6omjrrwbtM9arSpFs5iEar5RdIFi5nuf+ESWnjS
sEon6ZQurOltKh78rYnPfVm1GAvShV4W7y30HE0cPxN0OjROFzTJ43uSGTXx
Rz6/rNy3upCr0ffHqA3wdsdtMkYtuvDa6fcvch5gu0fPns936cJ/oWVPOq8A
Hpf98VptSBe0DN3nS9QAM4JXT9eaLlBs6JabSBgf86Jy/DtwAraXmBadMFXH
Uc+Z7mWrnAAukogGbZs6fr+YtctA/QSYaDX5MXWqYZvIYcn7Bicg01muRtBa
DZ9NcNaQczsBY/P8yRLU4ziv2u6cbfIJ8Lj5mTMg9SgW4DUeer5ZD+5JeJd4
nFbBU2wr2mPsepCQo9Xne0wFVzFm5gnw6oHxR0GndVYV7LSweDZKTA9uVjHk
JWYfxhmdqcyWSA9qbI2Fy0aVsWTcd9nlYD1oiVtrtQ45hFeiE+/IRurBLYM3
deNGh/D7SFh0vqYHAuY7WMbEDmEv34Q3TQl6kP4uklWi9SB+ZqJmlvRCD+Z/
mMdnSR/EhzlvBqnN6ME6b6hFwoIiZmFWofst6EH3g6LyS62K+MvGV5TzWw8K
n09ptj5VxCHfD23h2qIPosaSomddFfHr5r7krxL68DrmztvXTw5g7Vi52kvO
+sAjdCQs6P5+bMHazPahUx8+bYyPvhyTwXVHIkv7evUhvdAQ7J7LYMVTh1xn
v+qDrurpgPBQGcz5IaWUd1YfWqmK9do8Mvh9rI+rM5sB/DdQWZNxQhojLq6y
X5oGkCbp7mDyXhIXonpXFgMDcJm7L+KULImFfc+x7zI3gA866Vk9PpL4d/ug
K3IxgKz2myd5eSVxyd3n7NcvGEBQgwJLBHUfluUzJ+0pMQDJW/PCewUlcJIO
M4fSKwOQ1485dHVhL95yrrJMq94AFsl6S5rNe/G3L2Icnh0G8NBsnLk1fC9+
9HCh7OV3A+g330blnRDH/MIJHPr7DEFjE0t25QcxzLi3pzwg0RCWvHIzY+NF
sIDpfSeONENQtn/ScdRRBB+4YLkp57EhaOUIy7tIiGCn7naDL0WGEFVhXsda
sQeXXX4/oNpsCM7nKN3Px3Zj77FKpr//DCH7CQ+brYUwvsQd8jSRxQhW45ZC
B8WE8UM1FeMDnEYgvWHo0DIvhN8lFCe6ChrB5wzWqp54ISyq859Mg7IRJPNv
nYynCeJPOammMZ5GMBhXYPYxZBee7nRYFPUzghecHvL6Jrvwpr8CSZXnjCDt
0to9EYldWMHm/sj0ZSMQSSs3au8QwDEst4OM042gaVKwTVRBAKt5RKbwdBuB
w7NxEFrlxznS5IlUNWMYSDu8JaJxB9ZllfNq1DKG0S2X5Wof7cDj3359nzEw
hhSSSq9B+A4s+fjqwjF7Y+Dub2s9emQHfro7709vkDFwLL2TiXjGiwt4fvLy
PTcGr/Lu7Ef5PNhoviJRrcwYNP9EOnvf4ME/2qN2Ud8YQ71ifGaEDw9WuMUr
8rLZGFpdJxsiDvDgItYjsuaTxoCVDB5WVGzHJRvhcEvMBOjqVRpHv3Bjqz7d
hhJpEzg2zJk4V8WNlyq36fYfMIFcX2OloQxurBKcaSiHTKDUOE7Nz4sbV8w3
2nxwMIFkrn25hozc+PU4+2nmBBMI59+vhM9z4caOpKRwFlPwK/JyLMljxxz/
+fDLcZrC0Kfa9PuX2LHVVXyvl9cULqRWBzU5suNvR7/dPCRmCiq6R72Et7Fj
lseKF6eOm8LMlV8m5PNsWC+oyd3a3xTajzY3kx234tZdS4f295vC5tM79nw3
ZsX8i01F9BFTKH3jPdWvwIqd25L3x0yZgp6zRhozNyuevQRSo8umwAl9D/50
seAtyzq3WraYwUbVZtMLjixYxuXuxUt7zUBYZUuw/jlm7K0k7TFrZwbGIdGm
gh1M+NNKYsJNJzMob/QMkC5lwqiauV7W1QxGNCROeyczYW7DUWEPDzNY4MyP
vO3GhEuo6V1fg8yA7WmxL/7LiDce7ECd8WbgVH11/q8qI779l4GvpMUMHp1i
LyZ3MuCVRl9Niw4zOOZwUMH6NQN2vTHo+7PbDKJrBPp8nzDggwKvP8r3mYE6
n/pu4QgG3KMUfDFnygws1BPStPczYFG3HzOJLObwiulv00+Jf6i4mVZ/Hsyh
gpH/jNrMBvJ6ZszLqm0ODB5p/yw+biDxu3WUhBPmIGfdxJ2bt4HibfI2Pzcx
B4uJ2yr/Tm2gs8MhumNO5iBDHNyx6XV0cGXnR5Pz5tD3/nJqwfIaeilu07m3
2BwmU2JXMg7/Rj7MH8VelJqDrlTzB2Gh30hiUv0sqjSHlrldc00Mv1FC4T5e
+1pzOK46cjCvZRUFqi5Z3W4zB9u4ROEo91WkbJLQuzptDoM6+abvM1dQyfmu
r617LUA+tluTWWUZgYPh/j1SFpBpDgGzYsuo5Vhj6BlZC+AOE3u1xLmMxtZL
+bYpWQDtN9x1Hl9COyKSDM2QBQgmLdokPVxCAZdcy7vsLIAl1f91HuMSOnhj
9nbPLQvoM7iR1zr9C1V7e/RL3bWApe9OXvL0X8jAaEgmJMECdrxxFM758AuR
ObsaBVIsYJ/M0oGxp79Q/J3SNfunRD5Nf27Hn/qF5u+FuffXW4CoXBdz1PcF
VJTKhoZXLGDadEBcmXkBRX2JWQtZt4Af/oH/nVieRxbcrOXc/yxAMWhC8OzE
PFq8zKQILJawy6g/k+3jPDrivSGWscMS1gNcVjXj5lH10Vnmk0qWsOL7hi1R
dB61fuls7fWyJN4rtWuapj9ROrdZrN8ZS+i+r87zUfMnOmPQprvlrCUIeSh1
UFR+Iu7qjzVHzlsCJ6uTduvun8gqp+FFYrQldFpRwyfoc6g/oPS+VbYlPOvj
YaGJzKFp7qSTHQOWUPEabftV+wPd0RPeKTdsCe5ls4n2hT+Q8sWMjqtjlrCB
tXV7kn6g8LkcreMzlvDqqbPQzoAfiLutWCZ31RL22DelZEr+QEdutCxd4LWC
zMwrjq13v6MrzAy3pfSt4NP7DR2d8Bkko375xCUjKxA1n5sd9plBbYEsmwZM
rUDkju7APacZtHOMIzDexgqUnv8cVVabQfn1uxz+UKzAc0cXp/3GNOqIPCTZ
HWEFQWKJCgEXp9HuNffqiBIrqC15E/vr4RTiNplLfl9uBYKZF5Rdb0yhzVnB
wTyvrGDvrvak/vAp9F0/RjG3zgqipd7qMlGmUFVSXlZrmxW0nTfgZ1CYQnZH
v18TnrKC8O7fu1+8m0QJIf6mVbut4XKVFedRpkkU0/JbbrOYNXD2yDSFr0yg
MNFLW0wkrOGf6tDHjpkJRHkfXzcsaw2irT+fZ36aQAcFSg5tVbUGduWTV77n
TqCO8uWddhbWUGCyJWvDeAKxr1wYWrpmDfel25ayc8aRdvZW+ehYa7D6Fxr4
X/I4CjN/ECxw2xqKYkk1NXfG0ex/xVzH71tD3qyxKHfoOOpwnVK7+NgaSpJX
2M1Mx1HiR5sktlpr8GzNUTTa+IbE05UsRH5bwyqL16Z+l2/I0bAmrWjDGth+
Gx8Os/mGElaNpjQYbOAr6yivtPE3xGx56iKV1Qba/n6NzDr2DU2yZjzL47OB
hHESXYT/Gyr052BXPmgDGdpe3bLtY0hVZ6JBz5uwf3H2L70xpP3zPEfaGRtI
JSfd8NYYQ+YpHNbz/jYgNJvoPnN0DHnNK40nhdiAcUVrGaPcGEpLC9syc9UG
OCzn529xjiHG5e3Gtx7ZQP1NLRPBT6OoOVftS+dnG/BpXfv8230U9Zq375Gk
2cDED00dd9dRNLZB8gjttwEPyuYWmv0o+msRvSo+agOizPyLn41GkeK/TsHA
nzbgL+NxQezQKEqw9XDhZ7eFbAn7tnWGUeS8JX7SAWyhyFm93i9zBBVxyD5a
1rKFgc/8ugdSRtCm7fW28SdswdPzcNRiwgjK3rXw7oOJLZzs8vwWHzOCpmUt
clRP2kJ1Xsj6br8RFGzMQ+YPtYX3C+XhUTCC4uLj+zpf2kLc4NaShPFhNJIo
e+90uS00KdVR5YaH0aGUeoOtr2xhON3qfVPfMPryeKES6m2htLjCbHvnMNpd
avHweYctfESb82deDaP8Hh7rWz9soTPhsx49fhg1CN9r05Oygy8P5Xj9dIYR
VV0xr1vWDvYYz3b3wzDa7Nx62VnBDhSXDFVM1IaRTgbr0cDDdpD1/c6s+qFh
1CQW9jhDyw7GWPjyzMSGUbOkW8iyix24ai9Kav8dQt2KR8SzH9rBhwnLsehX
QyjQ/NOGQqodiEV3r0SVD6EdZ/17KjPsICV0KvDiyyFk/fK/m+25djB/sve/
2P+GUM9h0ZW1Ejtg76Sc60oZQn3HtraYd9rBEF9bsUT4EBrV7gv6t9UerlhV
mjVqDiE7SrixMac9WDxoTAjFQ6glSmRfCrc9VPfKMCmrDaGSasonlZ32cNqW
0aXo8BC6pvr94BkJexDXnuFplx5CsvJ/5vqRPRjpT5Iztw0hP14Rr6oAe9jD
kpo3Xf0VbQyTnYMG7KH0zjmVJ1xfUZk9Ww7bsD30PfWOZt36Ffl2vpjJGLMH
heJB09NMX9FILcP5jzP2EMG/R1R/dRA1ZaTfE1mzh8XCPQUwMojiT9Lff+B3
AGzPPipZPoikaeaH9pg5gGB+ieUN6iAaMft9/qWlA3Ta5T+KdhlEKe8f1erZ
OsCmTYLyMQ6DiKtizjjA2QHmq3V77psNol+Jt06993GA4+cXfEbUBlG11Ye0
s9cd4OalQ291+AeRZQdsaap3AGP+8y2SbQNoSOeHocg7BxhebKQofRxAZ14l
3Qn+4ADkCwb6Gu8GUEzuAr90hwNMGVy95Vc9gKrDsvddH3CALZHGQ1ufDyBp
mS1ahqsOsHivsY/r7gDaiGoPb9/vCHo7tWhWtgPo+sqFOiklRziiyNrbaDmA
+E9LM19UdgSLUbL0YbMBpGQXdVPxuCNIV5zm4tcfQO4Kh1Lu6jkCz5aawU/H
BlAHPbHCkuIIB75WX7y9ZwBlH3L+1fPQEeKkzs12T/Sji2+3OYikOkJqrLNo
2lg/crKtq3XPcIS/49ZD3sP9iO+CxO2lHEdovuHPJtjXj67VT0vzvnQEoR/C
guVt/cjDPNjZpNURVCccWhPK+pGsb9yHxk1OUEZrOHgsph8V5ddnvPByAoVZ
j8PHD/ajzvvng+CMExTkNG8PPdCPFi4qGrb7O0HXAZGUV/L9SNk2ffl7iBP4
FVzK1pXqR5VMocbS0U5gsP0TChXuR/VOSuvpj51Afzlm0pq1H33memRzs98J
Tu8/zv11sA8t/7aRFxpyAhdFYU2f/j4k8I2TMX/UCW4hgeF1Wh9yeHWhsGna
CdLDSO7in/vQoIftZqbfTpAQqXr7ZnMfmqzlKj7PdxKaHq1afK7oQ2tnwzk9
TE7CYvhVqd33+9Cc49GhCvOTENUW80TgXh8a014qZrM+CTd7nf/w3e1Dbfyn
7Z45noTduy7L8t/qQ1lVTo+XTp0EOaOCWPmrfciQUe3olcsnYeF8FPlFUB9K
vbtGzaw4CcqLKn5Cdn1IvSj4dZ+4M7Ccvkq9Kd6HQhZU/wZKOoPxi7d7BkX7
ULHyGuaSdYa5B5d2HhTpQ5KVYQ2g5AzaRmcbh4T6EFd91Mcc7AwHzGU47PmI
+rpv9Po6OcPWliWL0i19KGIlY5Ep0RmElCg/rv+ko4qjJJW0JGfQeeQcwTBH
RwsXxENU0pyhkPKpKfAHHbkz5KyfynYGjtDUZ9bTdGSyNZ+xrdgZfkymLS6M
0tEeoRLuh+3OoJpZ5PbwCx3VoPfy8ltdQKCA7zHpFR21RNz2juFwAZOiItRa
SUf0aqv8sW0u8E5GleV4BR0to2GpNH4XuCVSxrWnlI4U8Jo4l4QLNOhqvWR9
TkdqkbUkLykXoKi9KIktpCODmmuP3sm6gKov3+3tBUR+mHdPpJILaBn4P5TL
o6N0LL/rJ3IBMRajysTHdFQQuWBrpOkCxXwa0iiLjqpqKhKf6rjA+sAtrplH
dPQF6+wgGblAkM1Xbpt0OuIE521d9i7wdUKLFphER2EQx1wS6AL6X18+C4uj
o9iLNtrcIS7gsZP89vQdOnpYK3zZ5wKx/zOKIfk2HZVAHsO+Sy5gxfwlxPom
HX2H+vX7d1wgqyRfjBJDR44ai/PB+US9Q5Xy6xfp6Jim3eDxIRfY+f3CTWY/
OnqQvheiR13gMlP24uwZOlpcm83sGncBHc+IE72n6ejZy6tunj9c4IOIQWG+
Nx2J7Xv5PXHNBTI/VSXbeNDR5s3Rf0LYXOHf8cnnjC50NDM+zP5JwhXOJz+u
CDWlo8qCB9Kx9q5wT7qhivUQUQ8rw11LR1eImTrht/sgHTmQT/0WPukK5Wut
vw4p0dHGzqMfn7u6whvOQSrlAB3BZbr3Zw9X8FvmnGuWo6P39rufi55zhTNd
BY8bJIh+sjw+XB7vCiKyvU9O7KSjJyT29IsJrtCyymR4jp+OQl4HsBgkukJH
bdCzHD46Ejyr3dOf5Ar9anJlLDvoyHngWwhjpiuwfht438lNR99eSr82fk6s
31D/doON6IfrM82xZlfoFb7jGvOXhp4fS5K50+oKkuHsUfQ/NOS14wr3sXZX
OLc1Sn0/4aEm+8E7Xa6wO9c29tM6DTUrMIcep7nCjbniANnfNJS14fgiftwV
rlT7JS39oiGzh1tFNTaRoGvufKTiNA2xn11k+c5IgqKHR9pTpmjoneHXH4mb
SVAp7r9lC2G1fyWvvrOS4K5h89HRCRqScne1fchFgiNbtfOyv9HQ30Plt+eE
SGCwHq1tNUxD/7VT/6SpkIBtwaXMi0ZDW2y6UnxUSfBMoj92upeG3PvxsePH
SHBNNz3Gm7DolGBwrzoJfDt4mPx7aCiRsfMnjw4J4vXjt8Z+pqGLh9XHoi1J
4K58n32pk4YGX+VfsrEmgWg4Y1c04eOaAmL7bInvPzjQJkR42eTXyXoHEmhU
TXid6KAh71N5PRskEhxgyjEsbKMhmxS+Zn8/Ejxg+WtX0kxDJWKXPeEsCV7f
Wut1ILz96U/WbYEk2PNBMYWRcEtJs3ZBMAnUP5+asv5IQxptUdXjEUS9d/rr
2T/QULrVnFPpRRI0bg7zev2ehjboTuuXL5GgWiTe4QzhsokjqmLXSPCpGnZ+
aaIh+U2zLxxvkWD+R5hA6Tsaio12NJO9Q4Ivfbm7/AhPcH6YXY0jQbjrFU95
wlmC2XKJCSQoyw1ZffqWhnYqO+R0pBD9DxCaetFIQ4FVTVoZaSRIpZQHBRPu
gsMjpzNIwNyvZYsI3zTmFmF/TIIbA0bCHQ00xOjx7qFOPgne+S42MBGOvlD2
nr2A6GeZ99SnehriiMtd7SwkQXfNpZNPCPNVXrNzfkG4/LKyGWFp9hMCwRUk
EA8MLX5RR0OFIkf01KtIIL8tiXSL8EFlqRCm1yS4QKEveRJWO8nae6eG2I9S
cG0PYdPnTQ+eviPW243nztbS0KeG8qYz70lwRca4VYuwXe+TFeWPJGgXoTPw
EiZvirGtayUBVZAjuKCGhs5Z6u2kfyLB3l765pZqGlr3UD3x6AsJOrPNF+8Q
vhgmHezeSwKVi8o2FoSv52zpWegjgVNqYWTXGxpKXXmfyD5KgpK14Lba1zQk
xlH5rnOMBAWt9mUhhHNF85YfjJOgTeza/gOEn+tft5GYJkHrtf29D17RUH2K
Pr/6PAkMP9VdtquioSn88f6ZfyRgZbR2Si6noTNWVW+VN5EhLHViSo3wwqn8
pTVGMjCnRcFgGTEfd2Oto1nIcGPrcdvdhLnHDPgecZKBSaztzq0SGlKJaU7o
FCKDc9sH66MvaChHCGmd300G1uHi7M4iGtrxvGheVIQMhw+x7fQkPP/5vomf
OBmuirzyv/+chgr2um7ZJkOGNpqs+VghDYnXLF4wUiFD46iH3sl8GuJa3k1p
MiODSkNMUkcWDYVfj9vua0GGOitRJkvC34WZavmtyMDtP/LjUyYNfdCaFHa3
JQO5O82i5xENXblb/GWzMxkKGZbzv6TT0Jr8CQNNbzKkcVhI1ScT80vxU3pz
lQwjLlPtrvE0tPrY7UFMNBkqPBQett6lIbYxhz+W18nQ8L776DHC8lSdD9M3
ycAXfECAN46G/KmCJIEEMkg1rt9uv0WcL7UxLiCLDIGT/2Xev07MZ07lMsom
Q3bokxN8hPd8e+bElkuGTyJv3BJjaAjckqQz88gQ2XtsJTWahq66naltKyID
Z0jadNVVGtrmLvBTpoYMAQIzM4cvEe9PLqfNUi0ZfHax0D9GEfM7zvi6tp4M
8YxGi66Erdx/RNu+I8N/9U7JcRdpKMm9XuRqKxmkfZ9L/Ymgob0ePqZDfUQ/
xJhFWcNo6Mip2meJq2Q4oNhu8uYcEU9K9Z7WGhl0Z7TfBRBWGH8e/HOdDDmL
mjWyhCWoGWDwjwyvvdwkk4OIeXCN6PrDTIGqA+InIwJpaNpWbZnKS4GUkNPs
9meJ9+ZEhfohBQrQRgbIameIfFgUxYcOUGBv4+id9dM0lPD2CcstJQo8LR+o
ryJ8Q+tB+7gyBb4aH5c7SjgEnyMlH6dA0KULSYd9aMj8iPLVTfoUGPFgvCHj
RUObpYpa2ikUyE/fxvPNjYYkA/M1A90o4Cdq4JRJWL8uu0LAg8hH9tpOZ8K3
HZOySV4UuJLpNtxLpaFdcZfCfvlRQDsl6G03haj3t5X8zggKFDUHjQ2SiP10
TbNeRVJA7rSTQRbhwHv6Aq5RFIh73S7uTrhyP9qcd4UC5xRq5OZcaUibLNV/
7AYFHIYCH7EQtm/+fcP5IQVeXO+RNXSmoTCBxU1MyRQQfCz8lo9wutts8JMU
CszdOd89dJKGxv6NUH6mUwAKB4xCCJ9Rbjl+KYcC4iGMpQVOxDynpc/kFBO/
d3Lwk3Mk7v/0Q5JBCQVydYps/zgQ83/kXs9sKfF96bySdsJcXdENRyopYJg5
3h7k8P/++6d8qKEA67jW7SZ7Gnrmq2X4o4UCNu/2QpQdDQV41oaUthFek9W3
JaxKUc8N7yDqPRUxuJ9wvc2RTVyfKNAuHPOs35aGetTlyhX6KHBwc/IEEE49
8nRsuZ8CdTLnbIQIk5X28dQMUqC2L9li2Ya4rxIip01HKCDDpfarkDADB+9e
vykKOLaY0fYSfsscZ6Y6Q8xH0FgpI+HYfxwRDD8ocHfjteiINfGe/GKhxf2k
QGBHVWYWYRn62u0XKxTYXeBkJUt4tjv49fnfFGjyjM3lJFzSujilsU4BI7vf
0fNWNITqZrW7/lLg70+B31WELZ6OrC0wU6FeseuBFeGdWS7Sr1ipsJoQ5qFG
uD+l3/ryViqoh1GbJAi73/lSxMtJhe1/vFRXLGnowrmP7so7qJA48XYkizD4
nUjY4KPCpivtR+4QZvFqrGvcSYUXSzx7wgjHnawWthaiwu+ot+m2hLO1i7uC
xKkwdtIokI+wJzrAQFwyUGh8YMNCWEG1YD+LJBUWzHc1r1gQ8yaXG5MoQ8Tn
VPfuJxyxb2+ZsxwV6CZ7HrQT1hZ5NCq5nwonhl9aNxBu40lG5YpEPaKhNwoI
3+PY6RN5kApNq+cYswjbsSQknVCmQnhKXtoDwiO/by32HKECk/4H7UuEV4ai
8lcRFWRrDEKtCefaR9lkARV8Jy2eGBC26brIaKRJhR9Gx4sx4ZKGSIcMHSqI
Noy5yRD2yw1n0zWigpKOOHndnIYmvc973bOnAiX3WnIyYfqyn6xCINFf7h8+
rWbE/5+v35eeICowhgiSagmrTvpeigqmgt3KhNVLwom0M/RPoVTQUk3BSYQt
X/vEXoiiwtDjaeRGuCXq1PT721TIlvbp/GtKnM+aR+LZOCq8uyyLFgjLBnho
CsdTIXfs1KtvhGOo7sm+96kg8zJtpoWw9gmqAX8qFZipvpBK+A2Haz4ljwoX
hRaeYMISS9096D8qKF7xtjpEOHbgBLNgIRUOf8uSlSJs9+yAa0cRFV5+lXHY
RnjB9B+fegUV7o0UzA6bEO+BaoCWQBUV2I/J8vQQrhWd8Pv1igqvpMW9Wwjf
mm9rzquhgoqQa0M5Yel76VH8TVQouiitcpfwnQs8z+ffU2Fz9W2FGMLLlGv9
LR+pEKAkfyqScIPymSOX26iwg20m+wxh2d0jVOcOKvxLXM93JxzHbBN/tIsK
5/LEVp0JO39R/zH3mQrnn908bUb4bfULweYeKtS8r32oT1j+yT69XBpxHhWT
3FqEfwdzPnYaIOaRuvBDhbCra1THka/E+Rg0WCsRfqe39IdnmAr7rdy55Qkn
7Bqw+zBGhQSJTVfECa9vMr+WPU6FrzyTeA9h8nTjy8hJoh9BkVaChN93qQ47
TFPh1yBq4Cd84FUBl8p3or6xtFu8hDduJHh+nyPu0/Zdx7kIf3QKa8z6RYWc
lMJTbISpfw1Dt61TQU2DL4CV8L8MIcUwRjcwbalkYyecrDHzbXKrG5y5+fcE
D2Hl0aoU6+1uIHI2I+T/8RlLspbZ+dzAP8Xj7nbC7VdizesF3ECtSpTp//up
nP4bkSboBiVeu9P/Hy/V+mxBiLAbOP+n1bGFMBMap1nucYPPD0aSmAl7STqw
HhB1g1JD/fVNhP8Hkxh/EA==
             "]]}, 
           RowBox[{"y", "[", "4", "]"}]], Annotation[#, 
           $CellContext`y[4], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
lRt2SJ/vaGwlQcDZ1pCHb9xwrqP94F3CCm7KFeF9bsh67tXVEsLtlsep2Ybc
8ORSikcy4WFl8UapMTecLG9NciNMxcJ5yG/WDRXLLUx3EDa79XlzmdYdPx5S
/nnhGQk2JqKqfqm4oyC1zTG1FhJU2ERZlqA7Mt22fqZI2HIgcpuBmjv+VUw2
lSVc//yKbZGmOxoVWaTxEfarCGfSMnBHsmxl2NZTEnzzvuSVYeOOcereqy2E
R9f9xKQuumN3tsd/6oSfsjhXud12x6q+rAnXJ0R/1gaHVe64o7Wf5EU7wgnj
2rR777pjs40u2ynC1veknftq3VGu9ZGFJuFl4y0u5UfuyDLKLC1KWDSjMIq7
0x3D5I78+vGYBJl7xq27p9yx8B+tXiTh39SmMWXT7risGX31EmHXuY66K9/c
sS6xrdWfsPTjarZjC+64o1tGy4MwxT6so2TFHe0Zz4TqEd4q2icTts0D1dJm
L3IRPh13zcGKxgPZhZQn2Ai/8tueKEfngdzTgcYMhHNV579+Y/RAPvIzjd/N
JJD/0pxnscMDFVs7EyYJ5/VIdctweiBb+A7pMcLb6kvWmbk8kF7v5egQ4V5S
gmk7jwcOsavqdBE+du5fRMFeD3Sh+8nYTjjfwr86hNcDIxlGBh4T3q4y/d78
gAdycC2WPCTsJWxLL83ngXNi4qE1hP8H24O6Ng==
             "]]}, 
           RowBox[{"y", "[", "5", "]"}]], Annotation[#, 
           $CellContext`y[5], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
hP5T2P8DfaZFRQ==
             "]]}, 
           RowBox[{"y", "[", "6", "]"}]], Annotation[#, 
           $CellContext`y[6], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
DzNiWaw=
             "]]}, 
           RowBox[{"y", "[", "7", "]"}]], Annotation[#, 
           $CellContext`y[7], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
3/8B1ffdeA==
             "]]}, 
           RowBox[{"y", "[", "8", "]"}]], Annotation[#, 
           $CellContext`y[8], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13c81d8fB3B77xXKjmzXyCicN6Iksvd2pbQUZRSVlhSJqOxkpUToe+9V
SVxCtkRCVkYoMjN/5/fXfTwf53E/Z73O+3M+Ur5nbf3paGhommlpaP7/28dS
xzz8u9nQlXuFQTHqOVqbd5AkxhYh70HrBv2pIhQ0kmSsGFuJgjSFPqUav0Qv
+srsOGObkGoe9QpD7StUVhD834GUdvTfvrc3i6dLEPcIZ230RBficdtB1x1d
ihocjfu37vSh8NajN1RiXiPZB/2T+t8H0OSrEwQCbRn66P82wiBlCLGPFa4r
h5Qh8WyH25cmRtHUL98yPfNydOR9Tpxowk8Um1ET2fKiHEX0/Umi6E6ga/mt
KqdZK1CPQGz2yp1fiH9bP6TqvwrEpNGTn6Ixg0KXVau+M71BWkd3F+/9PotU
WeXHx2zfoIYDP/r1UuZQ9/GE6ks/3iCvLkbvO4HziGOT1f+Y5H9o2Ud5tNfw
L+qRYOpa8vgPyV4JnwqdWECWyHkgs+0/9I4z+9Snt4vor1HoG0YGErJPr/8j
lLCEpmcNJwr2klA0hX/5je4K0lnZtyj5gIREDu0LZ+RcRdObluV6b0mo9Kv3
hv3wKvrwtbafbZSEBheK6RbvrCEGK+EgfWUyuhD95aaJ5zoSFHjU12ZJRhy8
6yxJGhvoxjq59NppMsrNkro3wrSJTjSq7gu8S0b7VQ9xa3zfRLt33tpILyCj
zndnEq+VbCEReZlslRoyCrRIFuy4vo3O7uwcUftORke05jl1U2jgi0+Kfi8L
BT2+dKPNi4YWNPV7mvLEKGi0ZseD24G0MDdVtqymTkGqbC9sS77QQkUxxeK6
CQVF2BgK9BjSwffOI1eL7Smo/nFH91YhHVTlthx+R6Qg3iHiIzl+eqg8k+Hz
PpiCCs/cFb04QQ/rqz/EW+IpaPGNeH+GDQPsCjy+fzGVgtDm64y6twxwh10g
zSCfgmIPmHrNyjJCp+eCXHkpBX292yspmMAId38KNXhWUpB018kR/TVGMJW6
H3C4loLOiG4/IxKZIDHp1O8rnymo0ifR/14rE+hppLaxdFEQ43PZPRW6zKDG
EJAz842CrOfIk99zmMHcgm9QY4iC0nWOFNFzssC932NbIz8paDLqx0mlUBbY
/rLnGsM0BWnVn1exG2aBFz9lhjP/UNBVTqY/ERasUBMPTygLFPTZ/klpzhtW
kCk/se26QkFC6crnmyTYYM78rlLMGgX5jn7Q/HuHDahBbJ5mmxRkabfVzbzJ
BgxWU24N2xSkW6sfJhbEDsfeDzR8oa1EMpqXRDVH2SGgccThPH0l4npGeXfI
kQMIr9giCxgq0T++VU/PRg7g6Om7Gs5YicaitWlD9DnhkJiizSx269+QZ3dK
OKGc7fsPZqZKRPEtN82S5oJdCu3irbg9t3N+oiKZC+zpZrYPYMcbE2KbWLhh
saLS4Rx+fnjZGeWhS9yQuD7K4IT7J0oXty795oZRA0HSPzw++cYLZEZ1HjjY
xbfLg6YSidEm30kI5AER/qejN7YoiE+vwnVnLg9U2t94H7JBQSznupTyB3hg
oz/hMAGvx1bh3w3CDl54Oj58qhKv18IQb+tba16IHOh+K7hEQYPW1kEdtbzw
6lu312G83l0xZ43cN3nhXPS/RfkZCmqojueb0OYDpjAX7dFJCiontFRsPOcD
NfWAloVhnLfjMzdvj/IB8d7FectBCsrMZnfiE+OHA1oLHXf7KCiG5/C/PQn8
UGd78khlJwV5ztUb2F0UgFpah9MCNRRkLz/ONVgiANdn82Lfv6cgc2/GoeNT
AsDjXLPuSMF5aDeJjnIXBIO/jK1eOJ+spdX1z42FoDZCnWk6g4IqzlYepeEW
hgLtVcvyUApi+1PsU1ywE17+Lop+pkhBhgxi9McHdkKv2/fI/XIUdF7kXq40
/y7oPu5X2iNFQd9MAiceRe2Cm5eL34uJ4Pk8ljsd7SAGBvpyaT+ZKcjUOCvM
iV4CmH9ytN0aJ6MwJy5RPj0JeKGaTggdIaOXpyLfNp+RANTOp3lmkIwEHrlt
GfVJwKV8vZigr2Q0v8RunOIsCQ6metyN9WRUfbjh01U1KXj45uZqbyEZuXZf
EfY8LAXsGsZcBnlktOilc2K/vxQ4ClYPFT4lI/kL+WzLqVLwZVPz16NUMrqf
dcPyJJM0hGsqFXy5R0aei9DlMCANiabCyu3nyWg1alVGc1UaTjPaHq04S0aJ
rKUhPPwyMLqW/jz7FBnVi0sIfT4kA6wVRaKJx8hIxXzTGSpkoKQo7EGvKxlt
ZFAGFe/uBhqPzO6lA2TEyZ568FrebshszhY4ZUxG4mERpT0fdoO9xUjAL0RG
Rrb7o28s7oZ33LLG2/vI6BbTe9lBD1noKWKpuaNORo+CM+K1wmShNaXkAaiR
UeFQ5Epsoiz8Et9/cRvX38+Vho06n7ADc68ly5MRz9nqUw8IctDN9ahAWpKM
pPqzuycOy4H5lQu7RcXJSMP8mqGhvxzYa70qF9lFRg4yxjzTT+Tg2fwnBnVh
MkrtqS0/QL8H3LzabKt5yGg3fFpb6d4Dx7/N/vCmJ6O9xQV+VnN74K9DNOM3
WjIyE41pzmWTB24FDwUXGjI6sXgo0wbJg1FxJPHcJgm9KmwyelEoD48PCd2g
XSWhD4Ivimhr5aHQYz6YskxC7dF3+Z0H5MHH4atj+BIJLbgf+cnApwDmL9t+
8yyQkC5va4znJQVAWhvaWb9JyDzq1XxFsgJMp+bEp8ySkOt0vCt7qQLY/jT4
nDxDQpF1R5XJYwqgpc019eIXCcVrEJK5thUgWu50Xc0UCWVn8WwRRRQhqWHs
8vAkCdWEd7TxWinC/YKIYO0JEuoaf617/LgiGO/5VHxqnITG7BKfVkUrgvlg
DKXoJwkxqdoFnyQpwnBow37DMRLakabZ/7FDEfZlhBQn4fejPIuAqfCMIkwn
ro3PjZCQxcgXoTpJJcj00SmsGSahGyJDK44GSrB0+m+ZEnaV9XTvpIsSLIrN
9GYMkdDK7WVKxEUlsAlLExLBJnygTeNIUoK666HHM36Q0IlljsuZJUrAcHCl
SRE7R0XYg9CsBPUND/Z9HCSh70QZw5pJJajhrir3xhZIV5WwZ1SGV9ILGqzY
ll16NONSygAshRWVAyR0i810ONRQGRTyy/dewP5gZF3D6qYMrS8tynWxV8Pc
nqWFKoOH0aICI7Z66bEbKg+V4WmXckpfPwkFTpzz/1CqDP5dIYtk7GfikWY2
LcoQUmphlI3d7xCzZ3RKGVL7COEJ2IJxSSwXmFTg6cdnj+9gW1Ezp5hkVMCx
Wyb9Lvbt9edNj5EKRN8kXE3BrtZ480LRXQXmjcyNirD/nai+9y5MBT7xD32v
x9Z4+vm0VbIKbLsNW8xgn+z9ajX0WgWm6y3iRPF4c7lH1M63qoDDDkK6DfaA
2SwPw7QKcPBkhTzAFopanU9mVoVvwc/5+rCPvqHv2rNbFWIZvc8r4fWKmeGq
oIAqTN/uun8T+6OMaLKFhyp8ei8QMIm95ip7cSAct5/QWrTD+3Gqcb8ubbkq
/JazlTTF+5dHc1AkqU0VIicNSU3Ygzq2a7tnVOHpVMaCM95/6/zj7w7JqoE/
z26L+zgvdwaCM/qM1GBk8rqHDs5TjcCVqFOealB67BP9JLbW9WRIeKQG/0iB
a744j6crs6WkK9TAxpDeWAXnNX/+BV1Fuxr81zbHToPzzEHwGZlmIMAtM1XB
DzjvUZmhudyGBHAL1YrMwedFdN/mQ+cjBLDKWXcuxeeJ1B1986krAdTTKxPr
8Xmb44g/phlKgEuTPZwc8yTkeylX3qmUABNuwTlr+LxuCSmKZFcR4Gya2czh
FRJKKythnWomwN0fVqef4fP+ZaryV8QUAa5x3KU9vU5CZs4dLzOl1eGkaOwv
H1w/NKYDHyyoqUPUnduuvXS4PkYxXDxkoA4TjJ/aHRjIaPmZDvrrpA67nuhX
+zOTUcGfjA7TOHXgvXdT7hsnGbHcDlyeWVEHzzwTSTZczxZFGL4bMWpA9bbX
j99iZDT0MuNDCp8GjLzI8OiTICNyZ3sMqGjA6GuFq3UyuF6J6+x86KsBT9Jb
vk0rkVHTG3rY36IBmQ7RtSEGZPTfoYzdCX0aYBkZJ1uL63XOd23WnxMa0DzB
ubID1/MI2sDOeDpNqE8O/fLFjIyULNuJIzqakNWoMptqTUb3xtLv3MnRBMN+
dYK9PxlZ8mt39YRqgf/N1WH7JGz2n8GHb2kBm8RBkecp2PQPBd4/1ILfgX/4
GPD7ynJh3iHntRaIW5sRWrOxu4p7T01rwWTrwMGyV9hJsoO0XnshupnuYvnn
/z9fcErJTBui6n9u+LHh+xs79U6mvTbUFdL/usaFTR+syOunDRU9Jbl5fNgL
7SeXr2hDyI4wvy1R7K57v6sp2tBCq6S8qISdxLDooKIDvhPLs1NW2PyLW1cE
dIH3FyOp7jG+n1wmKZVI68KVOKHIUHyfoP6McB4k6MLBp6dGVXIoSJ9MW6Zv
qQt8I3bnC19QkKIHt/+/m7qQarRW01WF71sFip/Pr+jCk4KZ6xv4Plu7z+eR
f58eLEiHm/roVCI931Y1i+z9oDKXNtE5VonYb+b78/8xBBNuQd04k3fo5PJJ
6zxjI+CUrhXr7HyPTB5eD0J/jGHG4ILdL9MP6IGLAv/JpAMwenB4r41NNXL7
eEnXys0MTugODAjSfkTC/JZDJQyH4DW5ou178kdky/yZrbHDHD4MNikelq1B
dDI9pOAUC4j1rB/iy65BefK+E+n6liCltqW4j74WUdufPIlkOgoBY7LRNl61
6KS6fMBvZ2u4X/r8hHRhLfqykvLwnrs16BKcTQ48r0WGVYw1it7W8FVs9bB/
US3isRjdFRBgDdLD/37mvqxFFcTMzh8XrMHO7Yaz6OtatPFIwLAj0RqmyCVp
g5RaFL9FI1jRbA0+UdxbbU21qOzzt5pwsAFBmnKhc79qUeArS37mAzaQW1ZO
8piuRdIPPvo9PGgDAxHreeYztSjR8TlDiZUNDHFTTkn8rkXnh8PMxtxtwMTG
f6RmvhZprOxosgrHVtz/cGq1FpVLO3bIlNlAh4fJITITFVWEd/5okbEFO46D
Jy5IUhG4WqiI77GF7w4pR5WlqKh5HzXijKItPI9KrRjBHlt/I8itbgsCZz6u
WcpQkUDUEwtrQ1tQot4JFZejouBob1Knsy3orBwyKlCiIo27v+N74myBolfw
yk2bikrT2QyHV2whcrypzvUwFV37GrMWtm4LX4+claSxoCJbHmYSz7YtvLw8
s5KLvXidngBMduD+Wlli9ggV6ZzckMoSsIPyyjHX0KNUVKX3m9FD3Q6cXu6d
DLanopavHS29gXYQv32QkceTin7xPPFoH7CD/qGAmqGzVHT/0K4dSsN2cErx
xrRnEBVpXc1qvzlmBzzHAsv7sSP/5Jnsn7YDlp+PJHvOURFPa5lC/qodCLnH
hX4Kxv3fbV66xG8Ph5V6U1JCqegGI038HnN7kFbx/bERRUVia8eqoirsYdCK
8VjdPfx/qz+pDSR7KDg3NawUR0UMOaGhfG/t4csCr0Ai9ox5DCH/oz2kVptm
ecRTUeWT5zktrfYgGjbiNH+fipz1Zm7tmrIHEJc4wp5ERQ/Dzh2tFHOAWRUP
Z5YnVMS+cmlo6ZYDlOW2hqvlUtGBXFbl27EOQMp1SL6LfdnmUahwvAMUNjUT
J7B/vyjj2p/sgM8P7M7Mo6J27yn9q88coGrMRJalgIpSmhyfsFU7wObjx+qt
z6lIOlPdVuKfA/AeiC2WKaEiXdOJ2kMnHeFqlXwDLQX3NxfOkXHGET6SglIO
YtukcTjMn3MEniVBtTjswHn18SdhjvBX07h6RyUVZWRcZpm+6QgxdwsCFN9S
Ed0yr2VctiOEmGq3mb6nos/5+l87uh2hdisuxuEjFXmyJE66ghPUCnevDzXg
/HAoZi+bOEG1yw8xiUYqouWtcUo86ATLgd1sHti5In/rG62cwLf6oFkv9i9F
2zxdDyegi6M1b26iolBLPl+hCCe4ePej+ItmKkpITPzeUe4Ehful4s3aqah2
V1LroT3OcJkl7+vMVyoiGhCedyk6w6Cct4J4D94/z5brnqrOED4+Z3cU2zSL
WS9krzN82PlP/TX2J6nLz7JMnCF+cj9fcC+ej5x/2LKXMwTY3iT++UZFXQQd
6dzHzkBrTU1r6qei0QPfL2yzugBzCEMN7wjeb79IS0tOF2jhRmw62M3XJGTT
eFzgkLnwXnfsiiq/L9o7XMArOV8jH/uW7ozGmd0uwJuo0aI7SkWKypt/+g1d
4OJibpLzGBUF8UsEVga7QBBDqvX1cSraGPb1vDDgAoY/0o7H/KKi/1zY8tiG
XWA1ruDac+yzHa+ns8ZcINhMNKoJe6SaJrxp2gW+kV5KcUzj+WVlJkmsucCV
zmaheOxEj76GRiFXMH2s2XVvhorkv9loilu7Atvv48cu/qYiu3Zg+VTjCpzT
Aczb81Q0ZDprIVHvCiR95vkdf6nozNsn90MbXYGuilBPwI7J/ysk3+4KPyxv
avpiV13Olb0zgBPwaGoXFVtegcXEYtUVfC6awY0FPJ9rbZFtKm7w0yLl3PIi
3n9Nz4Wex27Q7yqrmb9CRVfruF0l0t3AWI2OUInt7vSx+liWGxzyytzVii14
aXf8Up4b6HUK1C1h36r5Jc9f7gZmLFV2B1apKMAm1NOqxQ3GjMfjBrEVzyY0
UmndwU6KsZF5DeexqCbrdaA7qBzQ61LboKKO5PALcMYdjE+kPzHC/nuVYNF2
zh3M8qKt7bC1nDKXZ8LcYfyyZsJFbAp9hKX8bXfo1nYgvsOucVdfz3zmDqfE
6E6YblJRN1e2471+d7jyhnbsyBYVrZ2P5Ayw8oDDYo+cNWjq0B83vSGyjQf8
CLr6HmGPHVgqY3PwgPLndMKW2K1Cp51fuXmAyOeO4gDsnEr3Z0vHPaC3OdU9
HduCTl/vxnUPUGruqaenrUPpD9aIT8kesKtys6UJ26A09N13aU9YbJYW0qev
Q2F/dbdC5Dxh4/qX9YPYZVpriEvRE3LizXvssOUol2tB3ROomZFnT2Jz1Vxr
ykOeEFDEKZuKPdh1t/esuyfInm3JXcKOWslapE/xhJTWfz9yGerQB8MGZWVW
L6gubPQeY6xDzVHxJ2M4vODeG6LsLHZflX3RGLcXfLRTHl3CXjYc3pMh5AU9
yhWHmZnqkCpak+ba7QV554ObFbAzkbLInKEXcNuLvD6NfRkSGCtCvCBkn/vF
eex9xs6D+4e8AHGOnh9nrkOPMmXg9qgXWHz1vz6Lvbj2+2nnuBcYRU7ELWK/
Kr/pf2LWC2aJEwl0LHVISrZ8JmXNCzYYz9qKYzMw3N4MY/MGZSXFfnvs6fFh
9i+7vUHxlh1vFTbl5SP5WBdv/P07d+waax2KZaZ5YOfmDZ8WCkpvY7v6Hv+3
y8MbOPunF+OwN3boNZV4e8NXOeHTqdhwve9kd4A32OXR7SrHbnARK5G86A20
ZhIho9hfmZ7tJSV6A4tEgRmw4fF7vzIe++wNgSouJ6axS/Y9Ubjf4g3LAnJS
c9iBAjd49rV5Q+h97u5F7KFPLoP3O73B00BXfQv7sypjxP5v3kC6PFTJw47z
s+H2OnHcG3YJHxHYi239mFXSiNYHlGaZNiKwX7QRNzO0faD3dtaZDWwWx860
U7o+sCNY9BENRx061o/27d/nA8XvN98yYEtOiYb2GviAJA3POgd2Cl3HHJ+p
D0jI/rQSw76612Dstp0PMB/0sTHAdkwT/HwuyAdYC3aORGDTBdQ/Ni3ygf63
Z7RnsW9f+q+B/aUPCL0pjZvD5kjIX+0o9oHOwNSRBWxByi1nz9c+sJ128eYa
tjz7QeFQsg88ZGopYeasQ0dLPj0qrPeB6utOF6Ww01caUthHfaAq5TCyxdaO
+fywY6cvtD8eoinCzttpaBIu5gsPlnz8XmILlJTOS0r4wqJ9au0r7PnuZKsg
aV9QjzWJLMd+KePNwq3gC9e/bHe/w5b+sHjpiLYvBAl7S7Vhcy2L+X2y9oUb
/dVGf7En/ILU39/0hQgrboomVx1afeb/KOa2L4zuG/22F5ttzHXT7o4vtPlf
+KeDrUw0bfx1zxdG9Ge19LHPEUV9hB/6wubrdykHsNeJ1ITgHF84XkJYsMfm
PiY8p/DBF3SkauRCsHWOV79KWcXt5h3axdgae3STTNZ84S3dasMrbNXxktC5
dV/wOTzqUoq9m5gFh7d9oS+JL6wcm8c7qnOT0Q/GwqXyKdi/nPSXifx+UPbz
5Oc67MyDZANNVT/48JXTagCbYU9pc5ufH37fSjazcuP6EVJkHOLvB4qMYrvY
sc0/5pKFA/ygObE+kAM73u1Jrk+gH1gzKjBwY4skRF9eCPIDifozewSwVf/Z
K++I8oPOlyIa4tgun//d9XzsB6VVzcfVsV+dNbGYbfYD5gt5I/bYwSeqw960
+gHfhxfMjti6fgb5ke1+MGvbq+SEXeOoQ8v1xQ9CC0vPuWD3GCiRVL/7QYJB
xYIHNg0Hv0zQlB+k5ZG7jmHbFo6s/WUkgvJOE5Ew7JWha0WrhkSIPutj8QQ7
3+WaYw4QgegwpZuK7dh5le6IMREarQNk07Araq+4ZpkSIcHFcj0dOyg/ks3s
CBGkT6+mZmNPngwPTHIhwtypqy8KsPuWgxRVQ4ggZs8k8Qb7PYd3kd9zInyb
8Hjfgr17qavH8AUR+i0uxLVixw4cZBQtJsK7SwPubdjOr9S820uJoCbx4l87
9t+j24IGZCIkJ99W+oItn5R5TegTEdTN8s/3YT8UGXBuHCPC9lj003HsdVqb
W7njRIiwWfWewPb9RS2/MkmEglhByUlstbcvubRniKBqYpsxhd3kfpmas0CE
olnJhzPY21k7CZfp/EFeNeTCX+xjMfc9nBj8oaXwJWEBuzmI/q4Gkz+w7bw2
/X+nGk3/nGT1h73uRM8lbK3RyjQHXn+4f45FbxU77bNqI4HfH6aoAbP/N11F
zjK7oD90pf3I/ofddiPWpkbYH/pPiDOuY2uf3orKEPWHKqXJN/93usP5l2G7
/OENU7v/Bja94fg3O3F/kPHuEdjEDpRzZVaT9IfjGds1//f/AEv9dgA=
             "]]}, 
           RowBox[{"y", "[", "9", "]"}]], Annotation[#, 
           $CellContext`y[9], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           RowBox[{"y", "[", "10", "]"}]], Annotation[#, 
           $CellContext`y[10], "Tooltip"]& ]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"Second mover\"", TraditionalForm], 
       PlotRange -> {{0, 169.005744259562}, {-2.099021005348474*^-8, 
         0.3385722796874714}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         RowBox[{"y", "(", "1", ")"}], 
         RowBox[{"y", "(", "2", ")"}], 
         RowBox[{"y", "(", "3", ")"}], 
         RowBox[{"y", "(", "4", ")"}], 
         RowBox[{"y", "(", "5", ")"}], 
         RowBox[{"y", "(", "6", ")"}], 
         RowBox[{"y", "(", "7", ")"}], 
         RowBox[{"y", "(", "8", ")"}], 
         RowBox[{"y", "(", "9", ")"}], 
         RowBox[{"y", "(", "10", ")"}]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True]},
  "Row",
  DisplayFunction->(FrameBox[
    RowBox[{
      TemplateSlotSequence[1, "                "]}], FrameMargins -> 15, 
    FrameStyle -> Automatic, RoundingRadius -> 15]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", "\"                \"", 
       ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameMargins", "\[Rule]", "15"}], ",", 
       RowBox[{"RoundingRadius", "\[Rule]", "15"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.693216069662969*^9, 3.693216187121756*^9, {3.693216666070216*^9, 
   3.693216695508848*^9}, 3.693216794429591*^9, 3.693216861001594*^9, 
   3.693216895034821*^9, 3.693217282937132*^9, 3.6932174092519073`*^9, 
   3.693267792647324*^9, 3.693268006247285*^9, 3.6932680766715593`*^9, 
   3.6932682151100473`*^9, 3.693268257387802*^9, 3.693388071195992*^9, {
   3.6933882963702593`*^9, 3.693388305329612*^9}, 3.693388736771392*^9, 
   3.693388917678261*^9, 3.6933889798898697`*^9, 3.693389084986813*^9, {
   3.6933899508750963`*^9, 3.693389970387224*^9}, 3.693390091194821*^9, 
   3.693390150187726*^9, 3.693390233903132*^9, 3.693390391827153*^9, 
   3.693465241027198*^9, 3.693508955037485*^9, 3.6935491065857162`*^9, {
   3.693549149501539*^9, 3.693549156183898*^9}, 3.693549217959503*^9, 
   3.693549321676759*^9, 3.693549357157795*^9, 3.693549389894163*^9, 
   3.693549458715068*^9, 3.6935494962045*^9, 3.693549532719714*^9, {
   3.693549592165887*^9, 3.693549616213064*^9}, 3.693551608891541*^9, 
   3.693551649383109*^9, 3.693551788849519*^9, 3.69355189987843*^9, 
   3.693552015393626*^9, 3.693552098899064*^9, 3.693552203306796*^9, {
   3.69355224185544*^9, 3.693552265704995*^9}, {3.693552297001133*^9, 
   3.693552344328611*^9}, 3.693552391022505*^9, 3.693552459673304*^9, 
   3.693552519805025*^9, 3.693552607780953*^9, {3.6935526420782747`*^9, 
   3.6935526684726973`*^9}, 3.693552751517625*^9, {3.693552804320837*^9, 
   3.693552816207534*^9}, 3.693552924526701*^9, {3.69355296281409*^9, 
   3.6935530150837917`*^9}, 3.693553059770514*^9, {3.693553110247304*^9, 
   3.693553150821951*^9}, 3.6935567139532022`*^9, 3.69355677662545*^9, 
   3.69355680943888*^9, 3.6935595685789757`*^9, 3.693559602440136*^9, 
   3.693559637186779*^9, 3.6935687873672533`*^9, 3.69356911454039*^9, 
   3.69393402622366*^9, {3.6939340584719543`*^9, 3.693934064598426*^9}, 
   3.693934899872707*^9, {3.693935130154244*^9, 3.693935155210321*^9}, 
   3.693935307007538*^9, 3.693935470601185*^9, 3.693935743059915*^9, {
   3.693935919315153*^9, 3.693935959112762*^9}, {3.693936007174004*^9, 
   3.6939360413501577`*^9}, 3.694021903918817*^9, 3.6940219656116133`*^9, {
   3.694022020456333*^9, 3.694022079191965*^9}, 3.694022522376161*^9, {
   3.69408337295192*^9, 3.694083376268001*^9}, {3.694083435290024*^9, 
   3.6940834531717863`*^9}, 3.694083571670354*^9, 3.694083678095149*^9, 
   3.694083736421473*^9, 3.694083789106988*^9, {3.694083834560821*^9, 
   3.6940838622124577`*^9}, 3.694083898659315*^9, 3.694084072094207*^9, 
   3.694084108623722*^9, {3.6940841411961603`*^9, 3.694084157825118*^9}, 
   3.694084361621031*^9, {3.694084421326167*^9, 3.69408444082271*^9}, 
   3.694084540040264*^9, 3.6940845759298553`*^9, {3.694084764903928*^9, 
   3.694084819474948*^9}, 3.69408487696754*^9, 3.694084975415893*^9, 
   3.694085491525*^9, 3.6940855555660143`*^9, {3.6940856307327967`*^9, 
   3.6940856913646*^9}, 3.694085724413669*^9, 3.6940857758250647`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.08295203010192337`", ",", "0.11091488642224939`", ",", 
     "0.08813225260367356`", ",", "0.10317133694760057`", ",", 
     "0.08502099002033174`", ",", "0.13099142621121845`", ",", 
     "0.15396550496884925`", ",", "0.004128889594882227`", ",", 
     "0.07458720273010638`", ",", "0.16613548039916495`", ",", 
     "0.10618127319105757`", ",", "0.1376973401638229`", ",", 
     "0.1109369037329784`", ",", "0.08537164299180382`", ",", 
     "0.08599920233856292`", ",", "0.06690533274354797`", ",", 
     "0.15748820303980907`", ",", "0.100290816694045`", ",", 
     "0.04979049183297225`", ",", "0.09933879327140013`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAA7mK9+/OzNkBahBkUtJIUPp81jard
QjlAQiE25x//Ab6vq9uLtSw+QCq8vexJb+M9H9W7Tu6/QUCUbguUZNLAvVOh
yr0TXURARJTOmuLJtL3LPic6QM1GQJBE4oOuV7E9g6CqThRySUCqzwXi8sC/
PX/Te3Dv6UtAwNr8ADYQwj1o0414XFVOQN5u+URoCsk9yUtjjLh6UEAr8/If
VRPIvYCWJmNGtFFAm9c9cg46oL1WQ/0FKAhTQPTh7WZ2h8y9o1b0m9JVVEAH
/D+jLWAIvpJSkrgAjVVAwT48pghMqr2hsEOhgt5WQJwJeiKFtcy9UvebEIgZ
WEC7NEbuh8mwvSOgB0zhbllAqIs4sKUFob1qr5N6A75aQKMCsZPBcvk9U6fG
L6n2W0Dj12ujto+zPVwBDbGiSV1APGSV5pNXw70HRPq4H4ZeQJpfWf+C4wS+
Ke0HtGW8X0CUdoJnVhnivTZ8lL1/hmBA6vDOdTtZoj0odnhkjiNhQKC566YP
PNu9hyTaJ2yPYUBe+wV5WaQVvpe5xIY=
                    "]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAA5V6oLu2BYkBe+wV5WaQVvvVRtcHC
EGNAkLsarivDur2TVZBxy7ljQBz7xX0G+QE+gs2+5JVXZEBYmCS1LAXVPax4
fdFE8mRAI3ctpvsAAr7m1EWkHZplQFYGEnipJw6+caVhOrg2ZkDwMw+KCw30
vQwnh7Z84GZA5La1lUFDBj74HAD2An9nQHfY8cNuegk+IEYJr20aaEBR9RUq
2MECPlggHE4Cw2hAAk8xgQJl573hboKwWGBpQFaaOqghsAO+eW7y+NgKakCl
ZfAxeG73vU2h8ro9smpA+pnXRBN/2b1ySEZAZE5rQPgAf0G2dus9p6Cjq7T3
a0DwioBSY4zzPS1tVNrGlWxAFlDagW/H3L3ubJWCvTBtQEfZej1hoey9vx3g
EN7YbUB4tUnBFir3veFCfmLAdW5ANllrSklLAb4TGSaazB9vQCaJ0Nwx0/S9
gCJeS73Gb0Di9OiJo8HoPR/Q9N83MXBA+aPGJ4xF4j2GZz8NpoVwQIorYssf
Xqe9FrkzHHXUcEDob1cEAhi1PS7jLB7ZKXFAer0WrRTFvj3jJu5cr31xQFAv
MN1WEp49wSRZfebLcUD+FII5GxqjvSf7yJCyIHJAPVOlXPGCfr21i+KF329y
QLgsmW2UATG97xKr+v+/ckBRaY52OrtuvRRI7Xc=
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.25972962971901*^-9, 
                    1.197509716734365*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAA7mK9+/OzNkBahBkUtJIUPp81jard
QjlAQiE25x//Ab6vq9uLtSw+QCq8vexJb+M9H9W7Tu6/QUCUbguUZNLAvVOh
yr0TXURARJTOmuLJtL3LPic6QM1GQJBE4oOuV7E9g6CqThRySUCqzwXi8sC/
PX/Te3Dv6UtAwNr8ADYQwj1o0414XFVOQN5u+URoCsk9yUtjjLh6UEAr8/If
VRPIvYCWJmNGtFFAm9c9cg46oL1WQ/0FKAhTQPTh7WZ2h8y9o1b0m9JVVEAH
/D+jLWAIvpJSkrgAjVVAwT48pghMqr2hsEOhgt5WQJwJeiKFtcy9UvebEIgZ
WEC7NEbuh8mwvSOgB0zhbllAqIs4sKUFob1qr5N6A75aQKMCsZPBcvk9U6fG
L6n2W0Dj12ujto+zPVwBDbGiSV1APGSV5pNXw70HRPq4H4ZeQJpfWf+C4wS+
Ke0HtGW8X0CUdoJnVhnivTZ8lL1/hmBA6vDOdTtZoj0odnhkjiNhQKC566YP
PNu9hyTaJ2yPYUBe+wV5WaQVvpe5xIY=
                    "]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAA5V6oLu2BYkBe+wV5WaQVvvVRtcHC
EGNAkLsarivDur2TVZBxy7ljQBz7xX0G+QE+gs2+5JVXZEBYmCS1LAXVPax4
fdFE8mRAI3ctpvsAAr7m1EWkHZplQFYGEnipJw6+caVhOrg2ZkDwMw+KCw30
vQwnh7Z84GZA5La1lUFDBj74HAD2An9nQHfY8cNuegk+IEYJr20aaEBR9RUq
2MECPlggHE4Cw2hAAk8xgQJl573hboKwWGBpQFaaOqghsAO+eW7y+NgKakCl
ZfAxeG73vU2h8ro9smpA+pnXRBN/2b1ySEZAZE5rQPgAf0G2dus9p6Cjq7T3
a0DwioBSY4zzPS1tVNrGlWxAFlDagW/H3L3ubJWCvTBtQEfZej1hoey9vx3g
EN7YbUB4tUnBFir3veFCfmLAdW5ANllrSklLAb4TGSaazB9vQCaJ0Nwx0/S9
gCJeS73Gb0Di9OiJo8HoPR/Q9N83MXBA+aPGJ4xF4j2GZz8NpoVwQIorYssf
Xqe9FrkzHHXUcEDob1cEAhi1PS7jLB7ZKXFAer0WrRTFvj3jJu5cr31xQFAv
MN1WEp49wSRZfebLcUD+FII5GxqjvSf7yJCyIHJAPVOlXPGCfr21i+KF329y
QLgsmW2UATG97xKr+v+/ckBRaY52OrtuvRRI7Xc=
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.25972962971901*^-9, 
                    1.197509716734365*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAA/qL7xN74Q0DZAo0rcCUzPlOhyr0T
XURAik9Ad/OEGj7LPic6QM1GQBxasBxhkdo9g6CqThRySUCCMwlmSv3KvX/T
e3Dv6UtAJ/dwBEzg0b1o0414XFVOQKygYhmOBtm9yUtjjLh6UEDtTztgfhPY
PYCWJmNGtFFAyV1Byic6sD1WQ/0FKAhTQIx6Dx13h9w9o1b0m9JVVEB49Li4
LWAYPpJSkrgAjVVAoxl8WAlMuj2hsEOhgt5WQPRuzjCGtdw9UvebEIgZWED1
pZppicnAPSOgB0zhbllA7kAbo6UFsT1qr5N6A75aQPRTvenBcgm+U6fGL6n2
W0BBs+yat4/DvVwBDbGiSV1AipVIsJRX0z0HRPq4H4ZeQM/z5AmD4xQ+Ke0H
tGW8X0DYjMt9VhnyPTZ8lL1/hmBAOvGvZTpZsr0odnhkjiNhQHAQNrcQPOs9
KiFm8cbNYUA16DsfmJUwPmf/4/fjdGJAdz/61DuUJz71UbXBwhBjQHAg8pNF
w8o9k1WQccu5Y0DFaDX6BvkRvoLNvuSVV2RAOI/yki8F5b2seH3RRPJkQL5R
TvP7ABI+5tRFpB2aZUC26pWBqicePnGlYTq4NmZAmgdJCw0NBD4MJ4e2fOBm
QEH+e95BQxa++BwA9gJ/Z0CxfPqIb3oZviBGCa9tGmhASIIVKtnBEr5YIBxO
AsNoQAxNI5wBZfc94W6CsFhgaUCszHPzIbATPnlu8vjYCmpAHqdTQ3luBz5N
ofK6PbJqQGpNqHsXf+k9ckhGQGROa0CK6/j7tXb7vaego6u092tAYU37u2OM
A74tbVTaxpVsQCD2kNhtx+w97myVgr0wbUB5qaKRYKH8Pb8d4BDe2G1A+BML
CRcqBz7hQn5iwHVuQB6S2V5JSxE+Exkmmswfb0DIMEHDMdMEPoAiXku9xm9A
d0rgj6PB+L0f0PTfNzFwQHAvlDOMRfK9hmc/DaaFcEDvIOc0Hl63PRa5Mxx1
1HBAe53mmwIYxb0u4ywe2SlxQE+LI2MVxc694ybuXK99cUCKOSs4WxKuvcEk
WX3my3FA4OZgXRkasz0n+8iQsiByQFZSitb1go49tYvihd9vckDQB4+bWAJB
Pe8Sq/r/v3JA1Spm8zq7fj2mGI4G
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.4830301742848646`*^-9, 
                    4.457832041710251*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAA/qL7xN74Q0DZAo0rcCUzPlOhyr0T
XURAik9Ad/OEGj7LPic6QM1GQBxasBxhkdo9g6CqThRySUCCMwlmSv3KvX/T
e3Dv6UtAJ/dwBEzg0b1o0414XFVOQKygYhmOBtm9yUtjjLh6UEDtTztgfhPY
PYCWJmNGtFFAyV1Byic6sD1WQ/0FKAhTQIx6Dx13h9w9o1b0m9JVVEB49Li4
LWAYPpJSkrgAjVVAoxl8WAlMuj2hsEOhgt5WQPRuzjCGtdw9UvebEIgZWED1
pZppicnAPSOgB0zhbllA7kAbo6UFsT1qr5N6A75aQPRTvenBcgm+U6fGL6n2
W0BBs+yat4/DvVwBDbGiSV1AipVIsJRX0z0HRPq4H4ZeQM/z5AmD4xQ+Ke0H
tGW8X0DYjMt9VhnyPTZ8lL1/hmBAOvGvZTpZsr0odnhkjiNhQHAQNrcQPOs9
KiFm8cbNYUA16DsfmJUwPmf/4/fjdGJAdz/61DuUJz71UbXBwhBjQHAg8pNF
w8o9k1WQccu5Y0DFaDX6BvkRvoLNvuSVV2RAOI/yki8F5b2seH3RRPJkQL5R
TvP7ABI+5tRFpB2aZUC26pWBqicePnGlYTq4NmZAmgdJCw0NBD4MJ4e2fOBm
QEH+e95BQxa++BwA9gJ/Z0CxfPqIb3oZviBGCa9tGmhASIIVKtnBEr5YIBxO
AsNoQAxNI5wBZfc94W6CsFhgaUCszHPzIbATPnlu8vjYCmpAHqdTQ3luBz5N
ofK6PbJqQGpNqHsXf+k9ckhGQGROa0CK6/j7tXb7vaego6u092tAYU37u2OM
A74tbVTaxpVsQCD2kNhtx+w97myVgr0wbUB5qaKRYKH8Pb8d4BDe2G1A+BML
CRcqBz7hQn5iwHVuQB6S2V5JSxE+Exkmmswfb0DIMEHDMdMEPoAiXku9xm9A
d0rgj6PB+L0f0PTfNzFwQHAvlDOMRfK9hmc/DaaFcEDvIOc0Hl63PRa5Mxx1
1HBAe53mmwIYxb0u4ywe2SlxQE+LI2MVxc694ybuXK99cUCKOSs4WxKuvcEk
WX3my3FA4OZgXRkasz0n+8iQsiByQFZSitb1go49tYvihd9vckDQB4+bWAJB
Pe8Sq/r/v3JA1Spm8zq7fj2mGI4G
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.4830301742848646`*^-9, 
                    4.457832041710251*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAXXGlH4UgR0DkByn9urAzPoOgqk4U
cklAKbggkhGw/T1/03tw7+lLQEN+ujtHv9o9aNONeFxVTkAWo+FpxMnZPclL
Y4y4elBAIBrCzEcJ2L2AliZjRrRRQIsnLAInNbC9VkP9BSgIU0CUKe1YW4fc
vaNW9JvSVVRA+Jo2UC9gGL6SUpK4AI1VQKJiSfMQTLq9obBDoYLeVkCAm1Sf
h7XcvVL3mxCIGVhAvWEBKonJwL0joAdM4W5ZQPi955WlBbG9aq+TegO+WkC6
H+f7wXIJPlOnxi+p9ltAQh62oLaPwz1cAQ2xokldQNY1YLiWV9O9B0T6uB+G
XkA5xxs7g+MUvintB7RlvF9AETh0l1YZ8r02fJS9f4ZgQPS+cWg7WbI9KHZ4
ZI4jYUDASjBVEjzrvSohZvHGzWFATKdB2piVML5n/+P343RiQGI7bMI8lCe+
9VG1wcIQY0BA+DbIM8PKvZNVkHHLuWNAUobiYgj5ET6Czb7klVdkQLjkWKMy
BeU9rHh90UTyZEDG4/vu/AASvubURaQdmmVAjMWpWawnHr5xpWE6uDZmQOJV
f5QODQS+DCeHtnzgZkBsX+AaQ0MWPvgcAPYCf2dAlA8NLXF6GT4gRgmvbRpo
QPJCQZLawRI+WCAcTgLDaEDuSG58AmX3veFugrBYYGlAPwODLSOwE755bvL4
2ApqQGSrw1F7bge+TaHyuj2yakDUliH8G3/pvXJIRkBkTmtAPGcHgLd2+z2n
oKOrtPdrQIh0H0VljAM+LW1U2saVbECKEYTfbMfsve5slYK9MG1AutDJSmGh
/L2/HeAQ3thtQEC+SasYKge+4UJ+YsB1bkAnd7t3SksRvhMZJprMH29AwLTB
KTPTBL6AIl5LvcZvQHbKhZKjwfg9H9D03zcxcEBvuzwQjEXyPYZnPw2mhXBA
ImvTXCdet70WuTMcddRwQBirnLgCGMU9LuMsHtkpcUBZs0x+FsXOPeMm7lyv
fXFAEpxA3lcSrj3BJFl95stxQMzmZ4QcGrO9J/vIkLIgckAWL/NG9IKOvbWL
4oXfb3JAWEraSLkBQb3vEqv6/79yQKzGqOk7u369btiCvg==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-3.861348050422084*^-9, 
                    4.584517614984416*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAXXGlH4UgR0DkByn9urAzPoOgqk4U
cklAKbggkhGw/T1/03tw7+lLQEN+ujtHv9o9aNONeFxVTkAWo+FpxMnZPclL
Y4y4elBAIBrCzEcJ2L2AliZjRrRRQIsnLAInNbC9VkP9BSgIU0CUKe1YW4fc
vaNW9JvSVVRA+Jo2UC9gGL6SUpK4AI1VQKJiSfMQTLq9obBDoYLeVkCAm1Sf
h7XcvVL3mxCIGVhAvWEBKonJwL0joAdM4W5ZQPi955WlBbG9aq+TegO+WkC6
H+f7wXIJPlOnxi+p9ltAQh62oLaPwz1cAQ2xokldQNY1YLiWV9O9B0T6uB+G
XkA5xxs7g+MUvintB7RlvF9AETh0l1YZ8r02fJS9f4ZgQPS+cWg7WbI9KHZ4
ZI4jYUDASjBVEjzrvSohZvHGzWFATKdB2piVML5n/+P343RiQGI7bMI8lCe+
9VG1wcIQY0BA+DbIM8PKvZNVkHHLuWNAUobiYgj5ET6Czb7klVdkQLjkWKMy
BeU9rHh90UTyZEDG4/vu/AASvubURaQdmmVAjMWpWawnHr5xpWE6uDZmQOJV
f5QODQS+DCeHtnzgZkBsX+AaQ0MWPvgcAPYCf2dAlA8NLXF6GT4gRgmvbRpo
QPJCQZLawRI+WCAcTgLDaEDuSG58AmX3veFugrBYYGlAPwODLSOwE755bvL4
2ApqQGSrw1F7bge+TaHyuj2yakDUliH8G3/pvXJIRkBkTmtAPGcHgLd2+z2n
oKOrtPdrQIh0H0VljAM+LW1U2saVbECKEYTfbMfsve5slYK9MG1AutDJSmGh
/L2/HeAQ3thtQEC+SasYKge+4UJ+YsB1bkAnd7t3SksRvhMZJprMH29AwLTB
KTPTBL6AIl5LvcZvQHbKhZKjwfg9H9D03zcxcEBvuzwQjEXyPYZnPw2mhXBA
ImvTXCdet70WuTMcddRwQBirnLgCGMU9LuMsHtkpcUBZs0x+FsXOPeMm7lyv
fXFAEpxA3lcSrj3BJFl95stxQMzmZ4QcGrO9J/vIkLIgckAWL/NG9IKOvbWL
4oXfb3JAWEraSLkBQb3vEqv6/79yQKzGqOk7u369btiCvg==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-3.861348050422084*^-9, 
                    4.584517614984416*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAkgmUtFt0SEAfefa3prLTPoOgqk4U
cklAV2ENGmLiwT5/03tw7+lLQKmcE5bbX6U+aNONeFxVTkCdXCD5gz2OPslL
Y4y4elBAQTVX7NJpdz6AliZjRrRRQEuvC3sAt2Y+VkP9BSgIU0CmicpQ2ohY
PqNW9JvSVVRAxO6Mk6aLUD6SUpK4AI1VQBcVx0ketEU+obBDoYLeVkAmwMoq
SapAPlL3mxCIGVhAM4t/eVcyOz4joAdM4W5ZQKu4f5FaOzc+aq+TegO+WkD4
R6Q9p4gxPlOnxi+p9ltAkCfKs9gCMz5cAQ2xokldQPvjo5L6TzI+B0T6uB+G
XkAs1iwtIno2PintB7RlvF9AwM7TZnzdMT42fJS9f4ZgQCxCANFrQTA+KHZ4
ZI4jYUCo41iYZOcwPiohZvHGzWFA9+BzWIAzQD5n/+P343RiQDwYxtuQdzs+
9VG1wcIQY0Aw87pklJovPpNVkHHLuWNAbd80/QgNJj6Czb7klVdkQJQXp5HJ
mS0+rHh90UTyZECjZkeGDukzPubURaQdmmVAj6f+9UPpNj5xpWE6uDZmQJWi
ZzYi3TE+DCeHtnzgZkDSO49qTJIjPvgcAPYCf2dACP/gbUPxIT4gRgmvbRpo
QFIkb/bcRyU+WCAcTgLDaEBocnjAqcYwPuFugrBYYGlAw3P8nsQ5ND55bvL4
2ApqQCt1RJI8OzI+TaHyuj2yakD1DBk7bRkwPnJIRkBkTmtAQJt0WDctKz6n
oKOrtPdrQNSJg+LZuCk+LW1U2saVbECfQTRIyDIwPu5slYK9MG1AwgtgCiEW
MT6/HeAQ3thtQHC8lMuxMDI+4UJ+YsB1bkB97sUpsp0zPhMZJprMH29AZfaW
/uTlMT6AIl5LvcZvQD/+chy1gSs+H9D03zcxcECKpw+A6FAsPoZnPw2mhXBA
KJtdw2nHLj4WuTMcddRwQN81BttuRC4+LuMsHtkpcUDCX0qwwh0uPuMm7lyv
fXFAnCZN/pl6Lj7BJFl95stxQATJ6Aq9vi4+J/vIkLIgckCtL9J/LKAuPrWL
4oXfb3JAHijRf8uYLj7vEqv6/79yQF8mwLBYnC4+wx1wxg==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 4.69633493996164*^-6}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAkgmUtFt0SEAfefa3prLTPoOgqk4U
cklAV2ENGmLiwT5/03tw7+lLQKmcE5bbX6U+aNONeFxVTkCdXCD5gz2OPslL
Y4y4elBAQTVX7NJpdz6AliZjRrRRQEuvC3sAt2Y+VkP9BSgIU0CmicpQ2ohY
PqNW9JvSVVRAxO6Mk6aLUD6SUpK4AI1VQBcVx0ketEU+obBDoYLeVkAmwMoq
SapAPlL3mxCIGVhAM4t/eVcyOz4joAdM4W5ZQKu4f5FaOzc+aq+TegO+WkD4
R6Q9p4gxPlOnxi+p9ltAkCfKs9gCMz5cAQ2xokldQPvjo5L6TzI+B0T6uB+G
XkAs1iwtIno2PintB7RlvF9AwM7TZnzdMT42fJS9f4ZgQCxCANFrQTA+KHZ4
ZI4jYUCo41iYZOcwPiohZvHGzWFA9+BzWIAzQD5n/+P343RiQDwYxtuQdzs+
9VG1wcIQY0Aw87pklJovPpNVkHHLuWNAbd80/QgNJj6Czb7klVdkQJQXp5HJ
mS0+rHh90UTyZECjZkeGDukzPubURaQdmmVAj6f+9UPpNj5xpWE6uDZmQJWi
ZzYi3TE+DCeHtnzgZkDSO49qTJIjPvgcAPYCf2dACP/gbUPxIT4gRgmvbRpo
QFIkb/bcRyU+WCAcTgLDaEBocnjAqcYwPuFugrBYYGlAw3P8nsQ5ND55bvL4
2ApqQCt1RJI8OzI+TaHyuj2yakD1DBk7bRkwPnJIRkBkTmtAQJt0WDctKz6n
oKOrtPdrQNSJg+LZuCk+LW1U2saVbECfQTRIyDIwPu5slYK9MG1AwgtgCiEW
MT6/HeAQ3thtQHC8lMuxMDI+4UJ+YsB1bkB97sUpsp0zPhMZJprMH29AZfaW
/uTlMT6AIl5LvcZvQD/+chy1gSs+H9D03zcxcECKpw+A6FAsPoZnPw2mhXBA
KJtdw2nHLj4WuTMcddRwQN81BttuRC4+LuMsHtkpcUDCX0qwwh0uPuMm7lyv
fXFAnCZN/pl6Lj7BJFl95stxQATJ6Aq9vi4+J/vIkLIgckCtL9J/LKAuPrWL
4oXfb3JAHijRf8uYLj7vEqv6/79yQF8mwLBYnC4+wx1wxg==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 4.69633493996164*^-6}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVx31Q03UcwPEJFcpJR7NUONYYdJtwyuwsLEk+n/z++AUBOxhuMZwKe+JB
2BPCzSkPjoaWrrgpZqAe+ESphXJIoAyxul2GmAoWUOpoNCFPScJN6Tr79sf7
3vcSqAxSbRCHw3mD9v9fXDJpZ5wpmPlmgfV+/4cwkCxag4MsusTJzFK2Bupa
TkleNqdh1BjfyxOUQ83QduP0VDo6p94xs45iKBpyWJQyCa69/xdbLVbBlXT1
3m5rFv484zZK3XlQe0CoZjuz8aNH0XNilIGc/Pv8svk5mLr97SCRKRuOyWeb
b8rW4z3HQt5UqAScUmc3xyFD8ZnDT3nB6dB6lrTa7shRGdnV5exPBWmgOXx3
RC7mtS3pqUt9D2JbQjLG9Qr0F6dlJMSzUNK+zxrcl4eG5RvDJjUpkNPmFn/p
34Dq4J1Q52FAOS/s3NG0jRgbf+N7n4WBEGaum1+/CQ8mBqZfWcVA3IOQTm3v
ZkzSHQ8e5zCQuGO/q6Y+HxdNCnbGjBJYVmnRfBJbgIrahgRRH4F4ge6Re7AA
s0JVhya+IFD4zBvwblVhR+DeFW4TgcfZ5y9/G67GIkX4tO9TAvtkDaaBHjWW
OvqSLu4iYBvsm2j8QINp197qDbUROGOpusHMaHDBbNhLf1QR8A2nHOc1aXHU
k6T72ErAdKJgTXeiDn3Y/DTFQmChaFfXDo8Of1rNlFdXEngSxfEH1RTiVy2Z
P7IVBKLZBe1lkUV4xBbBzd9KIDc6ShL0XRHm2LetaCsnMK63nc3NL8YHX/8i
41Nv0888GQktwdm/98ovmglkts5cWNtRgs0q4ZCe2pzKokayBZcePTWwjrqt
5djpzsAW7DW4XTzqFWXrx9yNpch5jlv3AvXD0kaba2UZHn73lstvInCJ5wm/
M1KG33wm3fMn9fi6alV/hR7tt+clTlAvihA2XeUbkBtzId5DXRuzKd3lNqC2
1SK4Tc2/Pnt39etGtI51Zf1KXV8IYSftRmQ+jzw4Qr24Z1VUxbARHxdLO25R
J3iXvzoaZ0K/XZ48TO0VPlS2V5mwZ4NFcZP68muKKt+ACRPmZ5Dr1KJ/fmjo
iDbjYqH+3DXq83t+t981mPF97W/KQepp7um5Z5fMGBdSmX+V+j9Vx2/9
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.010133590385658886`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVx31Q03UcwPEJFcpJR7NUONYYdJtwyuwsLEk+n/z++AUBOxhuMZwKe+JB
2BPCzSkPjoaWrrgpZqAe+ESphXJIoAyxul2GmAoWUOpoNCFPScJN6Tr79sf7
3vcSqAxSbRCHw3mD9v9fXDJpZ5wpmPlmgfV+/4cwkCxag4MsusTJzFK2Bupa
TkleNqdh1BjfyxOUQ83QduP0VDo6p94xs45iKBpyWJQyCa69/xdbLVbBlXT1
3m5rFv484zZK3XlQe0CoZjuz8aNH0XNilIGc/Pv8svk5mLr97SCRKRuOyWeb
b8rW4z3HQt5UqAScUmc3xyFD8ZnDT3nB6dB6lrTa7shRGdnV5exPBWmgOXx3
RC7mtS3pqUt9D2JbQjLG9Qr0F6dlJMSzUNK+zxrcl4eG5RvDJjUpkNPmFn/p
34Dq4J1Q52FAOS/s3NG0jRgbf+N7n4WBEGaum1+/CQ8mBqZfWcVA3IOQTm3v
ZkzSHQ8e5zCQuGO/q6Y+HxdNCnbGjBJYVmnRfBJbgIrahgRRH4F4ge6Re7AA
s0JVhya+IFD4zBvwblVhR+DeFW4TgcfZ5y9/G67GIkX4tO9TAvtkDaaBHjWW
OvqSLu4iYBvsm2j8QINp197qDbUROGOpusHMaHDBbNhLf1QR8A2nHOc1aXHU
k6T72ErAdKJgTXeiDn3Y/DTFQmChaFfXDo8Of1rNlFdXEngSxfEH1RTiVy2Z
P7IVBKLZBe1lkUV4xBbBzd9KIDc6ShL0XRHm2LetaCsnMK63nc3NL8YHX/8i
41Nv0888GQktwdm/98ovmglkts5cWNtRgs0q4ZCe2pzKokayBZcePTWwjrqt
5djpzsAW7DW4XTzqFWXrx9yNpch5jlv3AvXD0kaba2UZHn73lstvInCJ5wm/
M1KG33wm3fMn9fi6alV/hR7tt+clTlAvihA2XeUbkBtzId5DXRuzKd3lNqC2
1SK4Tc2/Pnt39etGtI51Zf1KXV8IYSftRmQ+jzw4Qr24Z1VUxbARHxdLO25R
J3iXvzoaZ0K/XZ48TO0VPlS2V5mwZ4NFcZP68muKKt+ACRPmZ5Dr1KJ/fmjo
iDbjYqH+3DXq83t+t981mPF97W/KQepp7um5Z5fMGBdSmX+V+j9Vx2/9
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.010133590385658886`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{5.084745762711864*^-6, 0.1309914052846946}, {
                    4.890530841737235, 0.13929429986561412`}, {
                    9.624882394572946, 0.18613745709492846`}}], 
                    LineBox[CompressedData["
1:eJwVx39Q03UYwPFJLajDa0aRJDbUAjEp0AMDT57HhiAHrvjpVCDHBoPxa9vB
JJGYGAiINRlYN48Yg1gC323A4EZsIBEjWmgL8MgrYUy9667wmjDICvrwx/ve
99qVWZSY5Uaj0cJImw+Vxwyp44/iryx+4OnpCWDODrGXRo7isU7TKuPNCUhq
/cHslR6FqRpTy0r1GFgjAyJwKho9RmfvrhluwSVVJ/tlSSwKpJxtSXITVEyX
iR7/HodW34d3Fl4dhJzpq6VpKWysTdihS7g4AJNxvHrj+Q/Q/mDHyr1cA8iu
+/OiDQno2T1llv3dC6ms/+h7PZLwO1ONs3+mB9pSl2/8nJKMfUFXauqe7YGG
xAYj7WoKFh/uanpLqodWPau18n4qigXO55h0PSSu3mDU+HCQ1QHBniId7FG5
x9sLT6GyOcLb26UFoU5x/pnh0/jvYqdK36KFJI3lnZuuM2j7ZH96I18LaVu2
9qhj05GbLrSpQrXgHvXUyKzOwKhuoW/bK1oI/NPdkGX6EKs0anXJOgVhFxrN
FdVnMe+ipGzLHxTslZbyP93DxX1D6/T8eQr27cr+yzLFRUfZzSrZLAWCDceq
ozgTGeHLwrrbFKwk9I9+y+DhQHJb+/AkBYoUudg6yEPVmXX/h+MUVE4NP2g6
ycfYSIYifIyC7tJyW5STjy6nsS5mlIJHM8fadyqz8Ivm7tt9IxSIv+JGGMOy
kRGU/WXLMAWeAZcHLixkozpSETtupmDNl+ZyqxBg7l2WJYTYL/p5XcFrOZix
EXxt3EQBx8+X7TaWg/T441+LiO2FlXrO2Vw8GbLmdYD4o0Ln2twLQlywhp9w
Iz7R6vzmSK8Q2a4e6W9DFEiORyOfnYcei+c+myDWqNq6DKt5uHu6XtVPHFSQ
fM/SlI+NBw5auoiX8psqzcEFyOmT97UTj+xcYNyfK8DaUB9lC7H9vY8zb5UU
4pFLmu3NxF4+/sofmUVIT3M2KolluzPizJYiXOTy5j4nZv60PH8oRISHpS96
b7paAFs7qkRYLK3dfp3Ye/Cgb8mMCA/J7fWNxG879r/+S6AY73RM2hTEDv+l
NF25GP1i8mibHn3jVPkjqxiNc5HbGogD/vle3usnwSe5tvevEfdfWayaL5Ig
s8GqkxM/fqnr6caIBEUy9bub/h+f2aYv
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.05807161990492282}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.05807161990492282}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.05807161990492282, 
                    0.18613745709492846`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{5.084745762711864*^-6, 0.1309914052846946}, {
                    4.890530841737235, 0.13929429986561412`}, {
                    9.624882394572946, 0.18613745709492846`}}], 
                    LineBox[CompressedData["
1:eJwVx39Q03UYwPFJLajDa0aRJDbUAjEp0AMDT57HhiAHrvjpVCDHBoPxa9vB
JJGYGAiINRlYN48Yg1gC323A4EZsIBEjWmgL8MgrYUy9667wmjDICvrwx/ve
99qVWZSY5Uaj0cJImw+Vxwyp44/iryx+4OnpCWDODrGXRo7isU7TKuPNCUhq
/cHslR6FqRpTy0r1GFgjAyJwKho9RmfvrhluwSVVJ/tlSSwKpJxtSXITVEyX
iR7/HodW34d3Fl4dhJzpq6VpKWysTdihS7g4AJNxvHrj+Q/Q/mDHyr1cA8iu
+/OiDQno2T1llv3dC6ms/+h7PZLwO1ONs3+mB9pSl2/8nJKMfUFXauqe7YGG
xAYj7WoKFh/uanpLqodWPau18n4qigXO55h0PSSu3mDU+HCQ1QHBniId7FG5
x9sLT6GyOcLb26UFoU5x/pnh0/jvYqdK36KFJI3lnZuuM2j7ZH96I18LaVu2
9qhj05GbLrSpQrXgHvXUyKzOwKhuoW/bK1oI/NPdkGX6EKs0anXJOgVhFxrN
FdVnMe+ipGzLHxTslZbyP93DxX1D6/T8eQr27cr+yzLFRUfZzSrZLAWCDceq
ozgTGeHLwrrbFKwk9I9+y+DhQHJb+/AkBYoUudg6yEPVmXX/h+MUVE4NP2g6
ycfYSIYifIyC7tJyW5STjy6nsS5mlIJHM8fadyqz8Ivm7tt9IxSIv+JGGMOy
kRGU/WXLMAWeAZcHLixkozpSETtupmDNl+ZyqxBg7l2WJYTYL/p5XcFrOZix
EXxt3EQBx8+X7TaWg/T441+LiO2FlXrO2Vw8GbLmdYD4o0Ln2twLQlywhp9w
Iz7R6vzmSK8Q2a4e6W9DFEiORyOfnYcei+c+myDWqNq6DKt5uHu6XtVPHFSQ
fM/SlI+NBw5auoiX8psqzcEFyOmT97UTj+xcYNyfK8DaUB9lC7H9vY8zb5UU
4pFLmu3NxF4+/sofmUVIT3M2KolluzPizJYiXOTy5j4nZv60PH8oRISHpS96
b7paAFs7qkRYLK3dfp3Ye/Cgb8mMCA/J7fWNxG879r/+S6AY73RM2hTEDv+l
NF25GP1i8mibHn3jVPkjqxiNc5HbGogD/vle3usnwSe5tvevEfdfWayaL5Ig
s8GqkxM/fqnr6caIBEUy9bub/h+f2aYv
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.05807161990492282}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.05807161990492282}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.05807161990492282, 
                    0.18613745709492846`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[{{23.32684894499567, 0.27374417211554997`}, {
                    25.261194858050313`, 0.2856645794536828}, {
                    27.90511965896439, 0.29564480964827705`}}], 
                    LineBox[CompressedData["
1:eJwVzXkw1GEcx/FtVcqRHZ1EziFXNDkqmuc7kUTJHbFyrCWstcumjMXslChk
HJVjipAKrYQhodW0msGUp51GjZtRjS6sO6Pn98dn3vP666MXxvWKoNNoNEsy
qt/FnzYS/3lAz4qpzeAMRul3jcKdmzyB+bJSc74XIz/H9S0Ht3nDWm5wq0sZ
RpV+8lLs6wNmzNTNsiSM8r3yW2k5vrD/XTo9m4lRRYNjhWjEDyYS1FKHT2Pk
tVTKyNTwh6TPdoKaoxgZlCueHY8LgIUemAk0xyhaXJCs0HkRct7WZIkMMPKu
kVo+XQwEK+fuYyxtjII2qb54dIYJw47ZIcJ9GCk6rbbqZASDqN7QX3c3Ria/
FJsiXl8CS3PHFLE6RrYphR1pGSEgcpuvamdgdPDKVVauQSisWA9/iFDDyFSP
PSvtD4WP4a5mfjswityYXJpMDIO1EzYqxaoYLXg2S7oZ4dCX8KJ6L3GBbx6v
ty0csvUa7cUqGIn6O6eKLrBAQapGZxPXXRUOOM2xYEjm4GlFPC07VaVdEgES
752fNxPzqkOPt9qy4a91Hv6mjJGK8c2WlDE2MD88Zw8QL2vRFulpkXBneRRL
iHWdt4s5mlHQte5l0ULsr6vlTn8bBXpZaVF1xONxogb/kMsg7xj3qCa+Fje3
PKgUDZKuNZ9y4nMVc69ONEbDQ+Xk4jJivoszsNxjgM2fKishrimvrG1aigHP
6euy+8QWHJ+v0qJYCGIxku8R/44tEnVYcUDgmll2l7hLe4wxMsiBB+c9hoqo
/5OpYW8EcSDW4F6jvFPDqKRPhwtVsxUsyun6wW4dUi48SxQIKOt8lI/aHY4H
IbwMoJwRiVQf34gH++YcY8p72o5oCWTxUPklbCvlQ5PmB76Y8GDAt15eSDxp
9DtILORBaN2PQcoSwwDhdC8PVvIz2ykbr73Pa9Tlg5Jc/wnl5tsTN0a5fHBY
ML1H+Y967epGFx92/eTdovwf+q5jzg==
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.27374417211554997`}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.27374417211554997`}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.27374417211554997`, 
                    0.29564480964827705`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{23.32684894499567, 0.27374417211554997`}, {
                    25.261194858050313`, 0.2856645794536828}, {
                    27.90511965896439, 0.29564480964827705`}}], 
                    LineBox[CompressedData["
1:eJwVzXkw1GEcx/FtVcqRHZ1EziFXNDkqmuc7kUTJHbFyrCWstcumjMXslChk
HJVjipAKrYQhodW0msGUp51GjZtRjS6sO6Pn98dn3vP666MXxvWKoNNoNEsy
qt/FnzYS/3lAz4qpzeAMRul3jcKdmzyB+bJSc74XIz/H9S0Ht3nDWm5wq0sZ
RpV+8lLs6wNmzNTNsiSM8r3yW2k5vrD/XTo9m4lRRYNjhWjEDyYS1FKHT2Pk
tVTKyNTwh6TPdoKaoxgZlCueHY8LgIUemAk0xyhaXJCs0HkRct7WZIkMMPKu
kVo+XQwEK+fuYyxtjII2qb54dIYJw47ZIcJ9GCk6rbbqZASDqN7QX3c3Ria/
FJsiXl8CS3PHFLE6RrYphR1pGSEgcpuvamdgdPDKVVauQSisWA9/iFDDyFSP
PSvtD4WP4a5mfjswityYXJpMDIO1EzYqxaoYLXg2S7oZ4dCX8KJ6L3GBbx6v
ty0csvUa7cUqGIn6O6eKLrBAQapGZxPXXRUOOM2xYEjm4GlFPC07VaVdEgES
752fNxPzqkOPt9qy4a91Hv6mjJGK8c2WlDE2MD88Zw8QL2vRFulpkXBneRRL
iHWdt4s5mlHQte5l0ULsr6vlTn8bBXpZaVF1xONxogb/kMsg7xj3qCa+Fje3
PKgUDZKuNZ9y4nMVc69ONEbDQ+Xk4jJivoszsNxjgM2fKishrimvrG1aigHP
6euy+8QWHJ+v0qJYCGIxku8R/44tEnVYcUDgmll2l7hLe4wxMsiBB+c9hoqo
/5OpYW8EcSDW4F6jvFPDqKRPhwtVsxUsyun6wW4dUi48SxQIKOt8lI/aHY4H
IbwMoJwRiVQf34gH++YcY8p72o5oCWTxUPklbCvlQ5PmB76Y8GDAt15eSDxp
9DtILORBaN2PQcoSwwDhdC8PVvIz2ykbr73Pa9Tlg5Jc/wnl5tsTN0a5fHBY
ML1H+Y967epGFx92/eTdovwf+q5jzg==
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.27374417211554997`}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.27374417211554997`}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.27374417211554997`, 
                    0.29564480964827705`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVyntMk1ccxvHKMkEdBkRJdHXUG7c4gc3gxIzzG2It4hpuRRBUaAuFSq9R
LLe9DUoxQbCCbAlmjg5cZSziHJDiLOW2rpOyIPQsMogUS2BzkwoCJVbF8/7x
5Mkn+e7gy5JyPBgMxgEy+lmcEV+x7yFwP1tr7LluRW2t41Ude6Oh7kOBNZf6
EwXgX7lzpi9gm2ZfgunOMErWPTT6nYqF2SDbIdXEIzQYHRQFQ2yofa1w9PeP
oIuNP3I3K+PAlXJcsrN6FFGjJXLnv/Fwu+ykycqyobzRalUmjwuhwZb//7lm
Q3/EC64YihMgzKpd7nfakPrrQAG7PRHUliOFsxEYpR5+836wVzKET/o7K0UY
NaUu3hjhpUCo9YWcU4NRbVKtgVHNA8PSdCGrBSPd3cO68iepEKWJudzcjVGS
64bP5a1pIL5FrZMMYbSr0fP4lDQdIkJGxsPGMBK31RW/130SxJW4oGYKo2S9
OaxlOQPebph+eGwWo8w13j9/H3cKtIv5+on/MPKMfWUI0JyGF3s67rjnMAp5
7tme8+AM9Er0m6PnMYosvW6kNFlQtNG/esNLjIILVcKaXdnAzqvXsxcxCt2R
O28eygbkvpAVs4SRaNXhcpzjg45a7XQSLyV29Pb5CIBpfMPPWcaojqdVDHYJ
wO+qZXiAuHyoe7r+hBDsE00VXi6MflKVPYpdEAJl8BJEEc/YjjRvb8iBwksZ
DXxixa3sKENkLgSWUN+VEn8QVNlZas+Fb4ueHdUSrzAZyx6UCAaqTqhvErPY
69ok2/KAw2GKWojTWEyuR38e2Et43r8QT0nL76Zl5YPuoHW+i7hIurDyeL0Y
Zv6ajekm/lK3cP/ze2L4zCWT9hIrOWwQcs/C8Cdb3H3E+sam1nbXWSi+raoa
IP5YkvK3ub4AFKgpzEw8V1BfbgyXQKV+z5bfiU3b7T5PHktg7crBp7SnYr7i
95yXgtfguXwLsd/WwAZrgAyskT1xtNU7T8cbzTIYV0vv033A8OLkgQg5UIxL
dtoaEfL+oUIOPb6W/XTv3/Up87xNDokJJfG09zn2fjQWooC3v4nSaTsC5zLb
yhTgas5Q0e7dnV42M6iAirHEb2gHuS3aeywlCNv362l3VD2tmJQpYU02p5O2
c1Prq1WTEp4/CO+j/Q7nH8lh
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.22328957776866062`}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.22328957776866062`}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.22328957776866062`, 
                    0.34324854816345757`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVyntMk1ccxvHKMkEdBkRJdHXUG7c4gc3gxIzzG2It4hpuRRBUaAuFSq9R
LLe9DUoxQbCCbAlmjg5cZSziHJDiLOW2rpOyIPQsMogUS2BzkwoCJVbF8/7x
5Mkn+e7gy5JyPBgMxgEy+lmcEV+x7yFwP1tr7LluRW2t41Ude6Oh7kOBNZf6
EwXgX7lzpi9gm2ZfgunOMErWPTT6nYqF2SDbIdXEIzQYHRQFQ2yofa1w9PeP
oIuNP3I3K+PAlXJcsrN6FFGjJXLnv/Fwu+ykycqyobzRalUmjwuhwZb//7lm
Q3/EC64YihMgzKpd7nfakPrrQAG7PRHUliOFsxEYpR5+836wVzKET/o7K0UY
NaUu3hjhpUCo9YWcU4NRbVKtgVHNA8PSdCGrBSPd3cO68iepEKWJudzcjVGS
64bP5a1pIL5FrZMMYbSr0fP4lDQdIkJGxsPGMBK31RW/130SxJW4oGYKo2S9
OaxlOQPebph+eGwWo8w13j9/H3cKtIv5+on/MPKMfWUI0JyGF3s67rjnMAp5
7tme8+AM9Er0m6PnMYosvW6kNFlQtNG/esNLjIILVcKaXdnAzqvXsxcxCt2R
O28eygbkvpAVs4SRaNXhcpzjg45a7XQSLyV29Pb5CIBpfMPPWcaojqdVDHYJ
wO+qZXiAuHyoe7r+hBDsE00VXi6MflKVPYpdEAJl8BJEEc/YjjRvb8iBwksZ
DXxixa3sKENkLgSWUN+VEn8QVNlZas+Fb4ueHdUSrzAZyx6UCAaqTqhvErPY
69ok2/KAw2GKWojTWEyuR38e2Et43r8QT0nL76Zl5YPuoHW+i7hIurDyeL0Y
Zv6ajekm/lK3cP/ze2L4zCWT9hIrOWwQcs/C8Cdb3H3E+sam1nbXWSi+raoa
IP5YkvK3ub4AFKgpzEw8V1BfbgyXQKV+z5bfiU3b7T5PHktg7crBp7SnYr7i
95yXgtfguXwLsd/WwAZrgAyskT1xtNU7T8cbzTIYV0vv033A8OLkgQg5UIxL
dtoaEfL+oUIOPb6W/XTv3/Up87xNDokJJfG09zn2fjQWooC3v4nSaTsC5zLb
yhTgas5Q0e7dnV42M6iAirHEb2gHuS3aeywlCNv362l3VD2tmJQpYU02p5O2
c1Prq1WTEp4/CO+j/Q7nH8lh
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.22328957776866062`}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.22328957776866062`}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.22328957776866062`, 
                    0.34324854816345757`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVyX8w23ccx/Ekrsd+uItl69ZRScsQyn7YomzyefuxjCLa+BVK6kd+GBJJ
imatNL3sgq6sXVVvo70K649VV62jFzQVrPoj8tUOJ9Ohmp1jN7ROixTZ9/vH
6573uNeO3GKeiEIikULxEWU2fdntrQ6GkQlddl+ICb2fO26jOYLBnrjn0tZk
E7rwRc3VichQUD4JoGrWelFry5MTHbvYIL7uZVF39iP6aDd3oScCBN2ZzxXN
d1GS/qGRlhUN5/xem8dF95CZ7RsGFg7s1n5F/mDiPvq+8Sr3XWUslB//1887
7CHSDB+RL87Fwd92EZkVY0b5wzWqzBQuRCy/xeygD6IHcXnVhsN7wVC67nbF
OoiOnfXJ47Tvg5iGgESNwIJSoza2+LkkAXszpJ5rsaDm1OWGP1OSIdApZOKW
J4ZO804bSDUpMCYbM5jTMKS/EaXXTqYCB1VVrukwxFtpoFZt44PsZgVt7iKG
vBqd46dl6fDNH+zYgz0YKmitPex0JwMexG+E//4YQ0mXBz7+7dV+2JJGngyf
xFAm2fVmU2wWHPDXayJmMeQcbTfQKwRw3uWgv/sihpjzzu2i2wdAPDO64raM
IVb5GaOmIhsiy65IXFYx5FemEv7olQPlkr6523YM+e8Qvxiw5MDgzA/z1nUM
SRy2FVtJLnx+ZHM2YxNDL/d19PZR8+DsfCA/34Gh2pRTCnNnHpTu3m9ik4aQ
1nLnn7o0IdB7aYce4b6mUj+OXhJC2/O910PJQ2hm5Otft9eLgCJwrzyJW3Ex
J8zAEgMjsTDVgvtt38pb5U/FUFsl+8+Be9WD9IqikUBCzDNXBmUIMThvtEo/
zAenvuoLLNx8hgeX0p8PlFpWAgf3tEx7g5/9LdwVOZJ4uL+TLa1a3yyALs7a
T1m4E/RLXeFtBTD7S5NKjFsZwwEhtxA+E7+EItyXG5tb2lcKYd34QiLHHShN
Hh+oK4KgaqqLAvdCUZ3W+IkUxNAfoMTds/0pddIqhc5r8aOEpyOP5ppKZdCU
XtRFmLbNp36QXgzMaIpzCe5jOwVxxoFicLO/d7QMN/3R8lTIp3IIyihREa6Q
INdLOjm4W6WehLd2BnuUjsihq59/knCQbZfnX0wFREV9ZCJs81nIbFUrYGrE
YSXc652unjErYEz38wZh39f3T7UxlLDznjToEO6OE890U8VKSDQO8wgvvtNi
d/Tgv7C5kPD/lr+qtg==
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.1267016383460332}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.1267016383460332}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.1267016383460332, 
                    0.24226277118467104`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVyX8w23ccx/Ekrsd+uItl69ZRScsQyn7YomzyefuxjCLa+BVK6kd+GBJJ
imatNL3sgq6sXVVvo70K649VV62jFzQVrPoj8tUOJ9Ohmp1jN7ROixTZ9/vH
6573uNeO3GKeiEIikULxEWU2fdntrQ6GkQlddl+ICb2fO26jOYLBnrjn0tZk
E7rwRc3VichQUD4JoGrWelFry5MTHbvYIL7uZVF39iP6aDd3oScCBN2ZzxXN
d1GS/qGRlhUN5/xem8dF95CZ7RsGFg7s1n5F/mDiPvq+8Sr3XWUslB//1887
7CHSDB+RL87Fwd92EZkVY0b5wzWqzBQuRCy/xeygD6IHcXnVhsN7wVC67nbF
OoiOnfXJ47Tvg5iGgESNwIJSoza2+LkkAXszpJ5rsaDm1OWGP1OSIdApZOKW
J4ZO804bSDUpMCYbM5jTMKS/EaXXTqYCB1VVrukwxFtpoFZt44PsZgVt7iKG
vBqd46dl6fDNH+zYgz0YKmitPex0JwMexG+E//4YQ0mXBz7+7dV+2JJGngyf
xFAm2fVmU2wWHPDXayJmMeQcbTfQKwRw3uWgv/sihpjzzu2i2wdAPDO64raM
IVb5GaOmIhsiy65IXFYx5FemEv7olQPlkr6523YM+e8Qvxiw5MDgzA/z1nUM
SRy2FVtJLnx+ZHM2YxNDL/d19PZR8+DsfCA/34Gh2pRTCnNnHpTu3m9ik4aQ
1nLnn7o0IdB7aYce4b6mUj+OXhJC2/O910PJQ2hm5Otft9eLgCJwrzyJW3Ex
J8zAEgMjsTDVgvtt38pb5U/FUFsl+8+Be9WD9IqikUBCzDNXBmUIMThvtEo/
zAenvuoLLNx8hgeX0p8PlFpWAgf3tEx7g5/9LdwVOZJ4uL+TLa1a3yyALs7a
T1m4E/RLXeFtBTD7S5NKjFsZwwEhtxA+E7+EItyXG5tb2lcKYd34QiLHHShN
Hh+oK4KgaqqLAvdCUZ3W+IkUxNAfoMTds/0pddIqhc5r8aOEpyOP5ppKZdCU
XtRFmLbNp36QXgzMaIpzCe5jOwVxxoFicLO/d7QMN/3R8lTIp3IIyihREa6Q
INdLOjm4W6WehLd2BnuUjsihq59/knCQbZfnX0wFREV9ZCJs81nIbFUrYGrE
YSXc652unjErYEz38wZh39f3T7UxlLDznjToEO6OE890U8VKSDQO8wgvvtNi
d/Tgv7C5kPD/lr+qtg==
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.1267016383460332}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.1267016383460332}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.1267016383460332, 
                    0.24226277118467104`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVzX8w23cYB/BM9ajFzcbpWjShLbGaUTfdavF5pprVVFY0qhZGEj8rJFmp
WohLi06nelK9jnWVKUaqku8Sl66IH2NVZRXhSkdpOsSGVq1ML5d9v3+8732v
P57n7c7Jjkq2IpFIn+Ah2sWD3Gd+lwyxfVf4WQltaI29N3K+whHu91z/7XfT
LdQ36GFTzNkDZ2xDnM8nNiKK72L1/jBfkOnttl2gNKDtnEmjoyUA9EIOv/bz
BnTjw/LmqZCPIY6jLaVLGlGr4vFFjU8w8PN/eTq6rwlRxu4yl3WfgnpX/bgx
QIGi5fc7HONDocvl5XiNdwsaDPY6CEMM2NubuRRquI3O1TYznURhEJetN5D3
K5Fk9BvBiikczMzN8ocPlChttDyPzWLC4fCYqZefqdBAOPc7bf4x+DpaFBCs
UqGiq55chjoScjp/WHQyq1DMIfNWmm00lEQE0+uDMFQXs1ajZx2HM2eXxiTp
GKqMqtSSylnwd1OX4vy3GJIrD8ml0zEQ8aNPGa8OQ1HrNQ4XdsRCrltSXagG
Q7trbY7OZp2E2/9F6Mt6MZTRKsvf0hkHsqCiXN0QhqIb+z9oevUlVLI/MrUb
MMR+w171U1g8cFrE16ImMWQTuqmllCTAYrOu230aQ95LNurk9q+AW2BNM81g
KFB8pUNSkgiqS+dYFCOGaLl5vEu7k4A+MPGP/BmG3nNPedE/lASzlraRib8w
lGoxrhtPc2DjZoWyZQ5D/0ZqunscuGD/1lZz0DyGZKzLwsE7XHARewQqcUuH
Op9VneDBSuqCtfUChm7lFYyErvKAnEz1D8E9Zzh80606GU4M91NP4xbWJx3U
BqYAbQuNIsNN9iptE8+kgMxJ3NmEe8OV9MpKkgpd84U77+KmMra18nemQVKp
YOIe7liqK9OqF/c+9eMx3LNZUmVsYjqQh6dWp3GfzVrdeGSXAfG9gmEj7gj5
6q90LAP8bRMZ87hFRxjAY54CZ5v0ngXcjbV1CvX6KfCkfHF1Eff7/OOT/VWZ
UP3cL2wJ93JmlbTDjw/+14+WLePWuc04TD/iw4sD7J9XiP2QQk5XThYYFdzv
n+N23OFZ/YCSDXbSN90IF3kkhHf0Z4NFcaSCuKc8XHtywF8AxwrHxwiXpCL7
hmIBaOikYuKf850A1xyDADKcBq4R9jX67JrwFkKacaSBsNFzmd1aIITtig4D
4e49JwvmBoUgzTSRiD2v1/cuY1QRtDv4vE1Yc/Fp8ZNsEfzJuuFBeOUdxaZF
J4LXfn/4E/4fEqnghQ==
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.0432093153989729}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.0432093153989729}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.0432093153989729, 
                    0.08737840819664677}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVzX8w23cYB/BM9ajFzcbpWjShLbGaUTfdavF5pprVVFY0qhZGEj8rJFmp
WohLi06nelK9jnWVKUaqku8Sl66IH2NVZRXhSkdpOsSGVq1ML5d9v3+8732v
P57n7c7Jjkq2IpFIn+Ah2sWD3Gd+lwyxfVf4WQltaI29N3K+whHu91z/7XfT
LdQ36GFTzNkDZ2xDnM8nNiKK72L1/jBfkOnttl2gNKDtnEmjoyUA9EIOv/bz
BnTjw/LmqZCPIY6jLaVLGlGr4vFFjU8w8PN/eTq6rwlRxu4yl3WfgnpX/bgx
QIGi5fc7HONDocvl5XiNdwsaDPY6CEMM2NubuRRquI3O1TYznURhEJetN5D3
K5Fk9BvBiikczMzN8ocPlChttDyPzWLC4fCYqZefqdBAOPc7bf4x+DpaFBCs
UqGiq55chjoScjp/WHQyq1DMIfNWmm00lEQE0+uDMFQXs1ajZx2HM2eXxiTp
GKqMqtSSylnwd1OX4vy3GJIrD8ml0zEQ8aNPGa8OQ1HrNQ4XdsRCrltSXagG
Q7trbY7OZp2E2/9F6Mt6MZTRKsvf0hkHsqCiXN0QhqIb+z9oevUlVLI/MrUb
MMR+w171U1g8cFrE16ImMWQTuqmllCTAYrOu230aQ95LNurk9q+AW2BNM81g
KFB8pUNSkgiqS+dYFCOGaLl5vEu7k4A+MPGP/BmG3nNPedE/lASzlraRib8w
lGoxrhtPc2DjZoWyZQ5D/0ZqunscuGD/1lZz0DyGZKzLwsE7XHARewQqcUuH
Op9VneDBSuqCtfUChm7lFYyErvKAnEz1D8E9Zzh80606GU4M91NP4xbWJx3U
BqYAbQuNIsNN9iptE8+kgMxJ3NmEe8OV9MpKkgpd84U77+KmMra18nemQVKp
YOIe7liqK9OqF/c+9eMx3LNZUmVsYjqQh6dWp3GfzVrdeGSXAfG9gmEj7gj5
6q90LAP8bRMZ87hFRxjAY54CZ5v0ngXcjbV1CvX6KfCkfHF1Eff7/OOT/VWZ
UP3cL2wJ93JmlbTDjw/+14+WLePWuc04TD/iw4sD7J9XiP2QQk5XThYYFdzv
n+N23OFZ/YCSDXbSN90IF3kkhHf0Z4NFcaSCuKc8XHtywF8AxwrHxwiXpCL7
hmIBaOikYuKf850A1xyDADKcBq4R9jX67JrwFkKacaSBsNFzmd1aIITtig4D
4e49JwvmBoUgzTSRiD2v1/cuY1QRtDv4vE1Yc/Fp8ZNsEfzJuuFBeOUdxaZF
J4LXfn/4E/4fEqnghQ==
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.0432093153989729}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.0432093153989729}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.0432093153989729, 
                    0.08737840819664677}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAEQUFCxp/OEBOS7S7bqo3Pp81jard
QjlAvYirklK3KL6vq9uLtSw+QEKe3cDP3ww+H9W7Tu6/QUD84iIaloHuvVOh
yr0TXURAkMrKkVBp073LPic6QM1GQK7hYy7kZds9g6CqThRySUBKJg68QGbj
PX/Te3Dv6UtA+/VYZHHY5T1o0414XFVOQHh9lwj9lPE9yUtjjLh6UEBXC8kS
yAjpvYCWJmNGtFFAFgIBR+/Cx71WQ/0FKAhTQO7sArZbtvG9o1b0m9JVVEBM
0EluJforvpJSkrgAjVVAb14oWuUpzr2hsEOhgt5WQESn1fIpj/C9UvebEIgZ
WEC51AdjPVPTvSOgB0zhbllA7M/3UQGVw71qr5N6A75aQNCPM7EZRh0+U6fG
L6n2W0DEhekFhIDWPVwBDbGiSV1AjKX2P+8/5r0HRPq4H4ZeQD+t4KpiByi+
Ke0HtGW8X0DhzQE92tEEvjZ8lL1/hmBAhRrs/1kbxT0odnhkjiNhQCB0gDwm
VP+97QovKGyPYUAqtr0ON+U4vhtwwBg=
                    "]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAArupwLu2BYkAqtr0ON+U4vvVRtcHC
EGNAIG8XaRnJ3r2TVZBxy7ljQM42PEGvrCQ+gs2+5JVXZED4alDJHC74Pax4
fdFE8mRAmbmQpNa1JL7m1EWkHZplQIiqj5ERWDG+caVhOrg2ZkBsu2WErhAX
vgwnh7Z84GZA3syLaAKcKT74HAD2An9nQFqFTpDuTi0+IEYJr20aaEAUH3dH
sZMlPlggHE4Cw2hAgG5kIlLpCr7hboKwWGBpQPrH6ezMpSa+eW7y+NgKakBQ
8Z/+M/Qavk2h8ro9smpA8LVJE0ZU/b1ySEZAZE5rQNrkBJWelw8+p6Cjq7T3
a0DOJ/gYr3wWPi1tVNrGlWxAiazW73qNAL7ubJWCvTBtQEkxmKWXdxC+vx3g
EN7YbUB6ZXb2iqUavuFCfmLAdW5AXh3q9dPkI74TGSaazB9vQIsDaU+e9Be+
gCJeS73Gb0A+yV7DW3oMPh/Q9N83MXBAcVBZ0rUEBT6GZz8NpoVwQPJIVgpm
4cq9FrkzHHXUcEBGohfaxkPYPS7jLB7ZKXFAJ8A6Wpyy4T3jJu5cr31xQI7t
Q9bOS8E9wSRZfebLcUBQj6dSOPnFvSf7yJCyIHJArB4+I5SMob21i+KF329y
QEDomeuBkFO97xKr+v+/ckC8+Jj48KyRvTPt9I4=
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-5.79640533822452*^-9, 
                    5.510112306765153*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAEQUFCxp/OEBOS7S7bqo3Pp81jard
QjlAvYirklK3KL6vq9uLtSw+QEKe3cDP3ww+H9W7Tu6/QUD84iIaloHuvVOh
yr0TXURAkMrKkVBp073LPic6QM1GQK7hYy7kZds9g6CqThRySUBKJg68QGbj
PX/Te3Dv6UtA+/VYZHHY5T1o0414XFVOQHh9lwj9lPE9yUtjjLh6UEBXC8kS
yAjpvYCWJmNGtFFAFgIBR+/Cx71WQ/0FKAhTQO7sArZbtvG9o1b0m9JVVEBM
0EluJforvpJSkrgAjVVAb14oWuUpzr2hsEOhgt5WQESn1fIpj/C9UvebEIgZ
WEC51AdjPVPTvSOgB0zhbllA7M/3UQGVw71qr5N6A75aQNCPM7EZRh0+U6fG
L6n2W0DEhekFhIDWPVwBDbGiSV1AjKX2P+8/5r0HRPq4H4ZeQD+t4KpiByi+
Ke0HtGW8X0DhzQE92tEEvjZ8lL1/hmBAhRrs/1kbxT0odnhkjiNhQCB0gDwm
VP+97QovKGyPYUAqtr0ON+U4vhtwwBg=
                    "]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAArupwLu2BYkAqtr0ON+U4vvVRtcHC
EGNAIG8XaRnJ3r2TVZBxy7ljQM42PEGvrCQ+gs2+5JVXZED4alDJHC74Pax4
fdFE8mRAmbmQpNa1JL7m1EWkHZplQIiqj5ERWDG+caVhOrg2ZkBsu2WErhAX
vgwnh7Z84GZA3syLaAKcKT74HAD2An9nQFqFTpDuTi0+IEYJr20aaEAUH3dH
sZMlPlggHE4Cw2hAgG5kIlLpCr7hboKwWGBpQPrH6ezMpSa+eW7y+NgKakBQ
8Z/+M/Qavk2h8ro9smpA8LVJE0ZU/b1ySEZAZE5rQNrkBJWelw8+p6Cjq7T3
a0DOJ/gYr3wWPi1tVNrGlWxAiazW73qNAL7ubJWCvTBtQEkxmKWXdxC+vx3g
EN7YbUB6ZXb2iqUavuFCfmLAdW5AXh3q9dPkI74TGSaazB9vQIsDaU+e9Be+
gCJeS73Gb0A+yV7DW3oMPh/Q9N83MXBAcVBZ0rUEBT6GZz8NpoVwQPJIVgpm
4cq9FrkzHHXUcEBGohfaxkPYPS7jLB7ZKXFAJ8A6Wpyy4T3jJu5cr31xQI7t
Q9bOS8E9wSRZfebLcUBQj6dSOPnFvSf7yJCyIHJArB4+I5SMob21i+KF329y
QEDomeuBkFO97xKr+v+/ckC8+Jj48KyRvTPt9I4=
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-5.79640533822452*^-9, 
                    5.510112306765153*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAHV2U9TfkQ0A8LSrHJ81VPlOhyr0T
XURATFfCXHCIOj7LPic6QM1GQBKvIOgfnvU9g6CqThRySUAHFOZYFQPxvX/T
e3Dv6UtAAwY98myo9b1o0414XFVOQKLCxgAPkwG+yUtjjLh6UED5vCis8Qj5
PYCWJmNGtFFAnv7cKwfD1z1WQ/0FKAhTQJa6H99btgE+o1b0m9JVVED8NR5W
Jfo7PpJSkrgAjVVAAslMDeUp3j2hsEOhgt5WQAgFjtIrjwA+UvebEIgZWED5
1O9WQlPjPSOgB0zhbllA3hkrBAKV0z1qr5N6A75aQCZ8lcwZRi2+U6fGL6n2
W0DyTjEdhIDmvVwBDbGiSV1ApivSj+8/9j0HRPq4H4ZeQAvC87FiBzg+Ke0H
tGW8X0BOTjM92tEUPjZ8lL1/hmBAftZbYVkb1b0odnhkjiNhQOBzHVImVA8+
KiFm8cbNYUDmY32V0RNTPmf/4/fjdGJAVk2lPqMfSz71UbXBwhBjQDDYKlEa
ye49k1WQccu5Y0AWzIlDr6w0voLNvuSVV2RAaKQO2xwuCL6seH3RRPJkQLqk
H6bWtTQ+5tRFpB2aZUCwB9WUEVhBPnGlYTq4NmZAFEfgj64QJz4MJ4e2fOBm
QCMSn2gCnDm++BwA9gJ/Z0AcBp2T7k49viBGCa9tGmhA4xT2TLGTNb5YIBxO
AsNoQGxZDRtS6Ro+4W6CsFhgaUAaAwntzKU2Pnlu8vjYCmpAlOIyADT0Kj5N
ofK6PbJqQP4eHiRGVA0+ckhGQGROa0BXx3yInpcfvqego6u092tAEhO+Eq98
Jr4tbVTaxpVsQPnvf/l6jRA+7myVgr0wbUCHsJCol3cgPr8d4BDe2G1AAA44
94qlKj7hQn5iwHVuQJ5+W/XT5DM+Exkmmswfb0DzFeNNnvQnPoAiXku9xm9A
03zgxFt6HL4f0PTfNzFwQMDqlNW1BBW+hmc/DaaFcED0tTO8ZeHaPRa5Mxx1
1HBAHJCc/sZD6L0u4ywe2SlxQJQNOWucsvG94ybuXK99cUBXV9UOz0vRvcEk
WX3my3FAhtPpFTj51T0n+8iQsiByQJjCwYeSjLE9tYvihd9vckBQCcOOUJBj
Pe8Sq/r/v3JAG0h4g/CsoT3QmYbi
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-6.823876847103151*^-9, 
                    2.030412500157745*^-8}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAHV2U9TfkQ0A8LSrHJ81VPlOhyr0T
XURATFfCXHCIOj7LPic6QM1GQBKvIOgfnvU9g6CqThRySUAHFOZYFQPxvX/T
e3Dv6UtAAwY98myo9b1o0414XFVOQKLCxgAPkwG+yUtjjLh6UED5vCis8Qj5
PYCWJmNGtFFAnv7cKwfD1z1WQ/0FKAhTQJa6H99btgE+o1b0m9JVVED8NR5W
Jfo7PpJSkrgAjVVAAslMDeUp3j2hsEOhgt5WQAgFjtIrjwA+UvebEIgZWED5
1O9WQlPjPSOgB0zhbllA3hkrBAKV0z1qr5N6A75aQCZ8lcwZRi2+U6fGL6n2
W0DyTjEdhIDmvVwBDbGiSV1ApivSj+8/9j0HRPq4H4ZeQAvC87FiBzg+Ke0H
tGW8X0BOTjM92tEUPjZ8lL1/hmBAftZbYVkb1b0odnhkjiNhQOBzHVImVA8+
KiFm8cbNYUDmY32V0RNTPmf/4/fjdGJAVk2lPqMfSz71UbXBwhBjQDDYKlEa
ye49k1WQccu5Y0AWzIlDr6w0voLNvuSVV2RAaKQO2xwuCL6seH3RRPJkQLqk
H6bWtTQ+5tRFpB2aZUCwB9WUEVhBPnGlYTq4NmZAFEfgj64QJz4MJ4e2fOBm
QCMSn2gCnDm++BwA9gJ/Z0AcBp2T7k49viBGCa9tGmhA4xT2TLGTNb5YIBxO
AsNoQGxZDRtS6Ro+4W6CsFhgaUAaAwntzKU2Pnlu8vjYCmpAlOIyADT0Kj5N
ofK6PbJqQP4eHiRGVA0+ckhGQGROa0BXx3yInpcfvqego6u092tAEhO+Eq98
Jr4tbVTaxpVsQPnvf/l6jRA+7myVgr0wbUCHsJCol3cgPr8d4BDe2G1AAA44
94qlKj7hQn5iwHVuQJ5+W/XT5DM+Exkmmswfb0DzFeNNnvQnPoAiXku9xm9A
03zgxFt6HL4f0PTfNzFwQMDqlNW1BBW+hmc/DaaFcED0tTO8ZeHaPRa5Mxx1
1HBAHJCc/sZD6L0u4ywe2SlxQJQNOWucsvG94ybuXK99cUBXV9UOz0vRvcEk
WX3my3FAhtPpFTj51T0n+8iQsiByQJjCwYeSjLE9tYvihd9vckBQCcOOUJBj
Pe8Sq/r/v3JAG0h4g/CsoT3QmYbi
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-6.823876847103151*^-9, 
                    2.030412500157745*^-8}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAuAVoFCfJSEC5VpvZfaZWPoOgqk4U
cklADCz6zS2aOT5/03tw7+lLQCwcAz81YA8+aNONeFxVTkA7HHu0hRYEPslL
Y4y4elBAF+V3RAlp+L2AliZjRrRRQMgaoQQYKNe9VkP9BSgIU0DqmFevorAB
vqNW9JvSVVRAqpTawO/5O76SUpK4AI1VQDphu7B6IN69obBDoYLeVkAEiC7P
cI4AvlL3mxCIGVhA1LeRNylR470joAdM4W5ZQK4oDZPYkdO9aq+TegO+WkCq
Ud0uMEYtPlOnxi+p9ltApW2BHKWB5j1cAQ2xokldQG75JLVwP/a9B0T6uB+G
XkDX0Zp0XAc4vintB7RlvF9AbGNH+r7RFL42fJS9f4ZgQM8mbvAKHdU9KHZ4
ZI4jYUCwZfPz8lMPviohZvHGzWFAWvsgs9ATU75n/+P343RiQPBarBWhH0u+
9VG1wcIQY0CAiNg+UMjuvZNVkHHLuWNAt9DWS7asND6Czb7klVdkQKCNAKlO
Lgg+rHh90UTyZEAolQ1u0bU0vubURaQdmmVA9HeIQA9YQb5xpWE6uDZmQCT+
2k2jECe+DCeHtnzgZkD8vXyTCZw5PvgcAPYCf2dAmIEh4fVOPT4gRgmvbRpo
QLrB6zy4kzU+WCAcTgLDaECsGfNZO+kavuFugrBYYGlAnFDB9MelNr55bvL4
2ApqQMY2V00p9Cq+TaHyuj2yakDajtywF1QNvnJIRkBkTmtA6EwoJ7iXHz6n
oKOrtPdrQKb1xj28fCY+LW1U2saVbEAueLxpY40Qvu5slYK9MG1AtoKLUox3
IL6/HeAQ3thtQMd+gUCApSq+4UJ+YsB1bkBoKv7jzuQzvhMZJprMH29A/c8k
Y5P0J76AIl5LvcZvQClZXhB1ehw+H9D03zcxcECIeJHPzgQVPoZnPw2mhXBA
xmRmTubf2r0WuTMcddRwQN8PlWyIROg9LuMsHtkpcUD++Khs/bLxPeMm7lyv
fXFAFx3wtFBN0T3BJFl95stxQCY17FO499W9J/vIkLIgckBw2gFBkYaxvbWL
4oXfb3JAsPWeuBDQYr3vEqv6/79yQO0UIvfpoKG9GXKKIw==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.7767216316457464`*^-8, 
                    2.1094789559960693`*^-8}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAuAVoFCfJSEC5VpvZfaZWPoOgqk4U
cklADCz6zS2aOT5/03tw7+lLQCwcAz81YA8+aNONeFxVTkA7HHu0hRYEPslL
Y4y4elBAF+V3RAlp+L2AliZjRrRRQMgaoQQYKNe9VkP9BSgIU0DqmFevorAB
vqNW9JvSVVRAqpTawO/5O76SUpK4AI1VQDphu7B6IN69obBDoYLeVkAEiC7P
cI4AvlL3mxCIGVhA1LeRNylR470joAdM4W5ZQK4oDZPYkdO9aq+TegO+WkCq
Ud0uMEYtPlOnxi+p9ltApW2BHKWB5j1cAQ2xokldQG75JLVwP/a9B0T6uB+G
XkDX0Zp0XAc4vintB7RlvF9AbGNH+r7RFL42fJS9f4ZgQM8mbvAKHdU9KHZ4
ZI4jYUCwZfPz8lMPviohZvHGzWFAWvsgs9ATU75n/+P343RiQPBarBWhH0u+
9VG1wcIQY0CAiNg+UMjuvZNVkHHLuWNAt9DWS7asND6Czb7klVdkQKCNAKlO
Lgg+rHh90UTyZEAolQ1u0bU0vubURaQdmmVA9HeIQA9YQb5xpWE6uDZmQCT+
2k2jECe+DCeHtnzgZkD8vXyTCZw5PvgcAPYCf2dAmIEh4fVOPT4gRgmvbRpo
QLrB6zy4kzU+WCAcTgLDaECsGfNZO+kavuFugrBYYGlAnFDB9MelNr55bvL4
2ApqQMY2V00p9Cq+TaHyuj2yakDajtywF1QNvnJIRkBkTmtA6EwoJ7iXHz6n
oKOrtPdrQKb1xj28fCY+LW1U2saVbEAueLxpY40Qvu5slYK9MG1AtoKLUox3
IL6/HeAQ3thtQMd+gUCApSq+4UJ+YsB1bkBoKv7jzuQzvhMZJprMH29A/c8k
Y5P0J76AIl5LvcZvQClZXhB1ehw+H9D03zcxcECIeJHPzgQVPoZnPw2mhXBA
xmRmTubf2r0WuTMcddRwQN8PlWyIROg9LuMsHtkpcUD++Khs/bLxPeMm7lyv
fXFAFx3wtFBN0T3BJFl95stxQCY17FO499W9J/vIkLIgckBw2gFBkYaxvbWL
4oXfb3JAsPWeuBDQYr3vEqv6/79yQO0UIvfpoKG9GXKKIw==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {-1.7767216316457464`*^-8, 
                    2.1094789559960693`*^-8}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAV6Et/JDoRkALIw0M4UJAP4Ogqk4U
cklAAKNaSaXqLD9/03tw7+lLQFSrxRpR9xw/aNONeFxVTkD7+HVSwhUQP8lL
Y4y4elBAbutBlVvcAj+AliZjRrRRQLQ9jMiqJfk+VkP9BSgIU0A27fU9TcLx
PqNW9JvSVVRArV4zpc4/6z6SUpK4AI1VQEjY0awWk+Y+obBDoYLeVkC+P7b1
3VXjPlL3mxCIGVhAGHCi7GBX4T4joAdM4W5ZQGrhgsKCx98+aq+TegO+WkAw
HHYH1NPdPlOnxi+p9ltAMnvmtd2R3D5cAQ2xokldQBW+QhEGmNs+B0T6uB+G
XkAFTw5kPffaPintB7RlvF9AaCV3GLR72j42fJS9f4ZgQJTcJUXzHNo+KHZ4
ZI4jYUDkBXuQ+N7ZPiohZvHGzWFAxAcB0Ku/2T5n/+P343RiQAhal/W8l9k+
9VG1wcIQY0C0XMpTw3LZPpNVkHHLuWNAwU8mN2Za2T6Czb7klVdkQDp6N22p
Udk+rHh90UTyZEB5kYqjC07ZPubURaQdmmVApdqEHtRJ2T5xpWE6uDZmQHzl
6IDMPtk+DCeHtnzgZkC2Sp/hXTHZPvgcAPYCf2dAqIt3l58t2T4gRgmvbRpo
QA6EPC56Ldk+WCAcTgLDaEBaWdSK7TLZPuFugrBYYGlAb5JcZbQ12T55bvL4
2ApqQGqwmjuCMtk+TaHyuj2yakA3PYGkWy/ZPnJIRkBkTmtAm4GsYQ0s2T6n
oKOrtPdrQBuUaDngKtk+LW1U2saVbECKAfvIhi7ZPu5slYK9MG1AM3YBtWkv
2T6/HeAQ3thtQNPMoauVMNk+4UJ+YsB1bkB7WPK5LDLZPhMZJprMH29A0RWv
HSYw2T6AIl5LvcZvQMlajVFUK9k+H9D03zcxcEDbAuDyxyvZPoZnPw2mhXBA
WH0McC4t2T4WuTMcddRwQL1mi2XcLNk+LuMsHtkpcUAqvznMwizZPuMm7lyv
fXFA7qVdI/Qs2T7BJFl95stxQBbQycUWLdk+J/vIkLIgckAKDEx6AS3ZPrWL
4oXfb3JAsRKDIPos2T7vEqv6/79yQHWCvOr5LNk+Hv2CHA==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.0004962538588212118}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAV6Et/JDoRkALIw0M4UJAP4Ogqk4U
cklAAKNaSaXqLD9/03tw7+lLQFSrxRpR9xw/aNONeFxVTkD7+HVSwhUQP8lL
Y4y4elBAbutBlVvcAj+AliZjRrRRQLQ9jMiqJfk+VkP9BSgIU0A27fU9TcLx
PqNW9JvSVVRArV4zpc4/6z6SUpK4AI1VQEjY0awWk+Y+obBDoYLeVkC+P7b1
3VXjPlL3mxCIGVhAGHCi7GBX4T4joAdM4W5ZQGrhgsKCx98+aq+TegO+WkAw
HHYH1NPdPlOnxi+p9ltAMnvmtd2R3D5cAQ2xokldQBW+QhEGmNs+B0T6uB+G
XkAFTw5kPffaPintB7RlvF9AaCV3GLR72j42fJS9f4ZgQJTcJUXzHNo+KHZ4
ZI4jYUDkBXuQ+N7ZPiohZvHGzWFAxAcB0Ku/2T5n/+P343RiQAhal/W8l9k+
9VG1wcIQY0C0XMpTw3LZPpNVkHHLuWNAwU8mN2Za2T6Czb7klVdkQDp6N22p
Udk+rHh90UTyZEB5kYqjC07ZPubURaQdmmVApdqEHtRJ2T5xpWE6uDZmQHzl
6IDMPtk+DCeHtnzgZkC2Sp/hXTHZPvgcAPYCf2dAqIt3l58t2T4gRgmvbRpo
QA6EPC56Ldk+WCAcTgLDaEBaWdSK7TLZPuFugrBYYGlAb5JcZbQ12T55bvL4
2ApqQGqwmjuCMtk+TaHyuj2yakA3PYGkWy/ZPnJIRkBkTmtAm4GsYQ0s2T6n
oKOrtPdrQBuUaDngKtk+LW1U2saVbECKAfvIhi7ZPu5slYK9MG1AM3YBtWkv
2T6/HeAQ3thtQNPMoauVMNk+4UJ+YsB1bkB7WPK5LDLZPhMZJprMH29A0RWv
HSYw2T6AIl5LvcZvQMlajVFUK9k+H9D03zcxcEDbAuDyxyvZPoZnPw2mhXBA
WH0McC4t2T4WuTMcddRwQL1mi2XcLNk+LuMsHtkpcUAqvznMwizZPuMm7lyv
fXFA7qVdI/Qs2T7BJFl95stxQBbQycUWLdk+J/vIkLIgckAKDEx6AS3ZPrWL
4oXfb3JAsRKDIPos2T7vEqv6/79yQHWCvOr5LNk+Hv2CHA==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0., 0.0004962538588212118}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVx2lM03cYwPGuHgw2YmOdBqSWCqGwAQN1jpDI8yhQZWAdVwUHCD0Agba0
ihZGBeu/9QBdA8ILyELxYsJimVKEQUUEylWmKMbOqBydDkYARQWPLezni2++
+XCE8hgJnUajfUP6eLrH1KG+9lCccE48NnywEWJrB8zM5DCUvsvXPGFehcEQ
bjAO8ZBW77N+6shlOG6o569RRmBDX0327scGKLr/Y+7cVCSKu796J6qvgsz7
Z1RJ8Xx85tyVmTdZAf2RotKWgu9xwHY12LS/DIorvUS8pmi8zpF5Slz1IAj9
b4X3p7HY1n3jO3p/KVwQvK6+Fx+H6yhf8fzB01AWU9ZCOxOPv+x8FdMzeRJq
G0NrNU8F2NzKnfJrPgExi9WMky4JaBv+cK5jUgceBoeocVkiapTVes0uHWQZ
ywuW3dyHlSW2LVybFmLrLF9fWfgBezeOTA6XaCHpE+ffzkck4+DfdhW1RwsO
Ye9b2LoUVC/QhJVeWvCZcWiStO9HRmn9GgdHLWwtPGcu0qViXU6y6tRLCrwP
q8RnPdIw6A575vQ4BV9y0l9ahtJQEJ4hnB6hIGPJvmg/JER+6QOji5WCN9Gm
ztsMEe4UMXudLBSUx+sVg60ibLsSHeXbSYFm6OZfFXvFOKe9ld9npuBXlXo4
bF6MQ2a5ZE8bBc9Hwi+yqiTo/c/0BL+VAsWltOCWrek4s22259UNCj7nnmgu
HEvHnHBVpL2ZgrdutAV6UQZa7xlYPsTuPEej1DUTrUWnVDUmChLc3fj0rkws
qAkJCCQel2kaE1IPoFW9N2KsiYJ82fxbm1MWuj7brL9IvLt2/vdt17JwjhX0
6DCxchcPxfxszFqeKE8irjNcaGhazMYDPw1s4hH7SeMeWSpycHnyH3FBxLM5
FRpzgBTV6tEX/sQdrDHGU5sUB9xW9XOJx3ccFd7Kk6G4TrDSk5jp4lVlZcuR
u4zzM4e4eGNKpNkiR4/rmx6yidl3X49+G5iLqau3mzcQ6zLA+bI2FwU9HZ+x
iNe2bnbLG8nFff+acD2xv913w58+CvQzt6e4Etu9ZpOMagXOMo+HuBB3eiaq
nw8qkKMvX1pHzP3Qp7/mrsTiqLuMjzaVTGhH5UoszF/krSWeW93wfqlDifbb
08YviP8HKymQ2w==
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.01010910933607207}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.01010910933607207}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.01010910933607207, 
                    0.06426724822909294}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVx2lM03cYwPGuHgw2YmOdBqSWCqGwAQN1jpDI8yhQZWAdVwUHCD0Agba0
ihZGBeu/9QBdA8ILyELxYsJimVKEQUUEylWmKMbOqBydDkYARQWPLezni2++
+XCE8hgJnUajfUP6eLrH1KG+9lCccE48NnywEWJrB8zM5DCUvsvXPGFehcEQ
bjAO8ZBW77N+6shlOG6o569RRmBDX0327scGKLr/Y+7cVCSKu796J6qvgsz7
Z1RJ8Xx85tyVmTdZAf2RotKWgu9xwHY12LS/DIorvUS8pmi8zpF5Slz1IAj9
b4X3p7HY1n3jO3p/KVwQvK6+Fx+H6yhf8fzB01AWU9ZCOxOPv+x8FdMzeRJq
G0NrNU8F2NzKnfJrPgExi9WMky4JaBv+cK5jUgceBoeocVkiapTVes0uHWQZ
ywuW3dyHlSW2LVybFmLrLF9fWfgBezeOTA6XaCHpE+ffzkck4+DfdhW1RwsO
Ye9b2LoUVC/QhJVeWvCZcWiStO9HRmn9GgdHLWwtPGcu0qViXU6y6tRLCrwP
q8RnPdIw6A575vQ4BV9y0l9ahtJQEJ4hnB6hIGPJvmg/JER+6QOji5WCN9Gm
ztsMEe4UMXudLBSUx+sVg60ibLsSHeXbSYFm6OZfFXvFOKe9ld9npuBXlXo4
bF6MQ2a5ZE8bBc9Hwi+yqiTo/c/0BL+VAsWltOCWrek4s22259UNCj7nnmgu
HEvHnHBVpL2ZgrdutAV6UQZa7xlYPsTuPEej1DUTrUWnVDUmChLc3fj0rkws
qAkJCCQel2kaE1IPoFW9N2KsiYJ82fxbm1MWuj7brL9IvLt2/vdt17JwjhX0
6DCxchcPxfxszFqeKE8irjNcaGhazMYDPw1s4hH7SeMeWSpycHnyH3FBxLM5
FRpzgBTV6tEX/sQdrDHGU5sUB9xW9XOJx3ccFd7Kk6G4TrDSk5jp4lVlZcuR
u4zzM4e4eGNKpNkiR4/rmx6yidl3X49+G5iLqau3mzcQ6zLA+bI2FwU9HZ+x
iNe2bnbLG8nFff+acD2xv913w58+CvQzt6e4Etu9ZpOMagXOMo+HuBB3eiaq
nw8qkKMvX1pHzP3Qp7/mrsTiqLuMjzaVTGhH5UoszF/krSWeW93wfqlDifbb
08YviP8HKymQ2w==
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.01010910933607207}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.01010910933607207}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.01010910933607207, 
                    0.06426724822909294}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{5.055205316969115, 0.12763482449230767`}, {
                    10.192421172139698`, 0.1771595070042885}, {
                    14.525930148697922`, 0.22010629640570523`}}], 
                    LineBox[CompressedData["
1:eJwVzX8w03Ecx/G1kihxdJXysxBdJbrUcd3nnXC5SeZX2Aib38y2KDTNoekq
zoWu0pURimoIN8qI78awKz9quPO7lFQiv07X1ef7x+ue9/jrZR6e6B1BpVAo
9nhkNeY1bLL73MGLHcTlHepFwoGr3PlZGnyYoHTL5N0oeiA3hennCbOGv2tM
OEqkpLFuS9O8YOnkzKMrLl0o464Vy62eDq+YgiwU34n8z/zVsN7iAzl/dtnp
NylQmf9Scb+fL6hHTtuLjivQHe87UkquH9ynfVMGDcuRuOaMOHPMH3RnZYyp
PDnyXi3Wu2EYAIfLvxZxGHK0v0TTY5ITCBnCBQHdXo5iJQVpG2VBUEXfemF9
hxz5VCpsn60wINh5WdZLkSPmBp3aUvdgGPYYz2r4RSBNl3WpqSgEyrTZ6sbP
BLL5oVkf8eYifN6sfPx6lEAOgsIWoSgUuj2zLEPUBLK+nMLO2x8GMc1XmzUG
CHTQPHJBoQoDp9Fw1r13BIr6N706nRQOxbriL7YqAi3TG96267GgKq3/l6iH
QAV++byeJhbU9RbO2XUTKFMl+1R0gQ1OSan5rkoCPU9J73NZZIMu35x2v4tA
M4OuT4wfRICFTsUlHWxeeZij1CESGJHtKS86CbTtQE6jYAK7Rl0Yhr1mRFmh
CqMgePRp8RFsMzctScKeaEhPDgzSwg4wM/KkdkTDiMVLk+8KAk1yMmsCQmNg
TjM++yN2KmdxbUg7FhwEEY1y7HPixeZTdbHQ42GpkmLzz7oB2zMOrNsYjrXY
lSVl1fWrcSDYRDeoxj6c4DuiKIoH85jOb5XYP+OLMluOJoB2x96McuxW4wm9
sSFsif+zMvLf+Vp4WzIHbs5UzZViGxhaPeg1TYS290ZrYuyMfSG0FkUiJKjG
XpRgm75fGj9hx4WFuLok0qIopFNxnQtUs0FH0jubjhklD3LhNLRLHmMfmT5k
MmzDg6UKLQ7paaufTEk6D5jG561Jv7UITJ/p4cHuyYfqR9gH/nTl15nxgWpp
XEC64dbU9fFEPmyv0meQntevXv/XygchdZc96f/0CIxD
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.12763482449230767`}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.12763482449230767`}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.12763482449230767`, 
                    0.22010629640570523`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{5.055205316969115, 0.12763482449230767`}, {
                    10.192421172139698`, 0.1771595070042885}, {
                    14.525930148697922`, 0.22010629640570523`}}], 
                    LineBox[CompressedData["
1:eJwVzX8w03Ecx/G1kihxdJXysxBdJbrUcd3nnXC5SeZX2Aib38y2KDTNoekq
zoWu0pURimoIN8qI78awKz9quPO7lFQiv07X1ef7x+ue9/jrZR6e6B1BpVAo
9nhkNeY1bLL73MGLHcTlHepFwoGr3PlZGnyYoHTL5N0oeiA3hennCbOGv2tM
OEqkpLFuS9O8YOnkzKMrLl0o464Vy62eDq+YgiwU34n8z/zVsN7iAzl/dtnp
NylQmf9Scb+fL6hHTtuLjivQHe87UkquH9ynfVMGDcuRuOaMOHPMH3RnZYyp
PDnyXi3Wu2EYAIfLvxZxGHK0v0TTY5ITCBnCBQHdXo5iJQVpG2VBUEXfemF9
hxz5VCpsn60wINh5WdZLkSPmBp3aUvdgGPYYz2r4RSBNl3WpqSgEyrTZ6sbP
BLL5oVkf8eYifN6sfPx6lEAOgsIWoSgUuj2zLEPUBLK+nMLO2x8GMc1XmzUG
CHTQPHJBoQoDp9Fw1r13BIr6N706nRQOxbriL7YqAi3TG96267GgKq3/l6iH
QAV++byeJhbU9RbO2XUTKFMl+1R0gQ1OSan5rkoCPU9J73NZZIMu35x2v4tA
M4OuT4wfRICFTsUlHWxeeZij1CESGJHtKS86CbTtQE6jYAK7Rl0Yhr1mRFmh
CqMgePRp8RFsMzctScKeaEhPDgzSwg4wM/KkdkTDiMVLk+8KAk1yMmsCQmNg
TjM++yN2KmdxbUg7FhwEEY1y7HPixeZTdbHQ42GpkmLzz7oB2zMOrNsYjrXY
lSVl1fWrcSDYRDeoxj6c4DuiKIoH85jOb5XYP+OLMluOJoB2x96McuxW4wm9
sSFsif+zMvLf+Vp4WzIHbs5UzZViGxhaPeg1TYS290ZrYuyMfSG0FkUiJKjG
XpRgm75fGj9hx4WFuLok0qIopFNxnQtUs0FH0jubjhklD3LhNLRLHmMfmT5k
MmzDg6UKLQ7paaufTEk6D5jG561Jv7UITJ/p4cHuyYfqR9gH/nTl15nxgWpp
XEC64dbU9fFEPmyv0meQntevXv/XygchdZc96f/0CIxD
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.12763482449230767`}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.12763482449230767`}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.12763482449230767`, 
                    0.22010629640570523`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwdzX0w03EcB/DhSsSl5rq4aZOOrURPN67F98O0q1PzLGrCNqax2VY6Yi26
RkflYnVHXeaxokiUlMc6Jamwn+vpPKRTuaM4rKPo++uP973v9c/77ShMDo4z
pVAobByyAz/Zu44yfOBr4iOuiawf0Ykn/Kk2H8i/K5Ddf9qPQvSvWqhRfqAJ
fXHPUDOAerxd9kAvD2TF1wxu/gZ0ruQO31Z1AALdcjOWOgxIM5Cu+PnDHzJn
5FSqNYESBi6mCsL4wFrRuZKBCNTtL8prOh0IL084NvNFBDp71VnEawgCKaeP
eS+NQOHcvyuYq0JgavCGtvsCgcrCZ4v7w0LhtVkPx6uQQFeCrzRRLoZBeSld
O1xEIH0dV581FA6G/Sz07iaBgo3FNjl2EbDONYpjVkYgpxLzg6PySLB1kpUp
KggkrS04bdZ6BOrzhM/tqggUUtXlfnv+KEwUj8eybxFIYGJ9v/RAFEQJH620
vU0gc7+FJrr2GEwHfFbfwmZNmjfEPY2Gq9xVhdQ7BGJnFLZotDGgvmxllGAz
T6WKLznFQrnDElOPvcUxfrqrNxYOBfhYvcGWLI8Zx04KYUPmmfRJ7Lmgxo5O
GxF0ZFvSzKoJVBCWr+x5LILvc3WRtthZva1fdYfFIE2cYDOwa1LVfX4zYgh0
qhxmYo8b9pU7FMXBgyLjH3dsZUXsniZ2PAQMtv7djW3lkv0wYyQePKOtJz2x
f9Mo86YaCfyJrhFzsBk8i1qZfQLkcNLpXtgRDBrf9FkCuGi6M72xR+VZdREx
x0FSYqFD2Gnymd/vLaWA1AM3APuQfqbZq14KvpGmMT7Yqv08EPMTobE+p5l0
VUlZdYMxES4kuS+S3iYL/dilS4Jve3/NkZ5K0mW1bJfBXbu1a3yx2xxGbIbe
Yw8e9CA96ntG2J4iB2TeziJNtXMuek1PBgveIpf02U3H/Fu6kiH77c0C0vR3
s8MeOxTguHXnZdJaCbKuPK+A8rr5dNLrH++ipRgUQHO7fo6025jrxg8sJew4
HJ9Nesx5SlCrVoKg70cO6Y7NkerxHiUksY/kknZZfJlfz1BB+9Yv//cbc7+c
H05WwYLR/f//z3XVC8ttKji+b7WO9D/WCp0L
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.28790313351572494`}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.28790313351572494`}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.28790313351572494`, 
                    0.33857788615303847`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwdzX0w03EcB/DhSsSl5rq4aZOOrURPN67F98O0q1PzLGrCNqax2VY6Yi26
RkflYnVHXeaxokiUlMc6Jamwn+vpPKRTuaM4rKPo++uP973v9c/77ShMDo4z
pVAobByyAz/Zu44yfOBr4iOuiawf0Ykn/Kk2H8i/K5Ddf9qPQvSvWqhRfqAJ
fXHPUDOAerxd9kAvD2TF1wxu/gZ0ruQO31Z1AALdcjOWOgxIM5Cu+PnDHzJn
5FSqNYESBi6mCsL4wFrRuZKBCNTtL8prOh0IL084NvNFBDp71VnEawgCKaeP
eS+NQOHcvyuYq0JgavCGtvsCgcrCZ4v7w0LhtVkPx6uQQFeCrzRRLoZBeSld
O1xEIH0dV581FA6G/Sz07iaBgo3FNjl2EbDONYpjVkYgpxLzg6PySLB1kpUp
KggkrS04bdZ6BOrzhM/tqggUUtXlfnv+KEwUj8eybxFIYGJ9v/RAFEQJH620
vU0gc7+FJrr2GEwHfFbfwmZNmjfEPY2Gq9xVhdQ7BGJnFLZotDGgvmxllGAz
T6WKLznFQrnDElOPvcUxfrqrNxYOBfhYvcGWLI8Zx04KYUPmmfRJ7Lmgxo5O
GxF0ZFvSzKoJVBCWr+x5LILvc3WRtthZva1fdYfFIE2cYDOwa1LVfX4zYgh0
qhxmYo8b9pU7FMXBgyLjH3dsZUXsniZ2PAQMtv7djW3lkv0wYyQePKOtJz2x
f9Mo86YaCfyJrhFzsBk8i1qZfQLkcNLpXtgRDBrf9FkCuGi6M72xR+VZdREx
x0FSYqFD2Gnymd/vLaWA1AM3APuQfqbZq14KvpGmMT7Yqv08EPMTobE+p5l0
VUlZdYMxES4kuS+S3iYL/dilS4Jve3/NkZ5K0mW1bJfBXbu1a3yx2xxGbIbe
Yw8e9CA96ntG2J4iB2TeziJNtXMuek1PBgveIpf02U3H/Fu6kiH77c0C0vR3
s8MeOxTguHXnZdJaCbKuPK+A8rr5dNLrH++ipRgUQHO7fo6025jrxg8sJew4
HJ9Nesx5SlCrVoKg70cO6Y7NkerxHiUksY/kknZZfJlfz1BB+9Yv//cbc7+c
H05WwYLR/f//z3XVC8ttKji+b7WO9D/WCp0L
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.28790313351572494`}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.28790313351572494`}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.28790313351572494`, 
                    0.33857788615303847`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVx31Q0nccwHFmD1bTorTtNBv2MJUenZsPWeP7SY3NM5mBmM/5LKGgUO0s
RTotsZnLgXQ7vS7JqVNcmBOHK0GyYUWm37RbzaWhWzu3U8tKuVxn398f73vf
a1NaHjfTgUajBZGoz/l3JtcwAsGphbVW/Wcvuuxf2fIkZA9UndHb/x24hXTa
kQr9DhZUBb+2eLzfhxgPr3OmTfuh+J+G2368O4inudvtkhQG34udjol4VmRl
eQdDPxvMiy4/Gp7fQ6V1LRxXaTjcX739slFwH8mHCvNnJiOA5RvlnqAYQIKh
yoJEPgeG1ouYLz8bRHci0s8bTkVBXLkxsUw9iE5f9EpndxyCfetq7a4jgygm
9O0ynxU8KOxUmgtdMaqPeVX7gB8NF6cmOytZGCm5SgOtkg+7e5b99H8CRpq2
UE3JaAzIvnJY/O0YRtz5Wnq5Wyz0Xclx8z+D0ZY6x4M2cRwsGS7ffPg7jIQ6
1aklxnhQ2Bs2/FKDEa/Jsrt5LgGcI3vPMzUYJb7nfO1KeBIInihmIxsxcgx7
Y2CUJcOBkDVJuBkj5pRjR+aNIxD6d58quRWjgKLqbnlZCiyIP/4m+ypGPl8X
ZHy7JRV6nPxWW3UYbduU9cLSnwpBq54XjrdhlL04MT9xPA1Uo8yBpmsYvT6k
N9+kpwMrNTfNtx0jFb9KYu1Kh+ZSzd1LxCX9xr/UhzOgaEV8yCRxa4EMh81m
gM1d5eL5M0bPhg/8sLEmE3bNfKE4SCxpSA02BGTB7ynj/BxiJ29FZ9HTLCg+
Z1woJbZ70OYc5NnAWR5+vJrYk71SJ3IXgOhDen4dcaynB8ehVwAXpoOKm4lt
4pK22JSj8N9VoV8b8UnxrP3RKiHw3xad1BNHamZ//bxdCF3yPZe6iKVfsiGD
kwNTD0b23iBuqqvXdszngPbh4ygj8U5R9B8WdS6IbVFcE/F0rrqk21cEa7dp
1/QQmzY+pY8+EsFL3VI5ZVtIcVrPCTFU1B8xUXZx86q5x8iD6oBGNzPx6c3J
Ed2WPLC2XpBRZgy+Ggv8JB82jG1VUi7LRs6NZ/Ohde9CC+UPuj71ODFM7Mgd
obxrYsdHj5kSUIuXvqA84TWdqJNJ4KgPZ/lNYvPWONkzqwSEWiWDsvfC7ap2
TynsTwnwp6yvGD87licFTO9nU55Zp32zaJJCfCA9mvI78HC6ng==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.15516913740187055`}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.15516913740187055`}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.15516913740187055`, 
                    0.2765966244631862}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVx31Q0nccwHFmD1bTorTtNBv2MJUenZsPWeP7SY3NM5mBmM/5LKGgUO0s
RTotsZnLgXQ7vS7JqVNcmBOHK0GyYUWm37RbzaWhWzu3U8tKuVxn398f73vf
a1NaHjfTgUajBZGoz/l3JtcwAsGphbVW/Wcvuuxf2fIkZA9UndHb/x24hXTa
kQr9DhZUBb+2eLzfhxgPr3OmTfuh+J+G2368O4inudvtkhQG34udjol4VmRl
eQdDPxvMiy4/Gp7fQ6V1LRxXaTjcX739slFwH8mHCvNnJiOA5RvlnqAYQIKh
yoJEPgeG1ouYLz8bRHci0s8bTkVBXLkxsUw9iE5f9EpndxyCfetq7a4jgygm
9O0ynxU8KOxUmgtdMaqPeVX7gB8NF6cmOytZGCm5SgOtkg+7e5b99H8CRpq2
UE3JaAzIvnJY/O0YRtz5Wnq5Wyz0Xclx8z+D0ZY6x4M2cRwsGS7ffPg7jIQ6
1aklxnhQ2Bs2/FKDEa/Jsrt5LgGcI3vPMzUYJb7nfO1KeBIInihmIxsxcgx7
Y2CUJcOBkDVJuBkj5pRjR+aNIxD6d58quRWjgKLqbnlZCiyIP/4m+ypGPl8X
ZHy7JRV6nPxWW3UYbduU9cLSnwpBq54XjrdhlL04MT9xPA1Uo8yBpmsYvT6k
N9+kpwMrNTfNtx0jFb9KYu1Kh+ZSzd1LxCX9xr/UhzOgaEV8yCRxa4EMh81m
gM1d5eL5M0bPhg/8sLEmE3bNfKE4SCxpSA02BGTB7ynj/BxiJ29FZ9HTLCg+
Z1woJbZ70OYc5NnAWR5+vJrYk71SJ3IXgOhDen4dcaynB8ehVwAXpoOKm4lt
4pK22JSj8N9VoV8b8UnxrP3RKiHw3xad1BNHamZ//bxdCF3yPZe6iKVfsiGD
kwNTD0b23iBuqqvXdszngPbh4ygj8U5R9B8WdS6IbVFcE/F0rrqk21cEa7dp
1/QQmzY+pY8+EsFL3VI5ZVtIcVrPCTFU1B8xUXZx86q5x8iD6oBGNzPx6c3J
Ed2WPLC2XpBRZgy+Ggv8JB82jG1VUi7LRs6NZ/Ohde9CC+UPuj71ODFM7Mgd
obxrYsdHj5kSUIuXvqA84TWdqJNJ4KgPZ/lNYvPWONkzqwSEWiWDsvfC7ap2
TynsTwnwp6yvGD87licFTO9nU55Zp32zaJJCfCA9mvI78HC6ng==
                    
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.15516913740187055`}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.15516913740187055`}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.15516913740187055`, 
                    0.2765966244631862}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVzXtUk3Ucx/FFdCYYF5tIKDJugpKtjBMEBb9vQhzmZAcGLBYXYePWgLHt
tFpc5CKgnoUXdIF4OLBAJPC0iSMGxHXPs5Q5ScEiLRQnaEQIxEDoKD3PH5/z
Pq+/Ph78fE6GFYVC+YgY2V0WVqICcwD79okOZnI3WknaE/PkNA2GxjTGgTs9
CDd6Uiv53nDJb1S2GKlDdMZc/XtMBhR61q6qprqRM/+embbpD9t3zIxUy3Wo
8f3q9j8PBkFQncK5jtKL1B33FV37Q4F3avXo9cU+RL/bx14Y/BgU2Mw2fxhA
sarRflpyOEh4Pk8TPxxCxlDfYDBFQGlZcZ/Ubxgda2pnb5cyQRbPcnKwGUEl
44XiZ3+xwJcVGD2uHUHZ49XypHg2jFvbny4L0aMbLME3uoJoWMo92avs1KPS
b30EEdoY0DutTAVRMcQNe/Ha3i2x8PeetVthURhq5q5cvBMfB2dvyXFNKYZq
ODU6SnU8uFHLoowtGFJpwlTlU1xorHdK2BjGEGftouMJlwQoEEzefetXDHk1
UQ9Pi3hw9k1TbcwshoTqcwWvDnwGJ7jB2feXMBR72fDO96uJMMZpoI2uYyjp
Fbur3zGTwW1eaEun4IgavqGjV6XAZCijRmaNo33/ULUZPx0B8ctr1DoqjgKK
zveXVKWCxaY3wMUWR3u/lKef8kqDn4u518a24sjPI3PJYEqDGxfcbBh2OMra
NK+Zv+CDLnC9kG6PI0tM1/CIowBYzrYiPeFz8Wckxh4BqAp7jkQ64KjcNPBY
+Wk6qJ31Ta2Er8iLb4cvp0OcNbZlnvDsxCctu+szQFy5uNXbEUeSS2nBuoBM
iD7Qyo8k/Lrv8R+LHmbCbcvIjIDwc1fKqlVJFhSZdvZ8Rdg9wkadtzMbNH84
T1cRTnB3ZVvps+HRkuWD84SnReWahNTPQW6qxRsIfy1afj5pKwRhRcRvzYSj
VMu9IZ1CUHo9ZrcRlkZGQDo7BwQX5iraCV9uau7QruXAfMq69grht/Pi7hmU
ufCipHvuB8ILucry/nfzII8z5q0hPLj7oePUZB4cZ3qEXCX/Dx7lD8lE8PLp
tiXSNBef+pv0fOC1WY+RLvVMYfUb8mHo32PupOm/rDwIPCAG8yo9lnRVFrJr
rRRD40ntEOkdPf6usgkx0Cqk06QZ5v1uv++TgHtYioW02WchSV0sgZaMVnon
4WFvXvGsUQI5hl2HSPv+d/1Mp7sUJA1tqaS7FI8qH+RLoXrgpoz0szc6NjYH
pfCkjVtF+n/gqMUu
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.0912672085293382}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.0912672085293382}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.0912672085293382, 
                    0.16457206305978575`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVzXtUk3Ucx/FFdCYYF5tIKDJugpKtjBMEBb9vQhzmZAcGLBYXYePWgLHt
tFpc5CKgnoUXdIF4OLBAJPC0iSMGxHXPs5Q5ScEiLRQnaEQIxEDoKD3PH5/z
Pq+/Ph78fE6GFYVC+YgY2V0WVqICcwD79okOZnI3WknaE/PkNA2GxjTGgTs9
CDd6Uiv53nDJb1S2GKlDdMZc/XtMBhR61q6qprqRM/+embbpD9t3zIxUy3Wo
8f3q9j8PBkFQncK5jtKL1B33FV37Q4F3avXo9cU+RL/bx14Y/BgU2Mw2fxhA
sarRflpyOEh4Pk8TPxxCxlDfYDBFQGlZcZ/Ubxgda2pnb5cyQRbPcnKwGUEl
44XiZ3+xwJcVGD2uHUHZ49XypHg2jFvbny4L0aMbLME3uoJoWMo92avs1KPS
b30EEdoY0DutTAVRMcQNe/Ha3i2x8PeetVthURhq5q5cvBMfB2dvyXFNKYZq
ODU6SnU8uFHLoowtGFJpwlTlU1xorHdK2BjGEGftouMJlwQoEEzefetXDHk1
UQ9Pi3hw9k1TbcwshoTqcwWvDnwGJ7jB2feXMBR72fDO96uJMMZpoI2uYyjp
Fbur3zGTwW1eaEun4IgavqGjV6XAZCijRmaNo33/ULUZPx0B8ctr1DoqjgKK
zveXVKWCxaY3wMUWR3u/lKef8kqDn4u518a24sjPI3PJYEqDGxfcbBh2OMra
NK+Zv+CDLnC9kG6PI0tM1/CIowBYzrYiPeFz8Wckxh4BqAp7jkQ64KjcNPBY
+Wk6qJ31Ta2Er8iLb4cvp0OcNbZlnvDsxCctu+szQFy5uNXbEUeSS2nBuoBM
iD7Qyo8k/Lrv8R+LHmbCbcvIjIDwc1fKqlVJFhSZdvZ8Rdg9wkadtzMbNH84
T1cRTnB3ZVvps+HRkuWD84SnReWahNTPQW6qxRsIfy1afj5pKwRhRcRvzYSj
VMu9IZ1CUHo9ZrcRlkZGQDo7BwQX5iraCV9uau7QruXAfMq69grht/Pi7hmU
ufCipHvuB8ILucry/nfzII8z5q0hPLj7oePUZB4cZ3qEXCX/Dx7lD8lE8PLp
tiXSNBef+pv0fOC1WY+RLvVMYfUb8mHo32PupOm/rDwIPCAG8yo9lnRVFrJr
rRRD40ntEOkdPf6usgkx0Cqk06QZ5v1uv++TgHtYioW02WchSV0sgZaMVnon
4WFvXvGsUQI5hl2HSPv+d/1Mp7sUJA1tqaS7FI8qH+RLoXrgpoz0szc6NjYH
pfCkjVtF+n/gqMUu
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.0912672085293382}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.0912672085293382}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.0912672085293382, 
                    0.16457206305978575`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVyn0w23ccB3ANzlgdbYpxKlEqmKa0Jz2u7fezeqrT5TxFKari+SmRVCsl
GkuP6cVzWTdZr0LJr6hoF8aWoB5Sbbg96Mx0a2las4dS8RBn7dnv98f73ve6
99uZzY1MIxkZGR3HQ/RS1+mBQHMrGDSv9FYbd6H1hIMRf9aQYbU7yLXSqh2N
aw+YlbFdgWnypYPrRAui0P9uOhJKB4aNbWLaERmyY8/pyDtHYbZwr868oRnd
9q3q+OOUH3xrWl3CGmtGis5nkl6vk2D8uvCgnVCGKL98z1we+gTewmO75KoW
FCV7oiYnBgLzh7u77bBWpD1J84epYAgfymdPSu+ga80dzH38UGi18jTUXW1D
ouni/JW/wqD48OiiiVc7ypyuEiSwmODEcV28rWxHj8NSKvuLwsHm3Gfete5y
VPqFW0qwMgJW5tpcOorlKCbgvan7B1EQonJ6ZTIsR60x69KfWdGQZcPf46iX
o/rI+n6jKhbMxQuu/bMPQ7KeAJn4eQzclPplOfhgKNIgta6wj4VCKim8OhBD
Ls1mZxY4ceDsk3HLNhpD2YobRcaD5+DRNx9XeCRhKEquOXx3Mx7uNdYwJtMx
lLDL8n5LaCKcuP4rZT4XQ2aB2/2U8vOggs0QEg9DHm/MlGmqJIhvXyuzKMAQ
Q9igFpVfAL+OAnTxMobcLwtSq12SAZskz9sKMOTpnL6qmUqGmSCNOO4KhjJ2
dAZdARtqyH3uQUUY2ojofThinQJC3zeh/+K+warlaQdSQOQDvdxiDImnBl81
nk0Ftxn3EQ3uLkHJT4H6VLi58fWCiRBDi0+D7uxvSoM99e+3j+HmtSX79zPS
QXHr3UdJuHfTPu8TzqfDjH7ybCnuLUejTZIoA0x968kNuKnB5oo8h0zYqI5l
yHDHUh2ZpNFMiBQ3jWG4FzjintgLWTC9tK3vxn2Fo9+atciGJDYttQ/3pzL9
dyceZEPdhL9AhZt/OhhSmTlg5ynVDuOWN7d2Kg05QK/6qmYU96G86DlNYy68
+135cgT3cm6jWO2dB5JxWgixD+2ft34+mweVoo1QwgunrrKHL3EgQLU1RvzJ
9m5NkxQurJ5ZsR/DXXrgfJhawwXG8ZzXGtyUH9dfHPPJhwrLQ6OEyzOQZXtZ
PjjvsOiEbQeOOl56mg9r2UsSwnSdl9NvHjx4wvboIaxzW05QlPDAYKHrJvzQ
Na5kUcsDqsPFAcK0/yZqH1D5IPHZfEa4V/Ky7AWXD3XjH64RXtnbub0zxAfe
285dj3D/D+mcw/I=
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.03237944504620288}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.03237944504620288}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.03237944504620288, 
                    0.05471602647414241}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVyn0w23ccB3ANzlgdbYpxKlEqmKa0Jz2u7fezeqrT5TxFKari+SmRVCsl
GkuP6cVzWTdZr0LJr6hoF8aWoB5Sbbg96Mx0a2las4dS8RBn7dnv98f73ve6
99uZzY1MIxkZGR3HQ/RS1+mBQHMrGDSv9FYbd6H1hIMRf9aQYbU7yLXSqh2N
aw+YlbFdgWnypYPrRAui0P9uOhJKB4aNbWLaERmyY8/pyDtHYbZwr868oRnd
9q3q+OOUH3xrWl3CGmtGis5nkl6vk2D8uvCgnVCGKL98z1we+gTewmO75KoW
FCV7oiYnBgLzh7u77bBWpD1J84epYAgfymdPSu+ga80dzH38UGi18jTUXW1D
ouni/JW/wqD48OiiiVc7ypyuEiSwmODEcV28rWxHj8NSKvuLwsHm3Gfete5y
VPqFW0qwMgJW5tpcOorlKCbgvan7B1EQonJ6ZTIsR60x69KfWdGQZcPf46iX
o/rI+n6jKhbMxQuu/bMPQ7KeAJn4eQzclPplOfhgKNIgta6wj4VCKim8OhBD
Ls1mZxY4ceDsk3HLNhpD2YobRcaD5+DRNx9XeCRhKEquOXx3Mx7uNdYwJtMx
lLDL8n5LaCKcuP4rZT4XQ2aB2/2U8vOggs0QEg9DHm/MlGmqJIhvXyuzKMAQ
Q9igFpVfAL+OAnTxMobcLwtSq12SAZskz9sKMOTpnL6qmUqGmSCNOO4KhjJ2
dAZdARtqyH3uQUUY2ojofThinQJC3zeh/+K+warlaQdSQOQDvdxiDImnBl81
nk0Ftxn3EQ3uLkHJT4H6VLi58fWCiRBDi0+D7uxvSoM99e+3j+HmtSX79zPS
QXHr3UdJuHfTPu8TzqfDjH7ybCnuLUejTZIoA0x968kNuKnB5oo8h0zYqI5l
yHDHUh2ZpNFMiBQ3jWG4FzjintgLWTC9tK3vxn2Fo9+atciGJDYttQ/3pzL9
dyceZEPdhL9AhZt/OhhSmTlg5ynVDuOWN7d2Kg05QK/6qmYU96G86DlNYy68
+135cgT3cm6jWO2dB5JxWgixD+2ft34+mweVoo1QwgunrrKHL3EgQLU1RvzJ
9m5NkxQurJ5ZsR/DXXrgfJhawwXG8ZzXGtyUH9dfHPPJhwrLQ6OEyzOQZXtZ
PjjvsOiEbQeOOl56mg9r2UsSwnSdl9NvHjx4wvboIaxzW05QlPDAYKHrJvzQ
Na5kUcsDqsPFAcK0/yZqH1D5IPHZfEa4V/Ky7AWXD3XjH64RXtnbub0zxAfe
285dj3D/D+mcw/I=
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {0, 0.03237944504620288}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.03237944504620288}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 300.}, {0.03237944504620288, 
                    0.05471602647414241}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "300.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 300.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}], ",", "169.005744259562`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.633800105094673`*^-10"}], ",", "1.526760614111576`*^-9", 
     ",", 
     RowBox[{"-", "1.5267619497976162`*^-9"}], ",", "5.111496427879174`*^-9", 
     ",", "0.0005947169614117127`", ",", "0.05811148873849657`", ",", 
     "0.28199069066429927`", ",", "0.3432176412303272`", ",", 
     "0.24222801844363315`", ",", "0.07385743961371725`", ",", 
     RowBox[{"-", "3.5125471595792165`*^-9"}], ",", "7.025094372809735`*^-9", 
     ",", 
     RowBox[{"-", "7.0250771926219`*^-9"}], ",", "6.0331148465042105`*^-6", 
     ",", "0.01012169925015993`", ",", "0.16236661152288503`", ",", 
     "0.3385722796886703`", ",", "0.2765612208261267`", ",", 
     "0.16455051443019209`", ",", "0.047821644679649805`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.693389968331793*^9, 3.693390021432624*^9, 3.69339010207858*^9, 
   3.693390192079955*^9, 3.693390341221437*^9, 3.693390490930476*^9, 
   3.693465258355644*^9, 3.69350911994417*^9, 3.69354910672754*^9, {
   3.6935491496217813`*^9, 3.693549156313843*^9}, 3.693549232583171*^9, 
   3.693549335712225*^9, 3.693549370445331*^9, 3.693549403648347*^9, 
   3.6935494718642807`*^9, 3.693549509583885*^9, 3.693549546058125*^9, {
   3.693549606508971*^9, 3.6935496300639763`*^9}, 3.693551609001602*^9, 
   3.6935516494861507`*^9, 3.6935517889493513`*^9, 3.6935518999816303`*^9, 
   3.693552015515254*^9, 3.693552099000599*^9, 3.6935522034072857`*^9, {
   3.693552241937991*^9, 3.693552267705894*^9}, {3.693552299027066*^9, 
   3.693552347121438*^9}, 3.693552393964518*^9, 3.693552462425097*^9, 
   3.693552522641201*^9, 3.6935526105826*^9, {3.6935526445257273`*^9, 
   3.6935526711130133`*^9}, 3.6935527542435493`*^9, 3.693552807018931*^9, 
   3.693552849398324*^9, {3.69355295841033*^9, 3.693553016977631*^9}, 
   3.6935530620682497`*^9, {3.693553112414743*^9, 3.6935531509249887`*^9}, 
   3.693556714058526*^9, 3.693556776732691*^9, 3.693556809830985*^9, 
   3.693559568917816*^9, 3.693559602828021*^9, 3.693559637576953*^9, 
   3.693568787609873*^9, 3.693569114821322*^9, 3.693934026086227*^9, {
   3.6939340583271713`*^9, 3.693934064722024*^9}, 3.693934900246608*^9, {
   3.693935130552536*^9, 3.6939351556150703`*^9}, 3.693935307408387*^9, 
   3.693935471119501*^9, 3.69393574363562*^9, {3.6939359197144613`*^9, 
   3.6939359597066813`*^9}, {3.693936007455413*^9, 3.693936041875388*^9}, 
   3.694021904029187*^9, 3.69402196563278*^9, {3.694022021599785*^9, 
   3.694022079539008*^9}, 3.694022522852318*^9, {3.6940833727702293`*^9, 
   3.69408337669344*^9}, {3.694083435736018*^9, 3.694083453767137*^9}, 
   3.6940835728068333`*^9, 3.6940836792164507`*^9, 3.694083737350519*^9, 
   3.6940837899411297`*^9, {3.6940838354985647`*^9, 3.694083862793253*^9}, 
   3.69408389922355*^9, 3.694084074131235*^9, 3.694084111609817*^9, {
   3.694084143883684*^9, 3.6940841606570168`*^9}, 3.694084366188423*^9, {
   3.694084424184041*^9, 3.69408444485282*^9}, 3.6940845441864233`*^9, 
   3.694084579992293*^9, {3.694084768956826*^9, 3.694084823580924*^9}, 
   3.694084880806756*^9, 3.6940849782060347`*^9, 3.6940854941511583`*^9, 
   3.694085557350854*^9, {3.6940856314506273`*^9, 3.694085727245247*^9}, 
   3.694085776294594*^9}]
}, Open  ]]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1280, 694},
WindowMargins->{{Automatic, -4}, {Automatic, 42}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 166, 2, 92, "Title"],
Cell[CellGroupData[{
Cell[771, 28, 307, 6, 64, "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1103, 38, 160, 3, 44, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1266, 43, 2903, 63, 283, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[4206, 111, 283, 5, 36, "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[4514, 120, 170, 2, 35, "Subsubsection"],
Cell[4687, 124, 18269, 458, 1477, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[22993, 587, 309, 6, 29, "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[23327, 597, 219, 4, 30, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[23549, 603, 7830, 211, 511, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[31416, 819, 221, 4, 27, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[31640, 825, 8663, 236, 541, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[40340, 1066, 223, 4, 27, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[40566, 1072, 8706, 238, 508, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[49321, 1316, 357, 6, 29, "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[49681, 1324, 4428, 117, 292, "Input"],
Cell[CellGroupData[{
Cell[54134, 1445, 173, 4, 30, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[54310, 1451, 874, 16, 44, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[55221, 1472, 221, 4, 27, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[55445, 1478, 10685, 267, 493, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[66167, 1750, 223, 4, 27, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[66393, 1756, 707, 14, 44, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[67149, 1776, 359, 6, 29, "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[67511, 1784, 9219, 220, 668, "Input"],
Cell[CellGroupData[{
Cell[76755, 2008, 173, 4, 30, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[76931, 2014, 811, 15, 44, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[77779, 2034, 221, 4, 30, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[78003, 2040, 752, 14, 44, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[78792, 2059, 223, 4, 30, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[79018, 2065, 659, 13, 44, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[79738, 2085, 251, 5, 36, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[79992, 2092, 4170, 113, 298, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[84199, 2210, 337, 6, 36, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[84539, 2218, 14918, 348, 980, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[99494, 2571, 464, 9, 36, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[99961, 2582, 26161, 549, 1352, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[126159, 3136, 480, 8, 36, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[126642, 3146, 9547, 169, 323, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[136226, 3320, 663, 12, 36, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[136892, 3334, 22034, 450, 1354, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[158963, 3789, 693, 12, 36, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[159659, 3803, 25349, 497, 1320, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[185045, 4305, 714, 11, 36, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[185762, 4318, 14161, 287, 406, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[199960, 4610, 840, 15, 36, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[200803, 4627, 23648, 436, 1407, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[224488, 5068, 829, 13, 36, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[225320, 5083, 26496, 508, 1824, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[251853, 5596, 889, 14, 36, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[252745, 5612, 24604, 469, 1131, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277398, 6087, 156, 3, 64, "Section",
 InitializationCell->True,
 InitializationGroup->True],
Cell[277557, 6092, 1472, 36, 79, "Input",
 InitializationGroup->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[279078, 6134, 275, 4, 64, "Section",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[279378, 6142, 13646, 249, 768, "Input"],
Cell[293027, 6393, 5953, 114, 69, "Print"],
Cell[298983, 6509, 3645, 56, 24, "Print"],
Cell[302631, 6567, 455303, 7851, 278, "Print"],
Cell[757937, 14420, 279151, 5411, 477, "Output"],
Cell[1037091, 19833, 5953, 114, 69, "Print"],
Cell[1043047, 19949, 4413, 67, 44, "Print"],
Cell[1047463, 20018, 500467, 8589, 277, "Print"],
Cell[1547933, 28609, 278297, 5408, 498, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

