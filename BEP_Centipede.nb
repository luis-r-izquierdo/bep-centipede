(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    503515,      12034]
NotebookOptionsPosition[    478066,      11531]
NotebookOutlinePosition[    478727,      11555]
CellTagsIndexPosition[    478684,      11552]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Best-experienced-payoff Dynamics in the Centipede Game", "Title",ExpressionUUID->"91a618f7-3b5e-4fb9-bf02-ee524a0acef3"],

Cell[TextData[{
 ButtonBox["William H. Sandholm",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.ssc.wisc.edu/~whs/"], None},
  ButtonNote->"http://www.ssc.wisc.edu/~whs/"],
 ", ",
 ButtonBox["Segismundo S. Izquierdo",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.segis.izqui.org"], None},
  ButtonNote->"http://www.segis.izqui.org"],
 ", and ",
 ButtonBox["Luis R. Izquierdo",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://luis.izqui.org"], None},
  ButtonNote->"http://luis.izqui.org"]
}], "Subtitle",
 InitializationGroup->
  False,ExpressionUUID->"30a09403-1cf9-4753-9de6-82c3a66e18b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["License", "Section",ExpressionUUID->"4009a82b-8634-48ab-b894-d305596c1f3a"],

Cell[TextData[{
 "BEP_Centipede is a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook created to compute several solutions and theorems explained in \
the paper \n\[OpenCurlyDoubleQuote]Best Experienced Payoff Dynamics and \
Cooperation in the Centipede Game\[CloseCurlyDoubleQuote].\nCopyright (C) \
2017. ",
 ButtonBox["William H. Sandholm",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.ssc.wisc.edu/~whs/"], None},
  ButtonNote->"http://www.ssc.wisc.edu/~whs/"],
 ", ",
 ButtonBox["Segismundo S. Izquierdo",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.segis.izqui.org"], None},
  ButtonNote->"http://www.segis.izqui.org"],
 ", and ",
 ButtonBox["Luis R. Izquierdo",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://luis.izqui.org"], None},
  ButtonNote->"http://luis.izqui.org"],
 "\n\nThis program is free software: you can redistribute it and/or modify\n\
it under the terms of the GNU General Public License as published by\nthe \
Free Software Foundation, either version 3 of the License, or\n(at your \
option) any later version.\n\nThis program is distributed in the hope that it \
will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty \
of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \[LineSeparator]See \
the GNU General Public License for more details.\n\nYou can find a copy of \
the GNU General Public License at ",
 ButtonBox["https://www.gnu.org/licenses/gpl.html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.gnu.org/licenses/gpl.html"], None},
  ButtonNote->"https://www.gnu.org/licenses/gpl.html"],
 ".\n\nFinancial support from NSF Grant SES-1458992 is gratefully \
acknowledged.\n\nContact information: \nLuis R. Izquierdo \nUniversity of \
Burgos, Spain. \nwebsite: ",
 ButtonBox["http://luis.izqui.org",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://luis.izqui.org"], None},
  ButtonNote->"http://luis.izqui.org"],
 "\n"
}], "Text",ExpressionUUID->"8359490b-f256-47f9-935c-eabc8ae0a58a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Source code", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"3a0f0b5f-5d2b-48b3-a735-41fc074714f2"],

Cell[CellGroupData[{

Cell["General options", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"2dcb9602-f293-4fbd-8927-29165a5c5729"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Symbols", " ", "x"}], ",", " ", "y", ",", " ", 
     RowBox[{
     "z", " ", "and", " ", "t", " ", "must", " ", "not", " ", "be", " ", 
      "used", " ", "in", " ", "this", " ", "notebook"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"Root", ",", 
      RowBox[{"ExactRootIsolation", "\[Rule]", "True"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"precision", "=", "6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "is", " ", "only", " ", "for", " ", "displaying", " ", 
     "purposes"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "The", " ", "following", " ", "line", " ", "makes", " ", "sure", " ", 
      "that", " ", "usage", " ", "messages", " ", "are", " ", "correctly", 
      " ", "displayed", " ", 
      RowBox[{"always", ".", " ", "For"}], " ", "details"}], ",", " ", 
     RowBox[{
      RowBox[{"see", ":", "\[IndentingNewLine]", "http", ":"}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "questions"}], "/", "3943"}], "/", "usage"}], "-", "displays", "-", 
       "properly", "-", "only", "-", "after", "-", "second", "-", 
       RowBox[{
        RowBox[{"call", "/", "27671"}], "#27671"}]}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"System`Dump`fixmessagestring", "[", "System`Dump`s_", "]"}], ":=", 
    RowBox[{"ToString", "@", 
     RowBox[{"InputForm", "@", "System`Dump`s"}]}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[132]:=",ExpressionUUID->"7298d53a-acd3-4dfa-9dfd-b145f7b3c07b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Supporting functions", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"2dcb9602-f293-4fbd-8927-29165a5c5729"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"The", " ", "following", " ", "function"}], ",", " ", 
    RowBox[{"i", ".", "e", ".", " ", "ClipTo01"}], ",", " ", 
    RowBox[{
    "is", " ", "implemented", " ", "for", " ", "efficiency", " ", "reasons"}],
     ",", " ", 
    RowBox[{
    "so", " ", "it", " ", "can", " ", "be", " ", "used", " ", "in", " ", 
     "functions", " ", "that", " ", "will", " ", "be", " ", 
     RowBox[{"compiled", ".", " ", "Otherwise"}]}], ",", " ", 
    RowBox[{"we", " ", "could", " ", "have", " ", "used", " ", 
     RowBox[{"Clip", "[", 
      RowBox[{",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ClipTo01", "[", "v_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"v", "<", "0"}], ",", "0", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"v", ">", "1"}], ",", "1", ",", "v"}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"ClipTo01", ",", "Listable"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ProjectOnSimplex", "[", "v_", "]"}], ":=", 
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{"ClipTo01", "[", "v", "]"}], ",", "Total"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Outcomes", "[", "fPointRules_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "=", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "fPointRules", "]"}], "+", "1"}], ")"}], 
            "/", "2"}], "]"}]}], ",", 
         RowBox[{"s2", "=", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"Length", "[", "fPointRules", "]"}], "/", "2"}], "]"}]}], 
         ",", "fPoint", ",", "interweavedFPoint", ",", "vars"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vars", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"y", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fPoint", "=", 
         RowBox[{"vars", "/.", "fPointRules"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"interweavedFPoint", "=", 
         RowBox[{"Riffle", "[", 
          RowBox[{
           RowBox[{"fPoint", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "s1"}], "]"}], "]"}], ",", 
           RowBox[{"fPoint", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Most", "@", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#1", "*", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"interweavedFPoint", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{
                   RowBox[{"First", "[", "#2", "]"}], "+", "1"}], ",", 
                  RowBox[{"Length", "[", "interweavedFPoint", "]"}], ",", 
                  "2"}], "}"}]}], "]"}]}], ")"}], "&"}], ",", 
           "interweavedFPoint"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotOutcomes", "[", 
      RowBox[{"fPointRules_", ",", 
       RowBox[{"sizeOfBubbles_:", "0.1"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"outcomes", "=", 
          RowBox[{"Outcomes", "[", "fPointRules", "]"}]}], ",", "d"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"Length", "[", "outcomes", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"BubbleChart", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"10", "^", 
            RowBox[{"-", "16"}]}], "+", 
           RowBox[{"Chop", "@", 
            RowBox[{"MapIndexed", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"First", "[", "#2", "]"}], ",", "1", ",", "#1"}], 
                "}"}], "&"}], ",", "outcomes"}], "]"}]}]}], ",", 
          RowBox[{"ChartLabels", "\[Rule]", 
           RowBox[{"Range", "[", "d", "]"}]}], ",", 
          RowBox[{"BubbleSizes", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0.001", ",", "sizeOfBubbles"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"d", "+", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "-", 
                RowBox[{"d", "*", "0.01"}]}], ",", 
               RowBox[{"1", "+", 
                RowBox[{"d", "*", "0.01"}]}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", 
          RowBox[{"Frame", "\[Rule]", "False"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", 
           RowBox[{"1", "/", "d"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[136]:=",ExpressionUUID->"7298d53a-acd3-4dfa-9dfd-b145f7b3c07b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mean dynamics", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"8580c788-4465-4f77-ae5e-d51feadf8abb"],

Cell[CellGroupData[{

Cell["General functions", "Subsubsection",ExpressionUUID->"1b196b6f-fbd4-4e81-82cd-63c76644ee97"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamics", "::", "invalidValueOf_testSetRule"}], "=", 
    "\"\<the variable testSetRule in \
MeanDynamics[\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\), tieBreakingRule, d] cannot take the \
value `1`. It can only be \\\"all\\\", \\\"two\\\" or \\\"adj\\\"\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamics", "::", "invalidValueOf_tieBreakingRule"}], "=", 
    "\"\<the variable tieBreakingRule in MeanDynamics[testSetRule, \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\), d] cannot take the value `1`. It \
can only be \\\"min\\\", \\\"stick\\\" or \\\"unif\\\"\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamics", "::", "invalidValueOf_d"}], "=", 
    "\"\<the variable d (number of nodes in the game) in \
MeanDynamics[testSetRule, tieBreakingRule, \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)] cannot take the value `1`. It must \
be an integer strictly greater than 1\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamics", "::", "usage"}], "=", 
    "\"\<MeanDynamics[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"useFullSimplify\",FontSlant->\"Italic\"]\):False, \
\!\(\*StyleBox[\"omitLastVariable\",FontSlant->\"Italic\"]\):False, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):5 ] returns the mean \
dynamics of the BEP dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1).\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"useFullSimplify\",FontSlant->\"Italic\"]\) is an optional \
(boolean) parameter. If \
\!\(\*StyleBox[\"useFullSimplify\",FontSlant->\"Italic\"]\) is set to True, \
then the equations are simplified.\n- \
\!\(\*StyleBox[\"omitLastVariable\",FontSlant->\"Italic\"]\) is an optional \
(boolean) parameter. If \
\!\(\*StyleBox[\"omitLastVariable\",FontSlant->\"Italic\"]\) is set to True, \
then the following two identities \n\\t x[s1] == 1 - \
\!\(\*UnderoverscriptBox[\(\[Sum]\), \(i = 1\), \(s1 - 1\)]\)x[i] \n\\t y[s2] \
== 1 - \!\(\*UnderoverscriptBox[\(\[Sum]\), \(i = 1\), \(s2 - 1\)]\)y[i]\n    \
 are used to eliminate the last variables (i.e. x[s1] and y[s2]) in the mean \
dynamics equations. (s1 and s2 are the number of strategies for the first \
movers and the second movers respectively.)\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamics", "[", 
     RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
      RowBox[{"useFullSimplify_:", "False"}], ",", 
      RowBox[{"omitLastVariable_:", "False"}], ",", 
      RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"MD", ",", "s1", ",", "s2", ",", "Dvars"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"IntegerQ", "[", "n", "]"}], "]"}], " ", "||", 
          RowBox[{"n", "<", "2"}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"MeanDynamics", "::", "invalidValueOf_d"}], ",", "n"}], 
            "]"}], ";", 
           "\"\<Error parameterizing the length of the game (number of nodes \
must be at least 2)\>\"", ";", 
           RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"MD", "=", 
        RowBox[{"Switch", "[", 
         RowBox[{
         "testSetRule", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\"\<all\>\"", ",", 
          RowBox[{"Switch", "[", 
           RowBox[{
           "tieBreakingRule", ",", "\[IndentingNewLine]", "\"\<min\>\"", ",", 
            
            RowBox[{"MeanDynamicsAllMin", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<stick\>\"", ",", 
            RowBox[{"MeanDynamicsAllStick", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<unif\>\"", ",", 
            RowBox[{"MeanDynamicsAllUnif", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
            "\[IndentingNewLine]", "_", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{
                RowBox[{
                "MeanDynamics", "::", "invalidValueOf_tieBreakingRule"}], ",",
                 "tieBreakingRule"}], "]"}], ";", 
              "\"\<Error parameterizing the tie-breaking rule\>\"", ";", 
              RowBox[{"Abort", "[", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\"\<two\>\"", ",", 
          RowBox[{"Switch", "[", 
           RowBox[{
           "tieBreakingRule", ",", "\[IndentingNewLine]", "\"\<min\>\"", ",", 
            
            RowBox[{"MeanDynamicsTwoMin", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<stick\>\"", ",", 
            RowBox[{"MeanDynamicsTwoStick", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<unif\>\"", ",", 
            RowBox[{"MeanDynamicsTwoUnif", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
            "\[IndentingNewLine]", "_", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{
                RowBox[{
                "MeanDynamics", "::", "invalidValueOf_tieBreakingRule"}], ",",
                 "tieBreakingRule"}], "]"}], ";", 
              "\"\<Error parameterizing the tie-breaking rule\>\"", ";", 
              RowBox[{"Abort", "[", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\"\<adj\>\"", ",", 
          RowBox[{"Switch", "[", 
           RowBox[{
           "tieBreakingRule", ",", "\[IndentingNewLine]", "\"\<min\>\"", ",", 
            
            RowBox[{"MeanDynamicsAdjacentMin", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<stick\>\"", ",", 
            RowBox[{"MeanDynamicsAdjacentStick", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<unif\>\"", ",", 
            RowBox[{"MeanDynamicsAdjacentUnif", "[", 
             RowBox[{"n", ",", "x", ",", "y"}], "]"}], ",", 
            "\[IndentingNewLine]", "_", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{
                RowBox[{
                "MeanDynamics", "::", "invalidValueOf_tieBreakingRule"}], ",",
                 "tieBreakingRule"}], "]"}], ";", 
              "\"\<Error parameterizing the tie-breaking rule\>\"", ";", 
              RowBox[{"Abort", "[", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "_", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              RowBox[{"MeanDynamics", "::", "invalidValueOf_testSetRule"}], 
              ",", "testSetRule"}], "]"}], ";", 
            "\"\<Error parameterizing the test-set rule\>\"", ";", 
            RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Dvars", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], "'"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "[", "i", "]"}], "'"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"omitLastVariable", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MD", "=", 
           RowBox[{"Most", "[", 
            RowBox[{"Drop", "[", 
             RowBox[{"MD", ",", 
              RowBox[{"{", "s1", "}"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Dvars", "=", 
           RowBox[{"Most", "[", 
            RowBox[{"Drop", "[", 
             RowBox[{"Dvars", ",", 
              RowBox[{"{", "s1", "}"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"MD", "=", 
           RowBox[{"MD", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "s1", "]"}], "\[Rule]", 
               RowBox[{"1", " ", "-", " ", 
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{"x", "[", "i", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"s1", "-", "1"}]}], "}"}]}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"y", "[", "s2", "]"}], "\[Rule]", 
               RowBox[{"1", " ", "-", " ", 
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{"y", "[", "i", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"s2", "-", "1"}]}], "}"}]}], "]"}]}]}]}], 
             "}"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"useFullSimplify", ",", 
         RowBox[{"MD", " ", "=", " ", 
          RowBox[{"FullSimplify", "[", 
           RowBox[{"MD", ",", 
            RowBox[{"If", "[", 
             RowBox[{"omitLastVariable", ",", 
              RowBox[{
               RowBox[{"##", "&"}], "[", "]"}], ",", 
              RowBox[{"Assumptions", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "\[Equal]", 
                  "1"}], ",", 
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"y", "[", "j", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "s2"}], "}"}]}], "]"}], "\[Equal]", 
                  "1"}]}], "}"}]}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"verbosity", "\[GreaterEqual]", "1"}], "&&", 
          RowBox[{"Not", "[", 
           RowBox[{"StringQ", "[", "MD", "]"}], "]"}]}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Mean dynamics:\\n\>\"", ",", 
           RowBox[{"MatrixForm", "[", "Dvars", "]"}], ",", "\"\<==\>\"", ",", 
           
           RowBox[{"MatrixForm", "[", "MD", "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "MD"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamicsWithoutFirstVariables", "::", "usage"}], "=", 
    "\"\<MeanDynamicsWithoutFirstVariables[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"useFullSimplify\",FontSlant->\"Italic\"]\):False, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the mean \
dynamics of the BEP dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1), and eliminating the first variables using \
the following two identities:\n\\t x[1] == 1 - \!\(\*UnderoverscriptBox[\(\
\[Sum]\), \(i = 2\), \(s1\)]\)x[i] \n\\t y[1] == 1 - \
\!\(\*UnderoverscriptBox[\(\[Sum]\), \(i = 2\), \(s2\)]\)y[i]\nwhere s1 and \
s2 are the number of strategies for the first movers and the second movers \
respectively.\n\n\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"useFullSimplify\",FontSlant->\"Italic\"]\) is an optional \
(boolean) parameter. If \
\!\(\*StyleBox[\"useFullSimplify\",FontSlant->\"Italic\"]\) is set to True, \
then the equations are simplified.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MeanDynamicsWithoutFirstVariables", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"useFullSimplify_:", "False"}], ",", 
     RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "reducedEM"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reducedEM", "=", 
       RowBox[{"MeanDynamics", "[", 
        RowBox[{
        "testSetRule", ",", "tieBreakingRule", ",", "n", ",", "False", ",", 
         "False", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"reducedEM", "=", 
       RowBox[{"Rest", "[", 
        RowBox[{"Drop", "[", 
         RowBox[{"reducedEM", ",", 
          RowBox[{"{", 
           RowBox[{"s1", "+", "1"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"reducedEM", "=", 
       RowBox[{"reducedEM", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"x", "[", "i", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", "s1"}], "}"}]}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"y", "[", "1", "]"}], "\[Rule]", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"y", "[", "i", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", "s2"}], "}"}]}], "]"}]}]}]}], 
         "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"useFullSimplify", ",", 
        RowBox[{"reducedEM", "=", 
         RowBox[{"FullSimplify", "[", "reducedEM", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"verbosity", "\[GreaterEqual]", "1"}], "&&", 
         RowBox[{"Not", "[", 
          RowBox[{"StringQ", "[", "reducedEM", "]"}], "]"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Mean dynamics:\\n\>\"", ",", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], "'"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "2", ",", "s1"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"y", "[", "i", "]"}], "'"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "2", ",", "s2"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], ",", "\"\<==\>\"", ",", 
          RowBox[{"MatrixForm", "[", "reducedEM", "]"}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "reducedEM"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[141]:=",ExpressionUUID->"4d4eb097-fedb-479c-8152-96e322899a23"]
}, Closed]],

Cell[CellGroupData[{

Cell["Test all ", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"d6f123b3-168d-4f2c-a6b6-5970bccd0a6a"],

Cell[CellGroupData[{

Cell["Min if tie", "Text",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"0eedcf7c-8915-4ad9-858c-22c175cf5299"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FirstMoversInflowAllMin", "[", 
     RowBox[{"n_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "i"}], "s2"], 
            RowBox[{"y", "[", "k", "]"}]}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"m", "=", "1"}], "i"], 
             RowBox[{"y", "[", "m", "]"}]}], ")"}], 
           RowBox[{"s1", "-", "i"}]]}], "+", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"k", "=", "2"}], 
           RowBox[{"i", "-", "1"}]], 
          RowBox[{
           RowBox[{"y", "[", "k", "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"l", "=", "1"}], 
               RowBox[{"k", "-", "1"}]], 
              RowBox[{"y", "[", "l", "]"}]}], ")"}], 
            RowBox[{"i", "-", "k"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"m", "=", "1"}], "k"], 
              RowBox[{"y", "[", "m", "]"}]}], ")"}], 
            RowBox[{"s1", "-", "i"}]]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SecondMoversInflowAllMin", "[", 
     RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"k", "=", "2"}], "s1"], 
             RowBox[{"x", "[", "k", "]"}]}], ")"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", "1", "]"}], "+", 
              RowBox[{"x", "[", "2", "]"}]}], ")"}], 
            RowBox[{"s2", "-", "1"}]]}], "+", 
          SuperscriptBox[
           RowBox[{"x", "[", "1", "]"}], "s2"]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"k", "=", 
                RowBox[{"j", "+", "1"}]}], "s1"], 
              RowBox[{"x", "[", "k", "]"}]}], ")"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"m", "=", "1"}], 
                RowBox[{"j", "+", "1"}]], 
               RowBox[{"x", "[", "m", "]"}]}], ")"}], 
             RowBox[{"s2", "-", "j"}]]}], "+", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "2"}], "j"], 
            RowBox[{
             RowBox[{"x", "[", "k", "]"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"l", "=", "1"}], 
                 RowBox[{"k", "-", "1"}]], 
                RowBox[{"x", "[", "l", "]"}]}], ")"}], 
              RowBox[{"j", "-", "k", "+", "1"}]], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], "k"], 
                RowBox[{"x", "[", "m", "]"}]}], ")"}], 
              RowBox[{"s2", "-", "j"}]]}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "2", ",", "s2"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MeanDynamicsAllMin", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"FirstMoversInflowAllMin", "[", 
         RowBox[{"n", ",", "y"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SecondMoversInflowAllMin", "[", 
         RowBox[{"n", ",", "x"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"y", "[", "j", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[148]:=",ExpressionUUID->"69ee0df9-4669-4fb5-a75a-bb8452871696"]
}, Closed]],

Cell[CellGroupData[{

Cell["Stick if tie", "Text",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"e7bc30fd-a215-4ff2-a009-13c7bda62096"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FirstMoversInflowAllStick", "[", 
     RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "i"}], "s2"], 
            RowBox[{"y", "[", "k", "]"}]}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"m", "=", "1"}], "i"], 
             RowBox[{"y", "[", "m", "]"}]}], ")"}], 
           RowBox[{"s1", "-", "i"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"q", "=", "1"}], 
             RowBox[{"i", "-", "1"}]], 
            RowBox[{"x", "[", "q", "]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "2"}], 
             RowBox[{"i", "-", "1"}]], 
            RowBox[{
             RowBox[{"y", "[", "k", "]"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"l", "=", "1"}], 
                 RowBox[{"k", "-", "1"}]], 
                RowBox[{"y", "[", "l", "]"}]}], ")"}], 
              RowBox[{"i", "-", "k"}]], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], "k"], 
                RowBox[{"y", "[", "m", "]"}]}], ")"}], 
              RowBox[{"s1", "-", "i"}]]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"q", "=", 
              RowBox[{"i", "+", "1"}]}], "s1"], 
            RowBox[{"x", "[", "q", "]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "2"}], 
             RowBox[{"i", "-", "1"}]], 
            RowBox[{
             RowBox[{"y", "[", "k", "]"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"l", "=", "1"}], 
                 RowBox[{"k", "-", "1"}]], 
                RowBox[{"y", "[", "l", "]"}]}], ")"}], 
              RowBox[{"i", "-", "k", "+", "1"}]], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], "k"], 
                RowBox[{"y", "[", "m", "]"}]}], ")"}], 
              RowBox[{"s1", "-", "i", "-", "1"}]]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], 
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "2"}], 
             RowBox[{"i", "-", "1"}]], 
            RowBox[{
             RowBox[{"y", "[", "k", "]"}], 
             RowBox[{"(", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"l", "=", "1"}], 
                RowBox[{"k", "-", "1"}]], 
               RowBox[{"y", "[", "l", "]"}]}], ")"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], "k"], 
                RowBox[{"y", "[", "m", "]"}]}], ")"}], 
              RowBox[{"s1", "-", "k", "-", "1"}]]}]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SecondMoversInflowAllStick", "[", 
     RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", 
              RowBox[{"j", "+", "1"}]}], "s1"], 
            RowBox[{"x", "[", "k", "]"}]}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"m", "=", "1"}], 
              RowBox[{"j", "+", "1"}]], 
             RowBox[{"x", "[", "m", "]"}]}], ")"}], 
           RowBox[{"s2", "-", "j"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"q", "=", "1"}], 
             RowBox[{"j", "-", "1"}]], 
            RowBox[{"y", "[", "q", "]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "2"}], "j"], 
            RowBox[{
             RowBox[{"x", "[", "k", "]"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"l", "=", "1"}], 
                 RowBox[{"k", "-", "1"}]], 
                RowBox[{"x", "[", "l", "]"}]}], ")"}], 
              RowBox[{"j", "-", "k", "+", "1"}]], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], "k"], 
                RowBox[{"x", "[", "m", "]"}]}], ")"}], 
              RowBox[{"s2", "-", "j"}]]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"q", "=", 
              RowBox[{"j", "+", "1"}]}], "s2"], 
            RowBox[{"y", "[", "q", "]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "2"}], "j"], 
            RowBox[{
             RowBox[{"x", "[", "k", "]"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"l", "=", "1"}], 
                 RowBox[{"k", "-", "1"}]], 
                RowBox[{"x", "[", "l", "]"}]}], ")"}], 
              RowBox[{"j", "-", "k", "+", "2"}]], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"m", "=", "1"}], "k"], 
                RowBox[{"x", "[", "m", "]"}]}], ")"}], 
              RowBox[{"s2", "-", "j", "-", "1"}]]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"y", "[", "j", "]"}], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"x", "[", "1", "]"}], "s2"], "+", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"k", "=", "2"}], "j"], 
             RowBox[{
              RowBox[{"x", "[", "k", "]"}], 
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"l", "=", "1"}], 
                 RowBox[{"k", "-", "1"}]], 
                RowBox[{"x", "[", "l", "]"}]}], ")"}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"m", "=", "1"}], "k"], 
                 RowBox[{"x", "[", "m", "]"}]}], ")"}], 
               RowBox[{"s2", "-", "k"}]]}]}]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "s2"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MeanDynamicsAllStick", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"FirstMoversInflowAllStick", "[", 
         RowBox[{"n", ",", "x", ",", "y"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SecondMoversInflowAllStick", "[", 
         RowBox[{"n", ",", "x", ",", "y"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"y", "[", "j", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[151]:=",ExpressionUUID->"b668e1cc-7797-4ca1-803b-92b1a398c69b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Uniform if tie", "Text",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"f12cde70-d1a1-4f2e-a1c9-53508bdcbec4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FirstMoversInflowAllUnif", "[", 
     RowBox[{"n_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"j", "=", "i"}], "s2"], 
            RowBox[{"y", "[", "j", "]"}]}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "i"], 
             RowBox[{"y", "[", "j", "]"}]}], ")"}], 
           RowBox[{"s1", "-", "i"}]]}], "+", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"k", "=", "2"}], 
           RowBox[{"i", "-", "1"}]], 
          RowBox[{
           RowBox[{"y", "[", "k", "]"}], 
           RowBox[{"(", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], 
              RowBox[{"k", "-", "1"}]], 
             RowBox[{"y", "[", "j", "]"}]}], ")"}], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"j", "=", "0"}], 
             RowBox[{"s1", "-", "k", "-", "1"}]], 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"Binomial", "[", 
                RowBox[{
                 RowBox[{"s1", "-", "k", "-", "1"}], ",", "j"}], "]"}], "*", 
               SuperscriptBox[
                RowBox[{"y", "[", "k", "]"}], "j"]}], 
              RowBox[{"j", "+", "1"}]], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"l", "=", "1"}], 
                 RowBox[{"k", "-", "1"}]], 
                RowBox[{"y", "[", "l", "]"}]}], ")"}], 
              RowBox[{"s1", "-", "k", "-", "1", "-", "j"}]]}]}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SecondMoversInflowAllUnif", "[", 
     RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "X"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "s2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"x", "[", "1", "]"}], "s2"], "s2"]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"X", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"k", "=", "2"}], "i"], 
              RowBox[{
               RowBox[{"x", "[", "k", "]"}], 
               RowBox[{"(", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"j", "=", "1"}], 
                  RowBox[{"k", "-", "1"}]], 
                 RowBox[{"x", "[", "j", "]"}]}], ")"}], 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"j", "=", "0"}], 
                 RowBox[{"s2", "-", "k"}]], 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"s2", "-", "k"}], ",", "j"}], "]"}], "*", 
                   SuperscriptBox[
                    RowBox[{"x", "[", "k", "]"}], "j"]}], 
                  RowBox[{"j", "+", "1"}]], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{"x", "[", "l", "]"}]}], ")"}], 
                  RowBox[{"s2", "-", "k", "-", "j"}]]}]}]}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", 
               RowBox[{"i", "+", "1"}]}], "s1"], 
             RowBox[{"x", "[", "j", "]"}]}], ")"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"j", "=", "1"}], 
               RowBox[{"i", "+", "1"}]], 
              RowBox[{"x", "[", "j", "]"}]}], ")"}], 
            RowBox[{"s2", "-", "i"}]]}], "+", 
          RowBox[{"X", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MeanDynamicsAllUnif", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"FirstMoversInflowAllUnif", "[", 
         RowBox[{"n", ",", "y"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SecondMoversInflowAllUnif", "[", 
         RowBox[{"n", ",", "x"}], "]"}], "-", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"y", "[", "j", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[154]:=",ExpressionUUID->"bdebfd05-7766-4534-a566-db047d910d52"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test two ", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"3d0c2034-5ff4-4bc2-a677-3c4fa3038d0c"],

Cell[CellGroupData[{

Cell["Min if tie", "Text",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"a11fa556-628a-4cbd-95b6-6b6012e58e2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MeanDynamicsTwoMin", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"s1", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", "1"}], 
             RowBox[{"i", "-", "1"}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", 
                   RowBox[{"h", "+", "1"}]}], "s2"], 
                 RowBox[{"y", "[", "k", "]"}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "2"}], "h"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], 
                   RowBox[{"k", "-", "1"}]], 
                  RowBox[{
                   RowBox[{"y", "[", "k", "]"}], 
                   RowBox[{"y", "[", "l", "]"}]}]}]}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], "+", 
                RowBox[{"x", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "+", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"s1", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", 
              RowBox[{"i", "+", "1"}]}], "s1"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "i"}], "s2"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], "i"], 
                  RowBox[{
                   RowBox[{"y", "[", "k", "]"}], 
                   RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "2"}], 
                  RowBox[{"i", "-", "1"}]], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], 
                   RowBox[{"k", "-", "1"}]], 
                  RowBox[{
                   RowBox[{"y", "[", "k", "]"}], 
                   RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "1"}], 
                  RowBox[{"i", "-", "1"}]], 
                 SuperscriptBox[
                  RowBox[{"y", "[", "k", "]"}], "2"]}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], "+", 
                RowBox[{"x", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "-", 
          RowBox[{"x", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"s2", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", "1"}], 
             RowBox[{"i", "-", "1"}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", 
                   RowBox[{"h", "+", "2"}]}], "s1"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], "s1"], 
                  RowBox[{
                   RowBox[{"x", "[", "k", "]"}], 
                   RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "2"}], 
                  RowBox[{"h", "+", "1"}]], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], 
                   RowBox[{"k", "-", "1"}]], 
                  RowBox[{
                   RowBox[{"x", "[", "k", "]"}], 
                   RowBox[{"x", "[", "l", "]"}]}]}]}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"y", "[", "i", "]"}], "+", 
                RowBox[{"y", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "+", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"s2", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", 
              RowBox[{"i", "+", "1"}]}], "s2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", 
                   RowBox[{"i", "+", "1"}]}], "s1"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], 
                   RowBox[{"i", "+", "1"}]], 
                  RowBox[{
                   RowBox[{"x", "[", "k", "]"}], 
                   RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "2"}], "i"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], 
                   RowBox[{"k", "-", "1"}]], 
                  RowBox[{
                   RowBox[{"x", "[", "k", "]"}], 
                   RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "1"}], "i"], 
                 SuperscriptBox[
                  RowBox[{"x", "[", "k", "]"}], "2"]}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"y", "[", "i", "]"}], "+", 
                RowBox[{"y", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "-", 
          RowBox[{"y", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[157]:=",ExpressionUUID->"3867e3e1-9488-4dc6-89db-4b86edb7d67b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Stick if tie", "Text",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"afc827b2-8d8e-4050-81b0-09ad9ac2bee7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MeanDynamicsTwoStick", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"s1", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", "1"}], 
             RowBox[{"i", "-", "1"}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", 
                    RowBox[{"h", "+", "1"}]}], "s2"], 
                  RowBox[{"y", "[", "k", "]"}]}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "2"}], "h"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                   RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], "+", 
                 RowBox[{"x", "[", "h", "]"}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"k", "=", "1"}], 
                 RowBox[{"h", "-", "1"}]], 
                SuperscriptBox[
                 RowBox[{"y", "[", "k", "]"}], "2"]}]}]}], ")"}]}]}], "+", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"s1", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", 
              RowBox[{"i", "+", "1"}]}], "s1"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "i"}], "s2"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "i"], 
                   RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "2"}], 
                   RowBox[{"i", "-", "1"}]], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                   RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], "+", 
                 RowBox[{"x", "[", "h", "]"}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"k", "=", "1"}], 
                 RowBox[{"i", "-", "1"}]], 
                SuperscriptBox[
                 RowBox[{"y", "[", "k", "]"}], "2"]}]}]}], ")"}]}]}], "-", 
          RowBox[{"x", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"s2", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", "1"}], 
             RowBox[{"i", "-", "1"}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", 
                    RowBox[{"h", "+", "2"}]}], "s1"], 
                  RowBox[{"x", "[", "k", "]"}]}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "2"}], 
                   RowBox[{"h", "+", "1"}]], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                   RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], "+", 
                 RowBox[{"y", "[", "h", "]"}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"y", "[", "i", "]"}], 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"k", "=", "1"}], "h"], 
                SuperscriptBox[
                 RowBox[{"x", "[", "k", "]"}], "2"]}]}]}], ")"}]}]}], "+", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"s2", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", 
              RowBox[{"i", "+", "1"}]}], "s2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", 
                    RowBox[{"i", "+", "1"}]}], "s1"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"i", "+", "1"}]], 
                   RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "2"}], "i"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                   RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], "+", 
                 RowBox[{"y", "[", "h", "]"}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"y", "[", "i", "]"}], 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"k", "=", "1"}], "i"], 
                SuperscriptBox[
                 RowBox[{"x", "[", "k", "]"}], "2"]}]}]}], ")"}]}]}], "-", 
          RowBox[{"y", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[158]:=",ExpressionUUID->"1f8017ea-6769-45e0-9d38-ef20759317a4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Uniform if tie", "Text",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"ad366fe5-8626-421e-8214-196ae5600540"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MeanDynamicsTwoUnif", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"s1", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", "1"}], 
             RowBox[{"i", "-", "1"}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", 
                   RowBox[{"h", "+", "1"}]}], "s2"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], "s2"], 
                  RowBox[{
                   RowBox[{"y", "[", "k", "]"}], 
                   RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "2"}], "h"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], 
                   RowBox[{"k", "-", "1"}]], 
                  RowBox[{
                   RowBox[{"y", "[", "k", "]"}], 
                   RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], 
                   RowBox[{"h", "-", "1"}]], 
                  SuperscriptBox[
                   RowBox[{"y", "[", "k", "]"}], "2"]}]}]}], " ", ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], "+", 
                RowBox[{"x", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "+", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"s1", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", 
              RowBox[{"i", "+", "1"}]}], "s1"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "i"}], "s2"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], "i"], 
                  RowBox[{
                   RowBox[{"y", "[", "k", "]"}], 
                   RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "2"}], 
                  RowBox[{"i", "-", "1"}]], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], 
                   RowBox[{"k", "-", "1"}]], 
                  RowBox[{
                   RowBox[{"y", "[", "k", "]"}], 
                   RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 FractionBox["1", "2"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], 
                   RowBox[{"i", "-", "1"}]], 
                  SuperscriptBox[
                   RowBox[{"y", "[", "k", "]"}], "2"]}]}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], "+", 
                RowBox[{"x", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "-", 
          RowBox[{"x", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"s2", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", "1"}], 
             RowBox[{"i", "-", "1"}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", 
                   RowBox[{"h", "+", "2"}]}], "s1"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], "s1"], 
                  RowBox[{
                   RowBox[{"x", "[", "k", "]"}], 
                   RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "2"}], 
                  RowBox[{"h", "+", "1"}]], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], 
                   RowBox[{"k", "-", "1"}]], 
                  RowBox[{
                   RowBox[{"x", "[", "k", "]"}], 
                   RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 FractionBox["1", "2"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "h"], 
                  SuperscriptBox[
                   RowBox[{"x", "[", "k", "]"}], "2"]}]}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"y", "[", "i", "]"}], "+", 
                RowBox[{"y", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "+", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"s2", "-", "1"}]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"h", "=", 
              RowBox[{"i", "+", "1"}]}], "s2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", 
                   RowBox[{"i", "+", "1"}]}], "s1"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], 
                   RowBox[{"i", "+", "1"}]], 
                  RowBox[{
                   RowBox[{"x", "[", "k", "]"}], 
                   RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"k", "=", "2"}], "i"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"l", "=", "1"}], 
                   RowBox[{"k", "-", "1"}]], 
                  RowBox[{
                   RowBox[{"x", "[", "k", "]"}], 
                   RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                RowBox[{
                 FractionBox["1", "2"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "i"], 
                  SuperscriptBox[
                   RowBox[{"x", "[", "k", "]"}], "2"]}]}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"y", "[", "i", "]"}], "+", 
                RowBox[{"y", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "-", 
          RowBox[{"y", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[159]:=",ExpressionUUID->"2ffaec68-da07-4843-bfad-5e6d96df6f88"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test adjacent ", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"2eddc65b-50b7-460f-8d26-0c479f701de0"],

Cell[CellGroupData[{

Cell["Min if tie", "Text",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"b49e8314-86b8-47ae-ad78-bcd70081eb2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MeanDynamicsAdjacentMin", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", ">", "1"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "-", "1"}]}], 
               RowBox[{"i", "-", "1"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"h", "+", "1"}]}], "s2"], 
                   RowBox[{"y", "[", "k", "]"}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], "h"], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}]}], ")"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                   RowBox[{"x", "[", "i", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                   RowBox[{"x", "[", "h", "]"}]}]}], ")"}]}], ")"}]}], ",", 
             "0"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "<", "s1"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "+", "1"}]}], 
               RowBox[{"i", "+", "1"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "i"}], "s2"], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "i"], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], 
                    RowBox[{"i", "-", "1"}]], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], 
                    RowBox[{"i", "-", "1"}]], 
                   SuperscriptBox[
                    RowBox[{"y", "[", "k", "]"}], "2"]}]}], ")"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                   RowBox[{"x", "[", "i", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                   RowBox[{"x", "[", "h", "]"}]}]}], ")"}]}], ")"}]}], ",", 
             "0"}], "]"}]}], "-", 
          RowBox[{"x", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", ">", "1"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "-", "1"}]}], 
               RowBox[{"i", "-", "1"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"h", "+", "2"}]}], "s1"], 
                   RowBox[{"x", "[", "k", "]"}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], 
                    RowBox[{"h", "+", "1"}]], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}]}], ")"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                   RowBox[{"y", "[", "i", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                   RowBox[{"y", "[", "h", "]"}]}]}], ")"}]}], ")"}]}], ",", 
             "0"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "<", "s2"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "+", "1"}]}], 
               RowBox[{"i", "+", "1"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"i", "+", "1"}]}], "s1"], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"i", "+", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], "i"], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], "i"], 
                   SuperscriptBox[
                    RowBox[{"x", "[", "k", "]"}], "2"]}]}], ")"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                   RowBox[{"y", "[", "i", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                   RowBox[{"y", "[", "h", "]"}]}]}], ")"}]}], ")"}]}], ",", 
             "0"}], "]"}]}], "-", 
          RowBox[{"y", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[160]:=",ExpressionUUID->"ce572374-25eb-47a6-af4d-329b8c34bab3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Stick if tie", "Text",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"daf349c7-1cb9-49bf-a4d8-5a7a4c7cc29c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MeanDynamicsAdjacentStick", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", ">", "1"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "-", "1"}]}], 
               RowBox[{"i", "-", "1"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"h", "+", "1"}]}], "s2"], 
                    RowBox[{"y", "[", "k", "]"}]}], "+", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], "h"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                    RowBox[{"x", "[", "i", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                    RowBox[{"x", "[", "h", "]"}]}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                  "]"}], 
                 RowBox[{"x", "[", "i", "]"}], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], 
                   RowBox[{"h", "-", "1"}]], 
                  SuperscriptBox[
                   RowBox[{"y", "[", "k", "]"}], "2"]}]}]}], ")"}]}], ",", 
             "0"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "<", "s1"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "+", "1"}]}], 
               RowBox[{"i", "+", "1"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "i"}], "s2"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "i"], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], 
                    RowBox[{"i", "-", "1"}]], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                    RowBox[{"x", "[", "i", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                    RowBox[{"x", "[", "h", "]"}]}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                  "]"}], 
                 RowBox[{"x", "[", "i", "]"}], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], 
                   RowBox[{"i", "-", "1"}]], 
                  SuperscriptBox[
                   RowBox[{"y", "[", "k", "]"}], "2"]}]}]}], ")"}]}], ",", 
             "0"}], "]"}]}], "-", 
          RowBox[{"x", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", ">", "1"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "-", "1"}]}], 
               RowBox[{"i", "-", "1"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"h", "+", "2"}]}], "s1"], 
                    RowBox[{"x", "[", "k", "]"}]}], "+", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], 
                    RowBox[{"h", "+", "1"}]], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                    RowBox[{"y", "[", "i", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                    RowBox[{"y", "[", "h", "]"}]}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                  "]"}], 
                 RowBox[{"y", "[", "i", "]"}], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "h"], 
                  SuperscriptBox[
                   RowBox[{"x", "[", "k", "]"}], "2"]}]}]}], ")"}]}], ",", 
             "0"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "<", "s2"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "+", "1"}]}], 
               RowBox[{"i", "+", "1"}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"i", "+", "1"}]}], "s1"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"i", "+", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], "i"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                    RowBox[{"y", "[", "i", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                    "]"}], 
                    RowBox[{"y", "[", "h", "]"}]}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                  "]"}], 
                 RowBox[{"y", "[", "i", "]"}], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "i"], 
                  SuperscriptBox[
                   RowBox[{"x", "[", "k", "]"}], "2"]}]}]}], ")"}]}], ",", 
             "0"}], "]"}]}], "-", 
          RowBox[{"y", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[161]:=",ExpressionUUID->"5cfe8e23-be22-4856-9871-0b5719b5fd6d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Uniform if tie", "Text",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"11dea85e-ed93-447c-9fc5-8c950b85bec5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MeanDynamicsAdjacentUnif", "[", 
    RowBox[{"n_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", ">", "1"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "-", "1"}]}], 
               RowBox[{"i", "-", "1"}]], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", 
                    RowBox[{"h", "+", "1"}]}], "s2"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "s2"], 
                   RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "2"}], "h"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                   RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], 
                    RowBox[{"h", "-", "1"}]], 
                   SuperscriptBox[
                    RowBox[{"y", "[", "k", "]"}], "2"]}]}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                   "]"}], 
                  RowBox[{"x", "[", "i", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                   "]"}], 
                  RowBox[{"x", "[", "h", "]"}]}]}], ")"}]}]}], ",", "0"}], 
            "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "<", "s1"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "+", "1"}]}], 
               RowBox[{"i", "+", "1"}]], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "i"}], "s2"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "i"], 
                   RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "2"}], 
                   RowBox[{"i", "-", "1"}]], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                   RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], 
                    RowBox[{"i", "-", "1"}]], 
                   SuperscriptBox[
                    RowBox[{"y", "[", "k", "]"}], "2"]}]}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                   "]"}], 
                  RowBox[{"x", "[", "i", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s1"}]}], ",", "2", ",", "1"}], 
                   "]"}], 
                  RowBox[{"x", "[", "h", "]"}]}]}], ")"}]}]}], ",", "0"}], 
            "]"}]}], "-", 
          RowBox[{"x", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", ">", "1"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "-", "1"}]}], 
               RowBox[{"i", "-", "1"}]], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", 
                    RowBox[{"h", "+", "2"}]}], "s1"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "s1"], 
                   RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "2"}], 
                   RowBox[{"h", "+", "1"}]], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                   RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], "h"], 
                   SuperscriptBox[
                    RowBox[{"x", "[", "k", "]"}], "2"]}]}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                   "]"}], 
                  RowBox[{"y", "[", "i", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                   "]"}], 
                  RowBox[{"y", "[", "h", "]"}]}]}], ")"}]}]}], ",", "0"}], 
            "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "<", "s2"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"h", "=", 
                RowBox[{"i", "+", "1"}]}], 
               RowBox[{"i", "+", "1"}]], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", 
                    RowBox[{"i", "+", "1"}]}], "s1"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"i", "+", "1"}]], 
                   RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "2"}], "i"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                   RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], "i"], 
                   SuperscriptBox[
                    RowBox[{"x", "[", "k", "]"}], "2"]}]}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], "||", 
                    RowBox[{"i", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                   "]"}], 
                  RowBox[{"y", "[", "i", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"h", "\[Equal]", "1"}], "||", 
                    RowBox[{"h", "\[Equal]", "s2"}]}], ",", "2", ",", "1"}], 
                   "]"}], 
                  RowBox[{"y", "[", "h", "]"}]}]}], ")"}]}]}], ",", "0"}], 
            "]"}]}], "-", 
          RowBox[{"y", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[162]:=",ExpressionUUID->"bea904e1-5481-4e5d-a7de-2c9327246ef1"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Jacobians", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"bbb933f8-30c3-4f47-83c7-5a4aa2304c17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"JacobianOfMeanDynamics", "::", "usage"}], "=", 
    "\"\<JacobianOfMeanDynamics[ \!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\
\) , \!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the \
Jacobian of the mean dynamics \!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\), \
which must be given as a parameter. The format of the parameter \
\!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\) that the user must provide is \
the same format of the output given by the function MeanDynamics. Thus, a \
common use of this function is:\n\n\\tJacobianOfMeanDynamics[ MeanDynamics[\!\
\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\)] ]\n\nwhere:\n- \!\(\*StyleBox[\
\"testSetRule\",FontSlant->\"Italic\"]\) is a string that indicates the test \
set rule. Possible values are: \\\"all\\\" (test all), \\\"two\\\" (test two) \
or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\) is the function of which you \
wish to compute the Jacobian, expressed in the same format of the output \
given by the function MeanDynamics.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"JacobianOfMeanDynamics", "[", 
     RowBox[{"EM_", ",", 
      RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{"Length", "[", "EM", "]"}], "-", "2"}]}], ",", "s1", ",", 
        "s2", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ";", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"J", "=", 
        RowBox[{"D", "[", 
         RowBox[{"EM", ",", 
          RowBox[{"{", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"y", "[", "j", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}], "]"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Jacobian of mean dynamics:\\n\>\"", ",", "\"\<J = \>\"", ",", 
           RowBox[{"MatrixForm", "[", "J", "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "J"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProjectedJacobian", "::", "usage"}], "=", 
    "\"\<ProjectedJacobian[ \!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\) , \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the \
projected Jacobian of the mean dynamics \
\!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\), which must be given as a \
parameter. The projected Jacobian is the projection of the regular Jacobian \
over the two simplices. Specifically, the projection is obtained by pre- and \
post-multiplying the Jacobian matrix by the orthogonal projection of \
\!\(\*SuperscriptBox[\"\[DoubleStruckCapitalR]\", \
StyleBox[\"s\",FontSlant->\"Italic\"]]\) onto \
\!\(\*StyleBox[\"T\",FontSlant->\"Italic\"]\)\[CapitalXi] (see Appendix A of \
the paper for details). The format of the parameter \
\!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\) that the user must provide is \
the same format of the output given by the function MeanDynamics. Thus, a \
common use of this function is:\n\n\\tProjectedJacobian[ \
MeanDynamics[\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\)] ]\n\nwhere:\n- \!\(\*StyleBox[\
\"testSetRule\",FontSlant->\"Italic\"]\) is a string that indicates the test \
set rule. Possible values are: \\\"all\\\" (test all), \\\"two\\\" (test two) \
or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\) is the function of which you \
wish to compute the Jacobian, expressed in the same format of the output \
given by the function MeanDynamics.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProjectedJacobian", "[", 
     RowBox[{"EM_", ",", 
      RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{"Length", "[", "EM", "]"}], "-", "2"}]}], ",", "s1", ",", 
        "s2", ",", "\[CapitalPhi]1", ",", "\[CapitalPhi]2", ",", "PJ"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ";", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalPhi]1", "=", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
         RowBox[{
          FractionBox["1", "s1"], 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalPhi]2", "=", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
         RowBox[{
          FractionBox["1", "s2"], 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"PJ", "=", 
        RowBox[{
         RowBox[{"ArrayFlatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[CapitalPhi]1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[CapitalPhi]2"}], "}"}]}], "}"}], "]"}], ".", 
         RowBox[{"JacobianOfMeanDynamics", "[", 
          RowBox[{"EM", ",", " ", "verbosity"}], "]"}], ".", 
         RowBox[{"ArrayFlatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[CapitalPhi]1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[CapitalPhi]2"}], "}"}]}], "}"}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Projected Jacobian of mean dynamics:\\nPJ = \>\"", ",", 
           RowBox[{"MatrixForm", "[", "PJ", "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "PJ"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PostProjectedJacobian", "::", "usage"}], "=", 
    "\"\<PostProjectedJacobian[ \
\!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\) , \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the \
post-projected Jacobian of the mean dynamics \
\!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\), which must be given as a \
parameter. The post-projected Jacobian is obtained by post-multiplying the \
Jacobian matrix by the orthogonal projection of \!\(\*SuperscriptBox[\"\
\[DoubleStruckCapitalR]\", StyleBox[\"s\",FontSlant->\"Italic\"]]\) onto \!\(\
\*StyleBox[\"T\",FontSlant->\"Italic\"]\)\[CapitalXi] (see Appendix A of the \
paper for details). The format of the parameter \
\!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\) that the user must provide is \
the same format of the output given by the function MeanDynamics. Thus, a \
common use of this function is:\n\n\\tPostProjectedJacobian[ \
MeanDynamics[\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\)] ]\n\nwhere:\n- \!\(\*StyleBox[\
\"testSetRule\",FontSlant->\"Italic\"]\) is a string that indicates the test \
set rule. Possible values are: \\\"all\\\" (test all), \\\"two\\\" (test two) \
or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"MD\",FontSlant->\"Italic\"]\) is the function of which you \
wish to compute the Jacobian, expressed in the same format of the output \
given by the function MeanDynamics.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PostProjectedJacobian", "[", 
    RowBox[{"EM_", ",", 
     RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Length", "[", "EM", "]"}], "-", "2"}]}], ",", "s1", ",", 
       "s2", ",", "\[CapitalPhi]1", ",", "\[CapitalPhi]2", ",", "PPJ"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s1", "=", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ";", 
      RowBox[{"s2", "=", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalPhi]1", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
        RowBox[{
         FractionBox["1", "s1"], 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalPhi]2", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
        RowBox[{
         FractionBox["1", "s2"], 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PPJ", "=", 
       RowBox[{
        RowBox[{"JacobianOfMeanDynamics", "[", 
         RowBox[{"EM", ",", "verbosity"}], "]"}], ".", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[CapitalPhi]1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[CapitalPhi]2"}], "}"}]}], "}"}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Post-projected Jacobian of mean dynamics:\\nPPJ = \>\"", ",", 
          RowBox[{"MatrixForm", "[", "PPJ", "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "PPJ"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[163]:=",ExpressionUUID->"8d5b138f-de6f-4a09-9825-27418d4ee3d9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exact rest points (Gr\[ODoubleDot]bner bases)", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"ea2e59c7-aa89-4370-b457-cd778de4d818"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExactRestPoints", "::", "usage"}], "=", 
    "\"\<ExactRestPoints[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"useFullSimplify\",FontSlant->\"Italic\"]\):False, \
\!\(\*StyleBox[\"omitLastVariable\",FontSlant->\"Italic\"]\):False, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):5, \
\!\(\*StyleBox[\"prec\",FontSlant->\"Italic\"]\):precision ] returns the \
exact rest points of the BEP dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1). The computation of the rest points is \
performed by obtaining a Gr\[ODoubleDot]bner basis.\[IndentingNewLine]\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"useFullSimplify\",FontSlant->\"Italic\"]\) is an optional \
(boolean) parameter. If \
\!\(\*StyleBox[\"useFullSimplify\",FontSlant->\"Italic\"]\) is set to True, \
then the mean dynamics equations are simplified before computing the exact \
rest points.\n- \!\(\*StyleBox[\"omitLastVariable\",FontSlant->\"Italic\"]\) \
is an optional (boolean) parameter. If \
\!\(\*StyleBox[\"omitLastVariable\",FontSlant->\"Italic\"]\) is set to True, \
then the following two identities \n\\t x[s1] == 1 - \
\!\(\*UnderoverscriptBox[\(\[Sum]\), \(i = 1\), \(s1 - 1\)]\)x[i] \n\\t y[s2] \
== 1 - \!\(\*UnderoverscriptBox[\(\[Sum]\), \(i = 1\), \(s2 - 1\)]\)y[i]\n    \
 are used to eliminate the last variables (i.e. x[s1] and y[s2]) in the mean \
dynamics equations before computing the exact rest points. (s1 and s2 are the \
number of strategies for the first movers and the second movers \
respectively.)\n- \!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an \
optional parameter. It is an integer that controls the number of messages \
that are shown by the function. The higher the value of verbosity, the more \
messages are printed along the execution of any function. 0 prints no \
messages. 10 prints all implemented messages.\n- \
\!\(\*StyleBox[\"prec\",FontSlant->\"Italic\"]\) is an optional parameter, \
which determines the way some numbers are displayed (i.e. it has no effect on \
any important computation). It is an integer that controls the number of \
digits displayed in the message that shows the numerical approximation to the \
exact solution. The default value is \!\(\*StyleBox[\"precision\",FontSlant->\
\"Italic\"]\), which is a global parameter set at the top of this notebook, \
in the cell \\\"General options\\\".\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExactRestPoints", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"useFullSimplify_:", "False"}], ",", 
     RowBox[{"omitLastVariable_:", "False"}], ",", 
     RowBox[{"verbosity_:", "5"}], ",", 
     RowBox[{"prec_:", "precision"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "EM", 
       ",", "vars", ",", "basis", ",", "sol", ",", "i"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EM", "=", 
       RowBox[{"MeanDynamics", "[", 
        RowBox[{
        "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
         "useFullSimplify", ",", "omitLastVariable", ",", "verbosity"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"tieBreakingRule", "==", "\"\<stick\>\""}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "We", " ", "have", " ", "to", " ", "remove", " ", "the", " ", 
          "vertex"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<\!\(\*StyleBox[\"IMPORTANT\",
FontVariations->{\"Underline\"->True}]\): To get a polynomial system with a \
finite solution set we have to impose the additional constraint x[1]\
\[NotEqual]1.\\nThis is done by adding the polynomial \
(x[1]-1)*z\[Equal]1.\\nThus, even though x[1]=y[1]=1 is indeed a rest point, \
it will not appear below.\>\"", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"omitLastVariable", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"vars", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"s1", "-", "1"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"s2", "-", "1"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"{", "z", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"basis", "=", 
             RowBox[{"GroebnerBasis", "[", 
              RowBox[{
               RowBox[{"Join", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"EM", "\[Equal]", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", "EM", "]"}]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "-", "1"}], ")"}], "*", 
                    "z"}], "\[Equal]", "1"}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", "vars"}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"vars", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", "z", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"basis", "=", 
             RowBox[{"GroebnerBasis", "[", 
              RowBox[{
               RowBox[{"Join", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"EM", "\[Equal]", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", "EM", "]"}]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "-", "1"}], ")"}], "*", 
                    "z"}], "\[Equal]", "1"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "\[Equal]", 
                    "1"}], ",", 
                   RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{"y", "[", "j", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "s2"}], "}"}]}], "]"}], "\[Equal]", 
                    "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
               "vars"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"omitLastVariable", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"vars", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"s1", "-", "1"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"s2", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ";",
             "\[IndentingNewLine]", 
            RowBox[{"basis", "=", 
             RowBox[{"GroebnerBasis", "[", 
              RowBox[{
               RowBox[{"Join", "[", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"EM", "\[Equal]", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"Length", "[", "EM", "]"}]}], "]"}]}], "}"}], 
                "]"}], ",", "\[IndentingNewLine]", "vars"}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"vars", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"basis", "=", 
             RowBox[{"GroebnerBasis", "[", 
              RowBox[{
               RowBox[{"Join", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"EM", "\[Equal]", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", "EM", "]"}]}], "]"}]}], "}"}], ",",
                  "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "\[Equal]", 
                    "1"}], ",", 
                   RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{"y", "[", "j", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "s2"}], "}"}]}], "]"}], "\[Equal]", 
                    "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
               "vars"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "4"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Gr\[ODoubleDot]bner basis: \\n\>\"", ",", " ", 
          RowBox[{"MatrixForm", "@", "basis"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Variables in Gr\[ODoubleDot]bner basis: \\n\>\"", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"Variables", ",", "basis"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
         "Print", "[", "\"\<Max degrees in Gr\[ODoubleDot]bner basis:\>\"", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"MatrixForm", "@", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Exponent", "[", 
                 RowBox[{"#", ",", "vars"}], "]"}], "&"}], ",", "basis"}], 
              "]"}], ",", "vars"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Largest number of digits of any coefficient in the Gr\
\[ODoubleDot]bner basis: \>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"IntegerLength", "[", 
            RowBox[{"Max", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"CoefficientList", "[", 
               RowBox[{"basis", ",", "vars"}], "]"}], "]"}], "]"}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Largest number of digits of any coefficient in the first \
polynomial of the Gr\[ODoubleDot]bner basis: \>\"", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"IntegerLength", "[", 
            RowBox[{"Max", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"CoefficientList", "[", 
               RowBox[{
                RowBox[{"First", "[", "basis", "]"}], ",", 
                RowBox[{"Variables", "[", 
                 RowBox[{"First", "[", "basis", "]"}], "]"}]}], "]"}], "]"}], 
             "]"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"{", 
        RowBox[{"ToRules", "[", "\[IndentingNewLine]", 
         RowBox[{"Reduce", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"basis", "\[Equal]", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"Length", "[", "basis", "]"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"0", "\[LessEqual]", 
                RowBox[{"x", "[", "i", "]"}], "\[LessEqual]", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{"omitLastVariable", ",", 
                   RowBox[{"s1", "-", "1"}], ",", "s1"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"0", "\[LessEqual]", 
                RowBox[{"y", "[", "j", "]"}], "\[LessEqual]", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{"omitLastVariable", ",", 
                   RowBox[{"s2", "-", "1"}], ",", "s2"}], "]"}]}], "}"}]}], 
              "]"}]}], "]"}], ",", "Reals", ",", 
           RowBox[{"Backsubstitution", "\[Rule]", "True"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"$MaxExtraPrecision", "=", "100"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Numerical approximation to exact solution computed using \
the Gr\[ODoubleDot]bner basis: \\n\>\"", ",", " ", 
              RowBox[{"(", 
               RowBox[{"sol", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], "\[Rule]", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                  ",", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i", "]"}], "\[Rule]", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                  ",", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"z", "\[Rule]", "num_"}], ")"}], ":>", 
                    RowBox[{"(", 
                    RowBox[{"z", "\[Rule]", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}]}], 
                 "}"}]}], ")"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "sol"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[
  0.85],ExpressionUUID->"f09878dc-df6e-450e-a7ae-27b2f26e9eeb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Approximate rest points (floating-point and rational approximations)\
\>", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"9741be4a-3c29-47c9-896e-9e3a7dbb031f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FloatingPointApproximateRestPoint", "::", "usage"}], "=", 
    "\"\<FloatingPointApproximateRestPoint[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"step\",FontSlant->\"Italic\"]\):2.^-4 ] returns an \
approximate rest point of the BEP dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1). \n\nThis function employs the Euler method \
to find a fixed point of the equation \n\\t \!\(\*SubscriptBox[\(x\), \(t + 1\
\)]\) = \!\(\*SubscriptBox[\(x\), \(t\)]\) + step * \
MeanDynamics(\!\(\*SubscriptBox[\(x\), \(t\)]\)) \n      using floating-point \
arithmetic and starting from the center of the simplices.\[IndentingNewLine]\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game\n- \
\!\(\*StyleBox[\"step\",FontSlant->\"Italic\"]\) is an optional parameter. It \
determines the magnitude of the step used in the Euler method.\>\""}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FloatingPointApproximateRestPoint", "[", 
     RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
      RowBox[{"step_:", 
       RowBox[{"2.", "^", 
        RowBox[{"-", "4"}]}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "EM", 
        ",", "\[CapitalPhi]1", ",", "\[CapitalPhi]2", ",", "P", ",", "vars", 
        ",", "CompiledNextIteration", ",", "Compiledfpoint"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EM", "=", 
        RowBox[{"MeanDynamics", "[", 
         RowBox[{
         "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", "False", 
          ",", "False", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalPhi]1", "=", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
         RowBox[{
          FractionBox["1", "s1"], 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalPhi]2", "=", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
         RowBox[{
          FractionBox["1", "s2"], 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[CapitalPhi]1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[CapitalPhi]2"}], "}"}]}], "}"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"vars", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"y", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"CompiledNextIteration", "=", 
        RowBox[{"Compile", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", "vars", "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"ProjectOnSimplex", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "]"}], ",", 
              RowBox[{"ProjectOnSimplex", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], "]"}]}], "]"}], 
            "+", 
            RowBox[{"step", "*", 
             RowBox[{"P", ".", "EM"}]}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Compiledfpoint", "=", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{"FixedPoint", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"CompiledNextIteration", "@@", "#"}], ")"}], "&"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"1.", "/", "s1"}], ",", "s1"}], "]"}], ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"1.", "/", "s2"}], ",", "s2"}], "]"}]}], "]"}], ",", 
            RowBox[{"10", "^", "5"}], ",", 
            RowBox[{"SameTest", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", 
                 RowBox[{"#1", "-", "#2"}], "]"}], "<", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "16"}]}]}], "&"}], ")"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Thread", "[", 
        RowBox[{"vars", "\[Rule]", "Compiledfpoint"}], "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RationalApproximateRestPoint", "::", "usage"}], "=", 
    "\"\<RationalApproximateRestPoint[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1, \
\!\(\*StyleBox[\"step\",FontSlant->\"Italic\"]\):1, \
\!\(\*StyleBox[\"minIterations\",FontSlant->\"Italic\"]\):1, \
\!\(\*StyleBox[\"maxIterations\",FontSlant->\"Italic\"]\):200 ] returns the \
approximate rest points of the BEP dynamics for a Centipede game of length \!\
\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1).\n\nThis function employs the Euler method to \
find a fixed point of the equation \n\\t \!\(\*SubscriptBox[\(x\), \(t + 1\)]\
\) = \!\(\*SubscriptBox[\(x\), \(t\)]\) + step * \
MeanDynamics(\!\(\*SubscriptBox[\(x\), \(t\)]\)) \n      using exact rational \
arithmetic and starting from a rational point close to the output of \
FloatingPointApproximateRestPoint.\n\nThe point returned by this function is \
a fixed point in the sense that \!\(\*SubscriptBox[\(x\), \(t\)]\) and \
\!\(\*SubscriptBox[\(x\), \(t + 1\)]\) (= \!\(\*SubscriptBox[\(x\), \(t\)]\) \
+ step * MeanDynamics(\!\(\*SubscriptBox[\(x\), \(t\)]\))) are equal when \
expressed with 6 digits of precision for numbers greater or equal to \
\!\(\*SuperscriptBox[\(10\), \(-4\)]\), and 3 digits of precision for smaller \
numbers).\[IndentingNewLine]\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\n- \
\!\(\*StyleBox[\"step\",FontSlant->\"Italic\"]\) is an optional parameter. It \
determines the magnitude of the step used in the Euler method.\n- \
\!\(\*StyleBox[\"minIterations\",FontSlant->\"Italic\"]\) is an optional \
parameter that determines the minimum number of iterations that the Euler \
method is conducted. \n- \!\(\*StyleBox[\"maxIterations\",FontSlant->\"Italic\
\"]\) is an optional parameter that determines the maximum number of \
iterations that the Euler method is conducted.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RationalApproximateRestPoint", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"step_:", "1"}], ",", 
     RowBox[{"minIterations_:", "1"}], ",", 
     RowBox[{"maxIterations_:", "200"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "EM", 
       ",", "fixedPoint", ",", "iterations", ",", 
       RowBox[{"oldFixedPointStr", "=", "\"\<old\>\""}], ",", 
       RowBox[{"newFixedPointStr", "=", "\"\<new\>\""}], ",", "vars", ",", 
       RowBox[{"scientificDigits", "=", "3"}], ",", 
       RowBox[{"decimalPlaces", "=", "6"}], ",", "headings", ",", "Nice"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EM", "=", 
       RowBox[{"MeanDynamics", "[", 
        RowBox[{
        "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", "False", 
         ",", "False", ",", "verbosity"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fixedPoint", "=", 
       RowBox[{"vars", "/.", 
        RowBox[{"FloatingPointApproximateRestPoint", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Nice", "[", "a_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "<", 
          RowBox[{"10", "^", 
           RowBox[{"-", "4"}]}]}], ",", 
         RowBox[{"ScientificForm", "[", 
          RowBox[{
           RowBox[{"N", "[", "a", "]"}], ",", "scientificDigits"}], "]"}], 
         ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", "a", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"decimalPlaces", "+", "4"}], ",", "decimalPlaces"}], 
            "}"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SetAttributes", "[", 
       RowBox[{"Nice", ",", "Listable"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"headings", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<x[\>\"", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "Italic", ",", "14"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"i", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "14"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<]\>\"", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "14"}], "]"}]}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<y[\>\"", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "Italic", ",", "14"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"i", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "14"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<]\>\"", ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], 
                    ",", "14"}], "]"}]}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}], ",", 
            "None"}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Floating-point approximation to rest point:\\n\\t\>\"", ",", 
           RowBox[{"TableForm", "[", 
            RowBox[{
             RowBox[{"Nice", "[", "fixedPoint", "]"}], ",", 
             RowBox[{"TableHeadings", "\[Rule]", "headings"}], ",", 
             RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", 
             RowBox[{"TableSpacing", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"3", ",", "Automatic"}], "}"}]}]}], "]"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"iterations", "=", "1"}], ",", 
        RowBox[{
         RowBox[{"iterations", "\[LessEqual]", "minIterations"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"iterations", "\[LessEqual]", "maxIterations"}], "&&", 
           RowBox[{"(", 
            RowBox[{"oldFixedPointStr", "\[NotEqual]", "newFixedPointStr"}], 
            ")"}]}], ")"}]}], ",", 
        RowBox[{"iterations", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "The", " ", "following", " ", "three", " ", "lines", " ", "of", " ",
            "code", " ", "should", " ", "not", " ", "be", " ", "necessary", 
           " ", "in", " ", "principle"}], ",", " ", 
          RowBox[{
          "but", " ", "they", " ", "are", " ", "vital", " ", "to", " ", 
           "speed", " ", "up", " ", "the", " ", "execution"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fixedPoint", "=", 
          RowBox[{"N", "[", 
           RowBox[{"fixedPoint", ",", "16"}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Here", " ", "we", " ", "are", " ", "taking", " ", "the", " ", 
            "16", " ", "most", " ", "significant", " ", "digits", " ", "of", 
            " ", "fixedPoint"}], ",", " ", 
           RowBox[{"which", " ", "is", " ", "a", " ", "rational", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "except", " ", "at", " ", "the", " ", "very", " ", "first", 
                " ", "iteration"}], ",", " ", 
               RowBox[{
               "where", " ", "it", " ", "is", " ", "a", " ", "machine", " ", 
                "number"}]}], ")"}], "."}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "fixedPoint", " ", "now", " ", "is", " ", "NOT", " ", "an", " ", 
              "IEEE", " ", "754", " ", "floating"}], "-", 
             RowBox[{"point", " ", "number", " ", 
              RowBox[{"(", 
               RowBox[{
               "except", " ", "at", " ", "the", " ", "very", " ", "first", 
                " ", "iteration"}], ")"}]}]}], ";", " ", 
            RowBox[{
            "it", " ", "is", " ", "a", " ", "number", " ", "with", " ", "16", 
             " ", "digits", " ", "of", " ", "precision"}]}], ",", " ", 
           RowBox[{
           "and", " ", "will", " ", "be", " ", "rationalized", " ", "at", " ",
             "the", " ", "next", " ", "line", " ", "of", " ", "code"}]}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{"fixedPoint", "=", 
          RowBox[{"Rationalize", "[", 
           RowBox[{"fixedPoint", ",", "0"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fixedPoint", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Normalize", "[", 
             RowBox[{
              RowBox[{"fixedPoint", "[", 
               RowBox[{"[", 
                RowBox[{";;", "s1"}], "]"}], "]"}], ",", "Total"}], "]"}], 
            ",", 
            RowBox[{"Normalize", "[", 
             RowBox[{
              RowBox[{"fixedPoint", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}], ",", 
              "Total"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"oldFixedPointStr", "=", 
          RowBox[{"ToString", "[", 
           RowBox[{"Nice", "[", "fixedPoint", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fixedPoint", "=", 
          RowBox[{"fixedPoint", " ", "+", " ", 
           RowBox[{"(", 
            RowBox[{"EM", "/.", 
             RowBox[{"(", 
              RowBox[{"Thread", "[", 
               RowBox[{"vars", "\[Rule]", "fixedPoint"}], "]"}], ")"}]}], 
            ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"newFixedPointStr", "=", 
          RowBox[{"ToString", "[", 
           RowBox[{"Nice", "[", "fixedPoint", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<\\n\>\"", ",", "iterations", " ", ",", 
              "\"\< iterations with rational arithmetic conducted:\\n\\t\>\"",
               ",", 
              RowBox[{"TableForm", "[", 
               RowBox[{
                RowBox[{"Nice", "[", "fixedPoint", "]"}], ",", 
                RowBox[{"TableHeadings", "\[Rule]", "headings"}], ",", 
                RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", 
                RowBox[{"TableSpacing", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "Automatic"}], "}"}]}]}], "]"}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "When", " ", "we", " ", "go", " ", "out", " ", "of", " ", "the", " ", 
         "loop", " ", "For", " ", "above", " ", "because", " ", 
         RowBox[{"(", 
          RowBox[{
          "oldFixedPointStr", " ", "\[Equal]", " ", "newFixedPointStr"}], 
          ")"}]}], ",", " ", 
        RowBox[{
         RowBox[{
         "we", " ", "know", " ", "that", " ", "we", " ", "have", " ", "found",
           " ", "a", " ", "rational", " ", "point", " ", "x", " ", "such", 
          " ", "that", " ", 
          RowBox[{"Nice", "[", "x", "]"}]}], " ", "==", " ", 
         RowBox[{"Nice", "[", 
          RowBox[{"x", " ", "+", " ", 
           RowBox[{"(", 
            RowBox[{"EM", "/.", 
             RowBox[{"(", 
              RowBox[{"Thread", "[", 
               RowBox[{"vars", "\[Rule]", "x"}], "]"}], ")"}]}], ")"}]}], 
          "]"}]}], ",", " ", 
        RowBox[{
        "with", " ", "all", " ", "the", " ", "operations", " ", "conducted", 
         " ", "using", " ", 
         RowBox[{"(", "exact", ")"}], " ", "rational", " ", "arithmetic"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Thread", "[", 
       RowBox[{"vars", "\[Rule]", "fixedPoint"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[171]:=",ExpressionUUID->"5c293add-696a-41fa-a1fc-79001887ac42"]
}, Closed]],

Cell[CellGroupData[{

Cell["Eigenvalues at approximate rest points", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"d57bf0b2-7a95-4682-82fb-54305dc96b80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EigenvaluesAtRationalApproximateRestPoint", "::", "usage"}], 
    "=", "\"\<EigenvaluesAtRationalApproximateRestPoint[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the exact \
eigenvalues of the (projected) Jacobian of the mean dynamics of the BEP \
dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1), evaluated at a rational point close to the \
exact rest point. This rational approximation is computed using the function \
RationalApproximateRestPoint.\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EigenvaluesAtRationalApproximateRestPoint", "[", 
     RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
      RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "fixedPointRules", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fixedPointRules", "=", 
        RowBox[{"RationalApproximateRestPoint", "[", 
         RowBox[{
         "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
          "verbosity"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"EigenvaluesAt", "[", 
        RowBox[{
        "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
         "fixedPointRules", ",", "verbosity"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NEigenvaluesAtRationalApproximateRestPoint", "::", "usage"}], 
    "=", "\"\<NEigenvaluesAtRationalApproximateRestPoint[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the \
approximate eigenvalues of the (projected) Jacobian of the mean dynamics of \
the BEP dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1), evaluated at a 16-digit-precision \
approximation to a rational point close to the exact rest point. The rational \
approximation is computed using the function RationalApproximateRestPoint, \
and the 16-digit-precision approximation to the rational number is computed \
using N[ ,16]. Thus, the computation of the eigenvalues is conducted using \
arbitrary-precision numbers.\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NEigenvaluesAtRationalApproximateRestPoint", "[", 
     RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
      RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fixedPointRules", ",", "vars"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fixedPointRules", "=", 
        RowBox[{"RationalApproximateRestPoint", "[", 
         RowBox[{
         "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
          "verbosity"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vars", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], "}"}]}],
            "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"y", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], "}"}]}],
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fixedPointRules", "=", 
        RowBox[{"Thread", "[", 
         RowBox[{"vars", "\[Rule]", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"vars", "/.", "fixedPointRules"}], ")"}], ",", "16"}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"EigenvaluesAt", "[", 
        RowBox[{
        "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
         "fixedPointRules", ",", "verbosity"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EigenvaluesAt", "[", 
    RowBox[{
    "testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     "pointRules_", ",", 
     RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"projectedJacobian", ",", "eigenvalues", ",", 
       RowBox[{"scientificDigits", "=", "3"}], ",", 
       RowBox[{"decimalPlaces", "=", "4"}], ",", "niceEigenvalues", ",", 
       "Nice"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"projectedJacobian", "=", 
       RowBox[{"ProjectedJacobian", "[", 
        RowBox[{
         RowBox[{"MeanDynamics", "[", 
          RowBox[{
          "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", "False", 
           ",", "False", ",", "0"}], "]"}], ",", 
         RowBox[{"verbosity", "-", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eigenvalues", "=", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"projectedJacobian", "/.", "pointRules"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Nice", "[", "a_", "]"}], ":=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", "a", "]"}], "<", 
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]]}], ",", 
            RowBox[{"ScientificForm", "[", 
             RowBox[{"a", ",", "scientificDigits"}], "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"a", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"decimalPlaces", "+", "4"}], ",", "decimalPlaces"}], 
               "}"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"niceEigenvalues", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Nice", "[", 
                RowBox[{"Re", "[", "#", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"Nice", "[", 
                 RowBox[{"Im", "[", "#", "]"}], "]"}], "*", "I"}]}], ")"}], 
             "&"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{"eigenvalues", ",", "16"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Eigenvalues at rational approximate rest point:\>\"", ",", 
           RowBox[{"TableForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"niceEigenvalues", ",", 
                RowBox[{"Precision", "/@", "eigenvalues"}]}], "}"}], 
              "\[Transpose]"}], ",", 
             RowBox[{"TableHeadings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<\[Lambda]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}]}], ",", "Bold", ",", 
                    "14"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"n", "+", "2"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Numerical approx.\>\"", ",", " ", 
                  "\"\<Precision of returned values\>\""}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", 
             RowBox[{"TableSpacing", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1"}], "}"}]}], ",", 
             RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "eigenvalues"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[175]:=",ExpressionUUID->"ef3ddae7-5ab7-4988-8529-aade0de221fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Local stability of interior rest point (perturbation theorem)\
\>", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"3007b06d-e525-45c6-9e50-b9338c6d4522"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LocalStabilityOfInteriorRestPoint", "::", "usage"}], "=", 
    "\"\<LocalStabilityOfInteriorRestPoint[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1, \
\!\(\*StyleBox[\"prec\",FontSlant->\"Italic\"]\):precision ] analyzes the \
local stability of the interior rest point of the BEP dynamics for a \
Centipede game of length \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1). To conduct this analysis, the function \
computes the exact eigenvalues of the (projected and reduced) Jacobian of the \
mean dynamics of the BEP dynamics, evaluated at a rational point close to the \
exact rest point (which is computed by obtaining a Gr\[ODoubleDot]bner \
basis). Then, using a perturbation theorem, it computes a bound for the \
eigenvalues at the exact interior rest point. Using the computed bound and \
the eigenvalues at the close rational point, the function checks whether all \
the eignevalues at the exact interior rest point have negative real part. See \
Appendix B and Online Appendix III of the paper for details.\n\nThe function \
returns \!\(\*StyleBox[\"True\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\) if the conducted analysis concludes \
that the interior rest point is locally stable. Otherwise it returns \
\!\(\*StyleBox[\"False\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\).\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\n- \
\!\(\*StyleBox[\"prec\",FontSlant->\"Italic\"]\) is an optional parameter, \
which determines the way some numbers are displayed (i.e. it has no effect on \
any important computation). It is an integer that controls the number of \
digits displayed in the messages that show numerical approximations to exact \
values. The default value is \!\(\*StyleBox[\"precision\",FontSlant->\"Italic\
\"]\), which is a global parameter set at the top of this notebook, in the \
cell \\\"General options\\\".\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LocalStabilityOfInteriorRestPoint", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"prec_:", "precision"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "interiorRestPoint", ",", "reducedJacobian", ",", "closeRational", ",",
        "closeAPN", ",", "eigensystem", ",", "eigenvalues", ",", 
       "eigenvectors", ",", "Neigenvectors", ",", "tolerance", ",", "xVector",
        ",", "yVector", ",", "allvars", ",", "Rbar1", ",", "Rbar2", ",", " ", 
       "Rbar", ",", "timeComputingEigensystem", ",", " ", "EM", ",", "bound", 
       ",", " ", "aux1", ",", " ", "aux2", ",", "boundsEigenvalues", ",", 
       "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xVector", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"yVector", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"y", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"allvars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"xVector", ",", "yVector"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interiorRestPoint", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"ExactRestPoints", "[", 
          RowBox[{
          "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", "False", 
           ",", "False", ",", "verbosity", ",", "prec"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", "1", "]"}], "/.", "#"}], ")"}], "\[NotEqual]",
             "1"}], ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "interiorRestPoint", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"interiorRestPoint", "=", 
          RowBox[{"First", "[", "interiorRestPoint", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Numerical approximation to interior exact solution: \\n\>\"",
              ",", " ", 
             RowBox[{"(", 
              RowBox[{"interiorRestPoint", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                 ",", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i", "]"}], "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                 ",", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"z", "\[Rule]", "num_"}], ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{"z", "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}]}], 
                "}"}]}], ")"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"closeRational", "=", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"xVector", ",", "yVector"}], "]"}], "\[Rule]", " ", 
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{
                RowBox[{"Rationalize", "[", 
                 RowBox[{
                  RowBox[{"N", "[", 
                   RowBox[{
                    RowBox[{"xVector", "/.", "interiorRestPoint"}], ",", 
                    "6"}], "]"}], ",", "0"}], "]"}], ",", "Total"}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Normalize", "[", 
               RowBox[{
                RowBox[{"Rationalize", "[", 
                 RowBox[{
                  RowBox[{"N", "[", 
                   RowBox[{
                    RowBox[{"yVector", "/.", "interiorRestPoint"}], ",", 
                    "6"}], "]"}], ",", "0"}], "]"}], ",", "Total"}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "4"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Rational point close to interior exact solution: \\n\>\"", 
              ",", " ", "closeRational"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Numerical approximation to rational point close to interior \
exact solution: \\n\>\"", ",", " ", 
              RowBox[{"(", 
               RowBox[{"closeRational", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                  ",", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i", "]"}], "->", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}]}], 
                 "}"}]}], ")"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"EM", " ", "=", 
          RowBox[{"MeanDynamics", "[", 
           RowBox[{
           "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", "False",
             ",", "False", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Rbar1", "=", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             FractionBox[
              RowBox[{
               SqrtBox["s1"], "-", "s1"}], 
              RowBox[{"s1", 
               RowBox[{"(", 
                RowBox[{"s1", "-", "1"}], ")"}]}]], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"s1", "-", "1"}], ",", 
               RowBox[{"s1", "-", "1"}]}], "}"}]}], "]"}], "+", " ", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"s1", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Rbar2", "=", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             FractionBox[
              RowBox[{
               SqrtBox["s2"], "-", "s2"}], 
              RowBox[{"s2", 
               RowBox[{"(", 
                RowBox[{"s2", "-", "1"}], ")"}]}]], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"s2", "-", "1"}], ",", 
               RowBox[{"s2", "-", "1"}]}], "}"}]}], "]"}], "+", " ", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"s2", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Rbar1", "=", 
          RowBox[{"PadRight", "[", 
           RowBox[{"Rbar1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"s1", "-", "1"}], ",", "s1"}], "}"}], ",", " ", 
            RowBox[{"-", 
             FractionBox[
              SqrtBox["s1"], "s1"]}]}], "]"}]}], ";", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Add", " ", "a", " ", "column", " ", "of", " ", "elements", " ", 
            "equal", " ", "to"}], " ", "-", 
           FractionBox[
            SqrtBox["s1"], "s1"]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Rbar2", "=", 
          RowBox[{"PadRight", "[", 
           RowBox[{"Rbar2", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"s2", "-", "1"}], ",", "s2"}], "}"}], ",", " ", 
            RowBox[{"-", 
             FractionBox[
              SqrtBox["s2"], "s2"]}]}], "]"}]}], ";", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Add", " ", "a", " ", "column", " ", "of", " ", "elements", " ", 
            "equal", " ", "to"}], " ", "-", 
           FractionBox[
            SqrtBox["s2"], "s2"]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Rbar", "=", 
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Rbar1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "Rbar2"}], "}"}]}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "9"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Rbar = \>\"", ",", 
             RowBox[{"Rbar", "//", "MatrixForm"}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"reducedJacobian", "=", 
          RowBox[{"Rbar", ".", 
           RowBox[{"JacobianOfMeanDynamics", "[", 
            RowBox[{"EM", ",", "verbosity"}], "]"}], ".", 
           RowBox[{"Rbar", "\[Transpose]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "8"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Reduced Jacobian:\\nRJ = \>\"", ",", 
             RowBox[{"reducedJacobian", "//", "MatrixForm"}]}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"timeComputingEigensystem", "=", 
          RowBox[{"First", "[", 
           RowBox[{"Timing", "[", 
            RowBox[{"eigensystem", "=", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{"reducedJacobian", "/.", "closeRational"}], "]"}]}], 
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "7"}], ",", 
           RowBox[{"Print", " ", "[", 
            RowBox[{
            "\"\<Time computing the eigensystem at the rational point: \>\"", 
             ",", "timeComputingEigensystem"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"eigenvalues", "=", 
          RowBox[{"First", "[", "eigensystem", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"eigenvectors", "=", 
          RowBox[{"Last", "[", "eigensystem", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "6"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Eigenvalues at close rational point:\\n\>\"", ",", 
             "eigenvalues"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Numerical approximation to eigenvalues at close rational \
point:\\n\>\"", ",", 
             RowBox[{"N", "[", 
              RowBox[{"eigenvalues", ",", "4"}], "]"}]}], "]"}]}], "]"}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "6"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Eigenvectors at close rational point (in rows):\\n\>\"", ",", 
             RowBox[{"MatrixForm", "@", "eigenvectors"}]}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "5"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Numerical approximation to eigenvectors at close rational \
point (in rows):\\n\>\"", ",", 
             RowBox[{"MatrixForm", "[", 
              RowBox[{"N", "[", 
               RowBox[{"eigenvectors", ",", "4"}], "]"}], "]"}]}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "eigenvectors", "]"}], "\[NotEqual]", 
            "n"}], ",", 
           RowBox[{"Print", "[", "\"\<\!\(\*StyleBox[\"WARNING\",
FontVariations->{\"Underline\"->True}]\)\!\(\*StyleBox[\"!\",
FontVariations->{\"Underline\"->True}]\) Number of eigenvectors \[NotEqual] \
Number of dimensions\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "4"}], ",", 
           RowBox[{
           "Print", "[", 
            "\"\<Working with normalized approximations to the exact \
eigenvectors at the rational point, and tracing accuracy...\>\"", "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"$MaxExtraPrecision", "=", "100"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Neigenvectors", "=", 
             RowBox[{"Map", "[", 
              RowBox[{"Normalize", ",", 
               RowBox[{"N", "[", 
                RowBox[{"eigenvectors", ",", " ", "40"}], "]"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"aux1", " ", "=", " ", 
             RowBox[{
              FractionBox["2", 
               RowBox[{"Abs", "[", 
                RowBox[{"Det", "[", "Neigenvectors", "]"}], "]"}]], 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"Total", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Abs", "[", "Neigenvectors", "]"}], ")"}], "^", 
                    "2"}], ",", "2"}], "]"}], "n"], ")"}], 
               FractionBox["n", "2"]]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"bound", " ", "=", " ", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"D", "[", 
                    RowBox[{"EM", ",", 
                    RowBox[{"{", "allvars", "}"}]}], "]"}], ")"}], ",", 
                   RowBox[{"{", "allvars", "}"}]}], "]"}], ",", 
                 RowBox[{"{", "3", "}"}]}], "]"}], "/.", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "i", "]"}], "\[Rule]", "1"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"y", "[", "i", "]"}], "\[Rule]", "1"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"aux2", " ", "=", " ", 
             RowBox[{"4", "*", "bound", " ", "*", " ", 
              RowBox[{"Total", "[", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"N", "[", 
                  RowBox[{
                   RowBox[{"allvars", "/.", "closeRational"}], ",", "40"}], 
                  "]"}], "-", 
                 RowBox[{"N", "[", 
                  RowBox[{
                   RowBox[{"allvars", "/.", "interiorRestPoint"}], ",", 
                   "40"}], "]"}]}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"tolerance", "=", 
             RowBox[{"n", " ", "aux1", "*", "aux2"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "9"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<\!\(\*FractionBox[\(\(2\)\(\\\ \)\), \
\(\(|\)\(Det[Q]\)\(|\)\)]\)(\!\(\*FractionBox[\(\*UnderscriptBox[\(\[Sum]\), \
\(i, j\)]\(\(|\)\*SubscriptBox[\(Q\), \(ij\)]\*SuperscriptBox[\(|\), \(2\)]\)\
\), \(d\)]\)\!\(\*SuperscriptBox[\()\), FractionBox[\(d\), \(2\)]]\) =  \>\"",
                  ",", " ", "aux1", ",", " ", "\"\<;  Accuracy : \>\"", ",", 
                 " ", 
                 RowBox[{"Accuracy", "[", "aux1", "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(Max\), \(i, j\)]\) \
\!\(\*UnderscriptBox[\(\[Sum]\), \
\(k\)]\)\!\(\*FractionBox[\(\*SuperscriptBox[\(\[PartialD]\), \
\(2\)]\*SubscriptBox[\(V\), \(i\)]\), \(\[PartialD]\*SubscriptBox[\(\[Xi]\), \
\(j\)] \[PartialD]\*SubscriptBox[\(\[Xi]\), \(k\)]\)]\) at \[Xi]=(1,...,1) = \
\>\"", ",", "bound"}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<4 \!\(\*SubscriptBox[\(Max\), \(i, j\)]\) \
\!\(\*UnderscriptBox[\(\[Sum]\), \
\(k\)]\)\!\(\*FractionBox[\(\*SuperscriptBox[\(\[PartialD]\), \
\(2\)]\*SubscriptBox[\(V\), \(i\)]\), \(\[PartialD]\*SubscriptBox[\(\[Xi]\), \
\(j\)] \[PartialD]\*SubscriptBox[\(\[Xi]\), \(k\)]\)]\)\!\(\*SubscriptBox[\(|\
\), \((1,  ... , 1)\)]\) \!\(\*UnderscriptBox[\(\[Sum]\), \(k\)]\) \
|N[\!\(\*SubscriptBox[\(\[Xi]\), \(k\)]\),40] - N[\!\(\*SubsuperscriptBox[\(\
\[Xi]\), \(k\), \(*\)]\),40]| = \>\"", ",", "aux2", ",", " ", 
                 "\"\<;  Accuracy = \>\"", ",", " ", 
                 RowBox[{"Accuracy", "[", "aux2", "]"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Tolerance computed with perturbation theorem: \>\"", ",", 
             "tolerance"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "4"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Precision of tolerance: \>\"", ",", 
              RowBox[{"Precision", "[", "tolerance", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Accuracy of tolerance: \>\"", ",", 
              RowBox[{"Accuracy", "[", "tolerance", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Real Digits of tolerance: \>\"", ",", 
              RowBox[{"RealDigits", "[", "tolerance", "]"}]}], "]"}], ";"}]}],
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"boundsEigenvalues", " ", "=", " ", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Re", "[", "eigenvalues", "]"}], " ", ",", "6"}], "]"}], 
           "+", " ", "tolerance", "+", 
           RowBox[{"10", "^", 
            RowBox[{"-", 
             RowBox[{"Accuracy", "[", "tolerance", "]"}]}]}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<The real part of the relevant eigenvalues at the interior \
rest point is no more than:\\n\>\"", ",", "boundsEigenvalues"}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"And", "@@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "<", "#2"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"boundsEigenvalues", ",", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"0", ",", "n"}], "]"}]}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
              RowBox[{
              "Print", "[", 
               "\"\<All the relevant eigenvalues have strictly negative real \
part. Thus, we can conclude that the interior rest point is (locally) \
asymptotically stable\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "True", "]"}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
              RowBox[{
              "Print", "[", 
               "\"\<Some eigenvalue may have a positive real part. Thus, the \
local stability analysis is inconclusive\>\"", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "False", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<There is no interior rest point\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "False", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[180]:=",ExpressionUUID->"71f3c586-8ec3-49fe-903a-a7d8435bb841"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Global stability of interior rest point (exact Lyapunov function)\
\>", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"dea0ee0c-8cd9-417f-90b2-211bde3765f7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GlobalStabilityOfInteriorRestPoint", "::", "usage"}], "=", 
    "\"\<GlobalStabilityOfInteriorRestPoint[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1, \
\!\(\*StyleBox[\"prec\",FontSlant->\"Italic\"]\):precision ] analyzes the \
global stability of the interior rest point of the BEP dynamics for a \
Centipede game of length \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1). To conduct this analysis, the function uses \
the Euclidean distance to the exact interior rest point (or a reduced version \
of this distance, depending on the \!\(\*StyleBox[\"testSetRule\",FontSlant->\
\"Italic\"]\) and \!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) \
used) as a tentative Lyapunov function. The computation of the exact interior \
rest point is performed by obtaining a Gr\[ODoubleDot]bner basis.\n\nThe \
function returns \!\(\*StyleBox[\"True\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\) if and only if the conducted \
analysis concludes that the interior rest point attracts all solutions (other \
than the backward induction solution, which is stationary). Otherwise it \
returns \!\(\*StyleBox[\"False\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\).\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\n- \
\!\(\*StyleBox[\"prec\",FontSlant->\"Italic\"]\) is an optional parameter, \
which determines the way some numbers are displayed (i.e. it has no effect on \
any important computation). It is an integer that controls the number of \
digits displayed in the messages that show numerical approximations to exact \
values. The default value is \!\(\*StyleBox[\"precision\",FontSlant->\"Italic\
\"]\), which is a global parameter set at the top of this notebook, in the \
cell \\\"General options\\\".\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GlobalStabilityOfInteriorRestPoint", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"prec_:", "precision"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "interiorRestPointRules", ",", "interiorRestPoint", ",", 
       "reducedInteriorRestPoint", ",", "otherPointsWhereDerivativeEquals0", 
       ",", "xVector", ",", "yVector", ",", "i"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xVector", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"yVector", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"y", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interiorRestPointRules", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"ExactRestPoints", "[", 
          RowBox[{
          "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", "False", 
           ",", "False", ",", "verbosity", ",", "prec"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", "1", "]"}], "/.", "#"}], ")"}], "\[NotEqual]",
             "1"}], ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "interiorRestPointRules", "]"}], ">", "0"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"interiorRestPointRules", "=", 
          RowBox[{"First", "[", "interiorRestPointRules", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Numerical approximation to interior exact solution: \\n\>\"",
              ",", " ", 
             RowBox[{"(", 
              RowBox[{"interiorRestPointRules", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], "\[Rule]", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                 ",", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i_Integer", "]"}], "\[Rule]", "num_"}],
                     ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i", "]"}], "\[Rule]", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}], 
                 ",", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"z", "\[Rule]", "num_"}], ")"}], ":>", 
                   RowBox[{"(", 
                    RowBox[{"z", "\[Rule]", 
                    RowBox[{"N", "[", 
                    RowBox[{"num", ",", "prec"}], "]"}]}], ")"}]}], ")"}]}], 
                "}"}]}], ")"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"testSetRule", "\[Equal]", "\"\<two\>\""}], "&&", 
            RowBox[{"tieBreakingRule", "\[Equal]", "\"\<min\>\""}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Distance", " ", "to", " ", "interior", " ", "rest", " ", 
             "point"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"interiorRestPoint", "=", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"xVector", ",", "yVector"}], "]"}], "/.", 
              "interiorRestPointRules"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<Lyapunov function: euclidean distance to interior rest \
point, i.e. distance to:\\n\>\"", ",", " ", "interiorRestPointRules"}], "]"}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{"\"\<\\twith numerical approximation:\\n\\t\>\"", ",", 
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"xVector", ",", "yVector"}], "]"}], "\[Rule]", 
                   RowBox[{"N", "@", "interiorRestPoint"}]}], "]"}]}], "]"}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{
               "Print", "[", 
                "\"\<Checking whether the derivative of the Lyapunov function \
is always different from zero (except at the rest points)...\>\"", "]"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"otherPointsWhereDerivativeEquals0", "=", 
             RowBox[{"CylindricalDecomposition", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"MeanDynamics", "[", 
                    RowBox[{
                    "testSetRule", ",", "tieBreakingRule", ",", "n", ",", 
                    "False", ",", "False", ",", "0"}], "]"}], ".", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"xVector", ",", "yVector"}], "]"}], "-", 
                    "interiorRestPoint"}], ")"}]}], "\[Equal]", "0"}], "}"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"x", "[", "i", "]"}], "\[LessEqual]", "1"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"y", "[", "i", "]"}], "\[LessEqual]", "1"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Total", "[", "xVector", "]"}], "\[Equal]", "1"}],
                    ",", 
                   RowBox[{
                    RowBox[{"Total", "[", "yVector", "]"}], "\[Equal]", 
                    "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"xVector", ",", "yVector"}], "]"}], "\[NotEqual]",
                    "interiorRestPoint"}], "}"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"xVector", ",", "yVector"}], "]"}], "\[NotEqual]", 
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"s1", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"s2", "-", "1"}]}], "]"}]}], "]"}]}], "}"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Join", "[", 
                RowBox[{"xVector", ",", "yVector"}], "]"}]}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Reduced", " ", "Distance", " ", "to", " ", "interior", " ", 
             "rest", " ", "point"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reducedInteriorRestPoint", "=", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], "/.", 
              "interiorRestPointRules"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<Lyapunov function: euclidean distance to interior rest \
point ignoring x[1] and y[1], i.e. distance to:\\n\>\"", ",", " ", 
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                    RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], "\[Rule]",
                    "reducedInteriorRestPoint"}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{"\"\<\\twith numerical approximation:\\n\\t\>\"", ",", 
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                    RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], "\[Rule]", 
                   RowBox[{"N", "@", "reducedInteriorRestPoint"}]}], "]"}]}], 
                "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{
               "Print", "[", 
                "\"\<Checking whether the derivative of the Lyapunov function \
is always different from zero (except at the rest points)...\>\"", "]"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"otherPointsWhereDerivativeEquals0", "=", 
             RowBox[{"CylindricalDecomposition", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"MeanDynamicsWithoutFirstVariables", "[", 
                    RowBox[{
                    "testSetRule", ",", "tieBreakingRule", ",", "n", ",", 
                    "False", ",", "0"}], "]"}], ".", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                    RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], "-", 
                    "reducedInteriorRestPoint"}], ")"}]}], "\[Equal]", "0"}], 
                  "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"x", "[", "i", "]"}], "\[LessEqual]", "1"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", "s1"}], "}"}]}], "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"y", "[", "i", "]"}], "\[LessEqual]", "1"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", "s2"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", "s1"}], "}"}]}], "]"}], 
                    "\[LessEqual]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{"y", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", "s2"}], "}"}]}], "]"}], 
                    "\[LessEqual]", "1"}]}], "}"}], ","}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                    RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], 
                   "\[NotEqual]", "reducedInteriorRestPoint"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                    RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}], 
                   "\[NotEqual]", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", "n"}], "]"}]}], "}"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Rest", "[", "xVector", "]"}], ",", 
                 RowBox[{"Rest", "[", "yVector", "]"}]}], "]"}]}], "]"}]}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"otherPointsWhereDerivativeEquals0", "===", "False"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
              RowBox[{
              "Print", "[", 
               "\"\<The derivative of the Lyapunov function is always \
different from zero (except at the rest points)\>\"", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
            "Print", "[", 
             "\"\<The interior point is almost globally asymptotically stable\
\>\"", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "True", "]"}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<There are other points where the derivative of the \
Lyapunov function equals 0:\\n\>\"", ",", 
                 "otherPointsWhereDerivativeEquals0"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{"\"\<\\twith numerical approximation:\\n\\t\>\"", ",", 
                 RowBox[{"N", "@", "otherPointsWhereDerivativeEquals0"}]}], 
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
            "Print", "[", "\"\<Global stability analysis is inconclusive\>\"",
              "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "False", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<There is no interior rest point\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "False", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[182]:=",ExpressionUUID->"2b651595-f338-40b9-a1d5-41518a1d1265"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Initial conditions (RandomPoints, MeshPoints and BarycentersPoint)\
\>", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"3c94bdab-101e-4ea8-954f-837729b157b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RandomPoints", "::", "usage"}], "=", 
   "\"\<RandomPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nPoints\",FontSlant->\"Italic\"]\)] returns a list of \
\!\(\*StyleBox[\"nPoints\",FontSlant->\"Italic\"]\) random points for a \
Centipede game of length d\>\""}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RandomPoints", "[", 
     RowBox[{"n_", ",", "nPoints_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Join", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "/", 
              RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RandomReal", "[", 
               RowBox[{"1", ",", "s1"}], "]"}], ",", "nPoints"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "/", 
              RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RandomReal", "[", 
               RowBox[{"1", ",", "s2"}], "]"}], ",", "nPoints"}], "]"}]}], 
           "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SimplexMesh", "::", "usage"}], "=", 
   "\"\<SimplexMesh[\!\(\*StyleBox[\"nStrategies\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nAgents\",FontSlant->\"Italic\"]\)] returns a list of all \
the possible strategy distributions in a population of \
\!\(\*StyleBox[\"nAgents\",FontSlant->\"Italic\"]\) agents who can choose one \
of \!\(\*StyleBox[\"nStrategies\",FontSlant->\"Italic\"]\) possible \
strategies. The number of possible distributions is \
Binomial[\!\(\*StyleBox[\"nAgents\",FontSlant->\"Italic\"]\)+\!\(\*StyleBox[\"\
nStrategies\",FontSlant->\"Italic\"]\)-1, \
\!\(\*StyleBox[\"nAgents\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"]\",\
FontSlant->\"Italic\"]\)\>\""}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SimplexMesh", "[", 
     RowBox[{"nStrategies_", ",", "nAgents_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Permutations", "/@", 
        RowBox[{"IntegerPartitions", "[", 
         RowBox[{"nAgents", ",", 
          RowBox[{"{", "nStrategies", "}"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "nAgents"}], "]"}]}], "]"}]}], ",", "1"}], "]"}],
      "/", 
     RowBox[{"N", "@", "nAgents"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MeshPoints", "::", "usage"}], "=", 
   "\"\<MeshPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nAgentsPerPopulation\",FontSlant->\"Italic\"]\)] returns a \
list of all the possible states in a Centipede game of length \!\(\*StyleBox[\
\"d\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)with \
\!\(\*StyleBox[\"nAgentsPerPopulation\",FontSlant->\"Italic\"]\) agents in \
each population. The number of possible distributions is \
Binomial[\!\(\*StyleBox[\"nAgents\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)+ \
\!\(\*StyleBox[\"IntegerPart\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"[\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"(\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\"d\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"+\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\"3\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\")\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"/\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\"2\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"]\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)- 1, \
\!\(\*StyleBox[\"nAgents\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"]\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"*\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)Binomial[\!\(\*StyleBox[\"nAgents\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)+ \
\!\(\*StyleBox[\"IntegerPart\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"[\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"(\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\"d\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"+\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\"2\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\")\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"/\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\"2\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"]\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)- 1, \
\!\(\*StyleBox[\"nAgents\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"]\",\
FontSlant->\"Italic\"]\)\>\""}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeshPoints", "[", 
     RowBox[{"n_", ",", "nAgentsPerPopulation_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Join", ",", 
          RowBox[{"SimplexMesh", "[", 
           RowBox[{"s1", ",", "nAgentsPerPopulation"}], "]"}], ",", 
          RowBox[{"SimplexMesh", "[", 
           RowBox[{"s2", ",", "nAgentsPerPopulation"}], "]"}], ",", "1"}], 
         "]"}], ",", "1"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BarycentersPoint", "::", "usage"}], "=", 
   "\"\<BarycentersPoint[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\)] \
returns the point where every strategy is equally represented (i.e. the \
barycenter of the simplex) in each population for a Centipede game of length \
d\>\""}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BarycentersPoint", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"1", "/", "s1"}], ",", "s1"}], "]"}], ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"1", "/", "s2"}], ",", "s2"}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[184]:=",ExpressionUUID->"a4367b14-d13a-4ff4-9e7d-07e41b41b398"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Numerical global stability of interior rest point (numerical evaluation of an \
approximate Lyapunov function)\
\>", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"5fff5317-0f27-4699-8ff3-5bd42c3fe345"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "NumericalGlobalStabilityOfInteriorRestPointLyapunov", "::", "usage"}], 
    "=", "\"\<NumericalGlobalStabilityOfInteriorRestPointLyapunov[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"points\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1, \
\!\(\*StyleBox[\"samplesPerPack\",FontSlant->\"Italic\"]\):10^5 ] analyses \
the global stability of the BEP dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1). This function uses the Euclidean distance to \
the interior rest point computed using \
\!\(\*StyleBox[\"FloatingPointApproximateRestPoint\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)as a tentative Lyapunov \
function. Specifically, the function numerically evaluates the derivative of \
the tentative Lyapunov function at each of the points provided by the user \
(as fourth parameter, called \!\(\*StyleBox[\"points\",FontSlant->\"Italic\"]\
\) above), using (IEEE 754) floating-point arithmetic.\n\nYou can create the \
list of points required as fourth parameter by using the functions \
RandomPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nPoints\",FontSlant->\"Italic\"]\)] and \
MeshPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nAgentsPerPopulation\",FontSlant->\"Italic\"]\)]. Thus, for \
example, to run the function on \!\(\*SuperscriptBox[\(10\), \(6\)]\) random \
points, you can evaluate:\n\n\
\\tNumericalGlobalStabilityOfInteriorRestPointLyapunov[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
RandomPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\),\!\(\*\
SuperscriptBox[\(10\), \(6\)]\)] ]\n\n\\tAnd to run the function on a grid \
with mesh 1/4, you can evaluate:\n\n\
\\tNumericalGlobalStabilityOfInteriorRestPointLyapunov[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
MeshPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\),4] ]\n\nThe function \
returns the list of points with a non-negative evaluation of the derivative \
of the tentative Lyapunov function. Thus, if the function returns an empty \
list, it means that the derivative of the tentative Lyapunov function was \
strictly negative in all evaluated points. \n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"points\",FontSlant->\"Italic\"]\) is the list of points at \
which the derivative of the tentative Lyapunov function will be evaluated. \
Each point must be a list containing \!\(\*StyleBox[\"d\",FontSlant->\"Italic\
\"]\) + 2 numbers. You can use the functions \
RandomPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nPoints\",FontSlant->\"Italic\"]\)] and \
MeshPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nAgentsPerPopulation\",FontSlant->\"Italic\"]\)] to create \
this list.\n- \!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an \
optional parameter. It is an integer that controls the number of messages \
that are shown by the function. The higher the value of verbosity, the more \
messages are printed along the execution of any function. 0 prints no \
messages. 10 prints all implemented messages.\n- \
\!\(\*StyleBox[\"samplesPerPack\",FontSlant->\"Italic\"]\) is an optional \
parameter. For efficiency reasons, the list of points provided by the user is \
partitioned into several packs, each containing \
\!\(\*StyleBox[\"samplesPerPack\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\) points. Each of these packs is sent to one kernel \
(up to the number of cores in the computer) and computed in parallel.\>\""}], 
   " ", ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumericalGlobalStabilityOfInteriorRestPointLyapunov", "::", 
     StyleBox["invalidValueOf_points",
      FontSlant->"Italic"]}], "=", 
    "\"\<the parameter \!\(\*StyleBox[\"points\",FontSlant->\"Italic\"]\) in \
NumericalGlobalStabilityOfInteriorRestPointLyapunov[testSetRule, \
tieBreakingRule, \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"points\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)] must be a list of points. Each \
point should be a list containing \
(\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) + 2) numbers. `1` is not a \
valid list of points.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NumericalGlobalStabilityOfInteriorRestPointLyapunov", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     StyleBox["points_",
      FontSlant->"Italic"], ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"samplesPerPack_:", 
      RowBox[{"10", "^", "5"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "interiorFPRestPoint", ",", "vars", ",", "packs", ",", "CompiledVdot", 
       ",", "valuesOfVdot", ",", "pos", ",", 
       RowBox[{"nonNegativeValuePoints", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"p", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"First", ",", " ", 
       RowBox[{
       "check", " ", "that", " ", "the", " ", "list", " ", "of", " ", 
        "points", " ", "is", " ", "fine"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], "\[NotEqual]", 
              RowBox[{"n", "+", "2"}]}], ")"}], "&"}], ",", 
           StyleBox["points",
            FontSlant->"Italic"]}], "]"}]}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{
            "NumericalGlobalStabilityOfInteriorRestPointLyapunov", "::", 
             "invalidValueOf_points"}], ",", 
            StyleBox["points",
             FontSlant->"Italic"]}], "]"}], ";", 
          RowBox[{
          "Print", "[", "\"\<Error reading the list of points\>\"", "]"}], 
          ";", 
          RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interiorFPRestPoint", "=", 
       RowBox[{"vars", "/.", 
        RowBox[{"FloatingPointApproximateRestPoint", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Numerical (floating-point) approximation to interior exact \
solution: \\n\>\"", ",", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{"vars", "\[Rule]", "interiorFPRestPoint"}], "]"}]}], 
         "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"packs", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         StyleBox["points",
          FontSlant->"Italic"], ",", 
         RowBox[{"UpTo", "[", "samplesPerPack", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Distance", " ", "to", " ", "interior", " ", "rest", " ", "point"}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Lyapunov function: Euclidean distance to (floating-point \
approximation to) the interior rest point.\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<We now evaluate the derivative of the Lyapunov function at \
\>\"", ",", " ", 
           RowBox[{"Length", "[", 
            StyleBox["points",
             FontSlant->"Italic"], "]"}], ",", " ", 
           "\"\< points using (IEEE 754) floating-point arithmetic, in packs \
of up to \>\"", ",", "samplesPerPack", ",", "\"\< points.\>\""}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"CompiledVdot", "=", 
       RowBox[{"Compile", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Evaluate", "[", "vars", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"MeanDynamics", "[", 
            RowBox[{
            "testSetRule", ",", "tieBreakingRule", " ", ",", "n", ",", 
             "False", ",", "False", ",", "0"}], "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"vars", "-", "interiorFPRestPoint"}], ")"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"pack", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"valuesOfVdot", "=", 
            RowBox[{"ParallelMap", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CompiledVdot", "@@", "#"}], ")"}], "&"}], ",", 
              "pack"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Pack \>\"", ",", " ", "p", ",", 
                "\"\<; Size of pack: \>\"", ",", " ", 
                RowBox[{"Length", "@", "pack"}]}], "]"}], ";", 
              RowBox[{"p", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\tFirst \>\"", ",", 
                RowBox[{"Min", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"Length", "[", "pack", "]"}]}], "]"}], ",", 
                "\"\< points in pack:\\t\>\"", ",", " ", 
                RowBox[{"MatrixForm", "[", 
                 RowBox[{"pack", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Length", "[", "pack", "]"}]}], "]"}]}], "]"}], 
                  "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\t... and their values of Vdot:\\t\>\"", ",", 
                RowBox[{"MatrixForm", "[", 
                 RowBox[{"valuesOfVdot", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Length", "[", "pack", "]"}]}], "]"}]}], "]"}], 
                  "]"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"pos", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"valuesOfVdot", ",", 
              RowBox[{"_", "?", "NonNegative"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pos", "\[NotEqual]", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                 "Print", "[", 
                  "\"\<\\tNonnegative values of vdot found at: \>\"", "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<\\t\\tPoints: \>\"", ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"vars", "\[Rule]", "#"}], "]"}], "&"}], ",", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"pack", ",", "pos"}], "]"}]}], "]"}]}], "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<\\t\\tValues: \>\"", ",", 
                   RowBox[{"Extract", "[", 
                    RowBox[{"valuesOfVdot", ",", "pos"}], "]"}]}], "]"}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"nonNegativeValuePoints", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"nonNegativeValuePoints", ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"vars", "\[Rule]", "#"}], "]"}], "&"}], ",", 
                   RowBox[{"Extract", "[", 
                    RowBox[{"pack", ",", "pos"}], "]"}]}], "]"}]}], "]"}]}], 
              ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
                RowBox[{
                "Print", "[", 
                 "\"\<\\tAll values in the pack are negative\>\"", "]"}]}], 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"pos", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"valuesOfVdot", ",", 
              RowBox[{"x_", "/;", 
               RowBox[{"x", ">", 
                RowBox[{"-", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "15"}]}]}]}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pos", "\[NotEqual]", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"verbosity", "\[GreaterEqual]", "3"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                 "Print", "[", 
                  "\"\<\\n\\tValues of vdot greater than \
-\!\(\*SuperscriptBox[\(10\), \(-15\)]\) found at: \>\"", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<\\t\\tPoints: \>\"", ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"vars", "\[Rule]", "#"}], "]"}], "&"}], ",", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"pack", ",", "pos"}], "]"}]}], "]"}]}], "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<\\t\\tValues: \>\"", ",", 
                   RowBox[{"Extract", "[", 
                    RowBox[{"valuesOfVdot", ",", "pos"}], "]"}]}], "]"}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"verbosity", "\[GreaterEqual]", "3"}], ",", 
                RowBox[{
                "Print", "[", 
                 "\"\<\\n\\tAll values are below \
-\!\(\*SuperscriptBox[\(10\), \(-15\)]\)\\n\>\"", "]"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ",", "packs"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "nonNegativeValuePoints", "]"}], ">", 
            "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<Below you can see the points we have found where the \
derivative of the Lyapunov function is non-negative. If you can see other \
points besides the \\\"stop-immediately\\\" rest point, that means that the \
chosen function is not a Lyapunov function. Alternatively, if there are no \
points below, or if the only point below is the \\\"stop-immediately\\\" rest \
point, then this means that we have not found numerical evidence that \
contradicts the hypothesis that the interior point is almost globally \
asymptotically stable. In other words, this computation would suggest that \
the interior rest point might be almost globally asymptotically stable.\>\"", 
             "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<The derivative of the Lyapunov function is negative in all \
evaluated points.\\nWe have evaluated \>\"", ",", 
              RowBox[{"Length", "[", 
               StyleBox["points",
                FontSlant->"Italic"], "]"}], ",", 
              "\"\< points and we have not found numerical evidence that \
contradicts the hypothesis that the interior point is almost globally \
asymptotically stable. In other words, this computation suggests that the \
interior rest point might be almost globally asymptotically stable\>\""}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "nonNegativeValuePoints"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[192]:=",ExpressionUUID->"b2c2fb22-6e42-4220-8464-04d0f0df3c52"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical global stability of interior rest point (NDSolve)", \
"Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"51dfba0a-20f4-4ad9-8192-c5e8f39094c2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "NumericalGlobalStabilityOfInteriorRestPointNDSolve", "::", "usage"}], 
    "=", "\"\<NumericalGlobalStabilityOfInteriorRestPointNDSolve[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \!\(\*StyleBox[\"initialPoints\
\",FontSlant->\"Italic\"]\), \!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\
\"]\):1 , \
\!\(\*StyleBox[\"samplesPerPack\",FontSlant->\"Italic\"]\):10^3,\!\(\*\
StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"maxTime\",FontSlant->\
\"Italic\"]\):200, \
\!\(\*StyleBox[\"tolerance\",FontSlant->\"Italic\"]\):10.^-4, \!\(\*StyleBox[\
\"accuracyGoal\",FontSlant->\"Italic\"]\):6 ] analyses the global stability \
of the BEP dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1). This function numerically integrates the \
mean dynamics (using NDSolve) starting at each of the initial points provided \
by the user (as fourth parameter, called \
\!\(\*StyleBox[\"initialPoints\",FontSlant->\"Italic\"]\) above), and checks \
whether the final point of the computed trajectory is close to the interior \
fixed point (computed using \
\!\(\*StyleBox[\"FloatingPointApproximateRestPoint\",FontSlant->\"Italic\"]\))\
.\n\nYou can create the list of initial points required as fourth parameter \
by using the functions \
RandomPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nPoints\",FontSlant->\"Italic\"]\)] and \
MeshPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nAgentsPerPopulation\",FontSlant->\"Italic\"]\)]. Thus, for \
example, to run the function on \!\(\*SuperscriptBox[\(10\), \(6\)]\) random \
initial points, you can evaluate:\n\n\
\\tNumericalGlobalStabilityOfInteriorRestPointNDSolve[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
RandomPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\),\!\(\*\
SuperscriptBox[\(10\), \(6\)]\)] ]\n\n\\tAnd to run the function on a grid \
with mesh 1/4, you can evaluate:\n\n\
\\tNumericalGlobalStabilityOfInteriorRestPointNDSolve[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
MeshPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\),4] ]\n\nThe function \
returns the list of initial points that did not lead to the vicinity of the \
interior rest point computed using \
\!\(\*StyleBox[\"FloatingPointApproximateRestPoint\",FontSlant->\"Italic\"]\).\
 Thus, if the function returns an empty list, it means that all computed \
trajectories (as many as initial points provided by the user) ended close to \
the interior rest point computed using \
\!\(\*StyleBox[\"FloatingPointApproximateRestPoint\",FontSlant->\"Italic\"]\).\
\n\n\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"initialPoints\",FontSlant->\"Italic\"]\) is the list of \
initial points. Each initial point must be a list containing \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) + 2 numbers. You can use the \
functions RandomPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nPoints\",FontSlant->\"Italic\"]\)] and \
MeshPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"nAgentsPerPopulation\",FontSlant->\"Italic\"]\)] to create \
this list.\n- \!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an \
optional parameter. It is an integer that controls the number of messages \
that are shown by the function. The higher the value of verbosity, the more \
messages are printed along the execution of any function. 0 prints no \
messages. 10 prints all implemented messages.\n- \
\!\(\*StyleBox[\"samplesPerPack\",FontSlant->\"Italic\"]\) is an optional \
parameter. For efficiency reasons, the list of initial points provided by the \
user is partitioned into several packs, each containing \
\!\(\*StyleBox[\"samplesPerPack\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)initial points. Each of these packs is sent to one \
kernel (up to the number of cores in the computer) and computed in parallel. \
\n- \!\(\*StyleBox[\"maxTime\",FontSlant->\"Italic\"]\) is an optional \
parameter. It indicates the maximum final time used when integrating the mean \
dynamics using NDSolve.\n- \
\!\(\*StyleBox[\"tolerance\",FontSlant->\"Italic\"]\) is an optional \
parameter. The integration of the mean dynamics will stop if the norm of the \
difference between the last point in the computed trajectory and the interior \
rest point computed using \
\!\(\*StyleBox[\"FloatingPointApproximateRestPoint\",FontSlant->\"Italic\"]\) \
is less than the \!\(\*StyleBox[\"tolerance\",FontSlant->\"Italic\"]\).\n- \!\
\(\*StyleBox[\"accuracyGoal\",FontSlant->\"Italic\"]\) is an optional \
parameter, which indicates the AccuracyGoal used in NDSolve.\>\""}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumericalGlobalStabilityOfInteriorRestPointNDSolve", "::", 
     StyleBox[
      RowBox[{"invalidValueOf_", 
       StyleBox["initialPoints",
        FontSlant->"Italic"]}]]}], "=", 
    "\"\<the parameter \
\!\(\*StyleBox[\"initialPoints\",FontSlant->\"Italic\"]\) in \
NumericalGlobalStabilityOfInteriorRestPointNDSolve[testSetRule, \
tieBreakingRule, \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"initialPoints\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)] must be a list of initial points. \
Each initial point should be a list containing \
(\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) + 2) numbers. `1` is not a \
valid list of initial points.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NumericalGlobalStabilityOfInteriorRestPointNDSolve", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     StyleBox["initialPoints_",
      FontSlant->"Italic"], ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"samplesPerPack_:", 
      RowBox[{"10", "^", "3"}]}], ",", 
     RowBox[{"time_:", "300"}], ",", 
     RowBox[{"tolerance_:", 
      RowBox[{"10.", "^", 
       RowBox[{"-", "4"}]}]}], ",", 
     RowBox[{"accuracyGoal_:", "6"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "interiorFPRestPoint", ",", "vars", ",", "rulesToAddt", ",", 
       "varsWitht", ",", "packs", ",", "Dvars", ",", "projectedEM", ",", 
       RowBox[{"p", "=", "1"}], ",", "FinalPoint", ",", "finalPoints", ",", 
       RowBox[{"problematicPoints", "=", 
        RowBox[{"{", "}"}]}], ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"First", ",", " ", 
       RowBox[{
       "check", " ", "that", " ", "the", " ", "list", " ", "of", " ", 
        "initial", " ", "points", " ", "is", " ", "fine"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], "\[NotEqual]", 
              RowBox[{"n", "+", "2"}]}], ")"}], "&"}], ",", 
           StyleBox["initialPoints",
            FontSlant->"Italic"]}], "]"}]}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"NumericalGlobalStabilityOfInteriorRestPointNDSolve", "::", 
             StyleBox[
              RowBox[{"invalidValueOf_", 
               StyleBox["initialPoints",
                FontSlant->"Italic"]}]]}], ",", 
            StyleBox["initialPoints",
             FontSlant->"Italic"]}], "]"}], ";", 
          RowBox[{
          "Print", "[", "\"\<Error reading the list of initial points\>\"", 
           "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"SetSharedVariable", "[", "problematicPoints", "]"}], ";", " ", 
      
      RowBox[{"(*", 
       RowBox[{"So", " ", "we", " ", "can", " ", "use", " ", "ParallelMap"}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rulesToAddt", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "i_Integer", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"y", "[", "i_Integer", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], "[", "t", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"varsWitht", "=", 
       RowBox[{"vars", "/.", "rulesToAddt"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Dvars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], "'"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"y", "[", "i", "]"}], "'"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interiorFPRestPoint", "=", 
       RowBox[{"vars", "/.", 
        RowBox[{"FloatingPointApproximateRestPoint", "[", 
         RowBox[{"testSetRule", ",", "tieBreakingRule", " ", ",", "n"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Numerical (floating-point) approximation to interior exact \
solution: \\n\>\"", ",", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{"vars", "\[Rule]", "interiorFPRestPoint"}], "]"}]}], 
         "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"projectedEM", "=", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
              RowBox[{
               FractionBox["1", "s1"], 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}], ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
              RowBox[{
               FractionBox["1", "s2"], 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], "}"}]}], 
          "}"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MeanDynamics", "[", 
           RowBox[{
           "testSetRule", ",", "tieBreakingRule", ",", "n", ",", "False", ",",
             "False", ",", "0"}], "]"}], "/.", "rulesToAddt"}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"packs", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         StyleBox["initialPoints",
          FontSlant->"Italic"], ",", 
         RowBox[{"UpTo", "[", "samplesPerPack", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "NDSolve", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<We now solve the differential equation numerically (with \
NDSolve), starting at each of the \>\"", ",", " ", 
           RowBox[{"Length", "[", 
            StyleBox["initialPoints",
             FontSlant->"Italic"], "]"}], ",", " ", 
           "\"\< points provided, in packs of up to \>\"", ",", 
           "samplesPerPack", ",", "\"\< points.\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FinalPoint", "[", "initialPoint_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"finalTime", "=", "time"}], ",", "sol"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sol", "=", 
           RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{"Dvars", "\[Equal]", "projectedEM"}], "]"}], ",", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"varsWitht", "/.", 
                   RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "==", 
                 "initialPoint"}], "]"}], ",", 
               RowBox[{"WhenEvent", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"Norm", "[", 
                    RowBox[{"varsWitht", "-", "interiorFPRestPoint"}], "]"}], 
                   "<", "tolerance"}], "]"}], ",", " ", 
                 RowBox[{"\"\<StopIntegration\>\"", ";", 
                  RowBox[{"finalTime", "=", "t"}]}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "vars", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
             RowBox[{"AccuracyGoal", "\[Rule]", "accuracyGoal"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Another", " ", "approach", " ", "would", " ", 
            RowBox[{"be", ":", " ", "\[IndentingNewLine]", 
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"Norm", "[", "Dvars", "]"}], "<", "tolerance"}], 
                "]"}], ",", " ", 
               RowBox[{"\"\<StopIntegration\>\"", ";", 
                RowBox[{"finalTime", "=", "t"}]}]}], "]"}]}]}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"verbosity", "\[GreaterEqual]", "10"}], ",", 
            RowBox[{"Print", "[", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"Evaluate", "@", 
                RowBox[{"MapThread", "[", 
                 RowBox[{"Tooltip", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "t", "]"}], "&"}], ",", "sol"}], "]"}], 
                    ",", "vars"}], "}"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
               RowBox[{"PlotLegends", "\[Rule]", "vars"}]}], "]"}], "]"}]}], 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"finalTime", "\[GreaterEqual]", "time"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<Fixed point not reached:\\n\\t\>\"", ",", "initialPoint", 
               ",", "\"\<\\n\\t-> \>\"", ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", "finalTime", "]"}], "&"}], ",", "sol"}], 
                "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"problematicPoints", ",", 
               RowBox[{"initialPoint", "\[Rule]", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", "finalTime", "]"}], "&"}], ",", "sol"}], 
                 "]"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", "finalTime", "]"}], "&"}], ",", "sol"}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"pack", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"finalPoints", "=", 
            RowBox[{"ParallelMap", "[", 
             RowBox[{"FinalPoint", ",", "pack"}], "]"}]}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"If", " ", "you", " ", "want", " ", "graphics"}], ",", 
             " ", 
             RowBox[{
             "you", " ", "need", " ", "to", " ", "replace", " ", 
              "ParallelMap", " ", "with", " ", "Map"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Pack \>\"", ",", " ", "p", ",", 
                "\"\<; Size of pack: \>\"", ",", " ", 
                RowBox[{"Length", "@", "pack"}]}], "]"}], ";", 
              RowBox[{"p", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbosity", "\[GreaterEqual]", "3"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\tFirst \>\"", ",", 
                RowBox[{"Min", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"Length", "[", "pack", "]"}]}], "]"}], ",", 
                "\"\< initial points in pack:\\t\>\"", ",", " ", 
                RowBox[{"MatrixForm", "[", 
                 RowBox[{"pack", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Length", "[", "pack", "]"}]}], "]"}]}], "]"}], 
                  "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<\\t... and their corresponding final points:\\t\>\"", ",", 
                RowBox[{"MatrixForm", "[", 
                 RowBox[{"finalPoints", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{"Length", "[", "pack", "]"}]}], "]"}]}], "]"}], 
                  "]"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<\\tProblematic points so far:\\t\>\"", ",", " ", 
                RowBox[{"MatrixForm", "[", "problematicPoints", "]"}]}], 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", "packs"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "problematicPoints", "]"}], ">", "0"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<We have found initial points that did not lead to the \
proximities of the interior rest point. The following are the problematic \
initial conditions and their corresponding end points. If you can see other \
points beside the \\\"stop-immediately\\\" initial condition, you may want to \
try again starting at the problematic initial conditions, and using a greater \
value of time and/or a greater value of tolerance.\\n\>\"", ",", 
              "problematicPoints"}], "]"}], ";"}], "\[IndentingNewLine]", ",",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<All initial points evaluated led to the proximities of the \
interior rest point.\\nWe have evaluated \>\"", ",", 
              RowBox[{"Length", "[", 
               StyleBox["initialPoints",
                FontSlant->"Italic"], "]"}], ",", 
              "\"\< initial points and we have not found numerical evidence \
that contradicts the hypothesis that the interior point is almost globally \
asymptotically stable. In other words, this computation suggests that the \
interior rest point might be almost globally asymptotically stable\>\""}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "problematicPoints"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[195]:=",ExpressionUUID->"66820d2c-f57a-4fd4-b57b-7128969015a3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerically solve mean dynamics", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"6dcca70e-3035-4ac9-8adb-a747bdd929aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NDSolveMeanDynamics", "::", "usage"}], "=", 
    "\"\<NDSolveMeanDynamics[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\":\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"RandomPoint\",FontSlant->\"Italic\"]\
\), \!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 , \!\(\*StyleBox[\
\"maxTime\",FontSlant->\"Italic\"]\):300, \
\!\(\*StyleBox[\"tolerance\",FontSlant->\"Italic\"]\):10.^-4, \!\(\*StyleBox[\
\"accuracyGoal\",FontSlant->\"Italic\"]\):6 ] numerically integrates the BEP \
dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1). The numerical integration is conducted using \
NDSolve (a \!\(\*StyleBox[\"Mathematica\",FontSlant->\"Italic\"]\) function), \
starting at the initial point provided by the user (as fourth parameter, \
called \!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\) above), or at \
a random initial point if the user does not provide one.\n\nThe function \
returns a list of the form \
{\!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"solution\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"finalTime\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"finalPoint\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"outcomes\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"avgOutcome\",FontSlant->\"Italic\"\
]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
overallAvgOutcome\",FontSlant->\"Italic\"]\)}, where:\n- \
\!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\) is the initial point \
used for the integration.\n- \
\!\(\*StyleBox[\"solution\",FontSlant->\"Italic\"]\) is the solution of the \
integration (i.e. a list of interpolating functions). \n- \
\!\(\*StyleBox[\"finalTime\",FontSlant->\"Italic\"]\) is the greatest time \
for which the dynamics have been integrated. \n- \
\!\(\*StyleBox[\"finalPoint\",FontSlant->\"Italic\"]\) is the last point in \
the computed trajectory (i.e. the solution evaluated at \
\!\(\*StyleBox[\"finalTime\",FontSlant->\"Italic\"]\)).\n- \
\!\(\*StyleBox[\"outcomes\",FontSlant->\"Italic\"]\) is the time series of \
the frequency of the different outcomes, derived from the \
\!\(\*StyleBox[\"solution\",FontSlant->\"Italic\"]\). It is a list of \
interpolating functions.\n- \!\(\*StyleBox[\"avgOutcome\",FontSlant->\"Italic\
\"]\) is the time series of the average outcome, derived from the \
\!\(\*StyleBox[\"solution\",FontSlant->\"Italic\"]\). It is an interpolating \
function.\n- \!\(\*StyleBox[\"overallAvgOutcome\",FontSlant->\"Italic\"]\) is \
the average outcome across time, derived from the time series \!\(\*StyleBox[\
\"avgOutcome\",FontSlant->\"Italic\"]\). It is the integration of \
\!\(\*StyleBox[\"avgOutcome\",FontSlant->\"Italic\"]\) along its domain.\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is the initial point, provided as a list containing \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) + 2 numbers. If this parameter \
is not provided, the function takes a random initial point using \
RandomPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), 1].\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\n- \
\!\(\*StyleBox[\"maxTime\",FontSlant->\"Italic\"]\) is an optional parameter. \
It indicates the maximum final time used when integrating the mean dynamics \
using NDSolve. If the norm of the mean dynamics gets sufficiently small, then \
the integration stops (see below).\n- \
\!\(\*StyleBox[\"tolerance\",FontSlant->\"Italic\"]\) is an optional \
parameter. The integration of the mean dynamics will stop if the norm of the \
mean dynamics is less than the \
\!\(\*StyleBox[\"tolerance\",FontSlant->\"Italic\"]\).\n- \
\!\(\*StyleBox[\"accuracyGoal\",FontSlant->\"Italic\"]\) is an optional \
parameter, which indicates the AccuracyGoal used in NDSolve.\>\""}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NDSolveMeanDynamics", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{
      StyleBox["ip_:",
       FontSlant->"Italic"], 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"maxTime_:", "300"}], ",", 
     RowBox[{"tolerance_:", 
      RowBox[{"10.", "^", 
       RowBox[{"-", "4"}]}]}], ",", 
     RowBox[{"accuracyGoal_:", "6"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "vars", 
       ",", "rulesToAddt", ",", "varsWitht", ",", "Dvars", ",", "projectedEM",
        ",", "sol", ",", "finalTime", ",", "initialPoint", ",", 
       "interweavedStrategyFreq", ",", "outcomes", ",", "avgOutcome", ",", 
       "i"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         StyleBox["ip",
          FontSlant->"Italic"], "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"initialPoint", "=", 
         RowBox[{"First", "[", 
          RowBox[{"RandomPoints", "[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"initialPoint", "=", 
         StyleBox["ip",
          FontSlant->"Italic"]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "initialPoint", "]"}], "\[NotEqual]", 
         RowBox[{"s1", "+", "s2"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<The initial point must be of dimension \>\"", ",", 
           RowBox[{"s1", "+", "s2"}]}], "]"}], ";", 
         RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rulesToAddt", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "i_Integer", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"y", "[", "i_Integer", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], "[", "t", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"varsWitht", "=", 
       RowBox[{"vars", "/.", "rulesToAddt"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Dvars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], "'"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"y", "[", "i", "]"}], "'"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"projectedEM", "=", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
              RowBox[{
               FractionBox["1", "s1"], 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}], ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
              RowBox[{
               FractionBox["1", "s2"], 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], "}"}]}], 
          "}"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"MeanDynamics", "[", 
          RowBox[{
          "testSetRule", ",", "tieBreakingRule", ",", "n", ",", "False", ",", 
           "False", ",", 
           RowBox[{"verbosity", "-", "1"}]}], "]"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "NDSolve", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<We solve the differential equation numerically (with NDSolve), \
starting at the initial point: \>\"", ",", " ", "initialPoint"}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"finalTime", "=", "maxTime"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"Dvars", "\[Equal]", 
             RowBox[{"(", 
              RowBox[{"projectedEM", "/.", "rulesToAddt"}], ")"}]}], "]"}], 
           ",", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"varsWitht", "/.", 
               RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "==", "initialPoint"}],
             "]"}], ",", 
           RowBox[{"WhenEvent", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Norm", "[", "Dvars", "]"}], "<", "tolerance"}], "]"}],
              ",", " ", 
             RowBox[{"\"\<StopIntegration\>\"", ";", 
              RowBox[{"finalTime", "=", "t"}]}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "vars", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "accuracyGoal"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interweavedStrategyFreq", "=", 
       RowBox[{"Riffle", "[", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "s1"}], "]"}], "]"}], ",", 
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outcomes", "=", 
       RowBox[{"Most", "@", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"z", ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"#1", "[", "z", "]"}], "*", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"interweavedStrategyFreq", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ")"}], "[", "z", "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", 
                   RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "+", "1"}], ",", 
                   RowBox[{"Length", "[", "interweavedStrategyFreq", "]"}], 
                   ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "]"}], "&"}], ",", 
          "interweavedStrategyFreq"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"avgOutcome", "=", 
       RowBox[{"Function", "[", 
        RowBox[{"z", ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"n", "+", "1"}], "]"}], ".", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", "z", "]"}], "&"}], ",", "outcomes"}], "]"}]}],
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Tooltip", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", "t", "]"}], "&"}], ",", "sol"}], "]"}], 
                ",", "vars"}], "}"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "vars"}]}], "]"}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "@", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{"Tooltip", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "t", "]"}], "&"}], ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", "s1"}], "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"vars", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", "s1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
                RowBox[{"PlotLegends", "\[Rule]", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", 
                   RowBox[{";;", "s1"}], "]"}], "]"}]}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", "\"\<First mover\>\""}], ",", 
                
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{"Tooltip", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "t", "]"}], "&"}], ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"vars", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], "}"}]}],
                   "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
                RowBox[{"PlotLegends", "\[Rule]", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", "\"\<Second mover\>\""}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\"\<                \>\"", 
            ",", " ", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameMargins", "\[Rule]", "15"}], ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "15"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "@", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{"Tooltip", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "t", "]"}], "&"}], ",", "outcomes"}], 
                    "]"}], ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "outcomes", "]"}], "]"}]}], 
                    "}"}]}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
                RowBox[{"PlotLegends", "\[Rule]", 
                 RowBox[{"Range", "[", 
                  RowBox[{"Length", "[", "outcomes", "]"}], "]"}]}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", "\"\<Outcomes\>\""}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{"avgOutcome", "[", "t", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", "\"\<Avg. outcome\>\""}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\"\<                \>\"", 
            ",", " ", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameMargins", "\[Rule]", "15"}], ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "15"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"initialPoint", ",", "sol", ",", "finalTime", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "finalTime", "]"}], "&"}], ",", "sol"}], "]"}], 
        ",", "outcomes", ",", "avgOutcome", ",", 
        RowBox[{
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"avgOutcome", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}]}], "]"}], "/", 
         "finalTime"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[
  0.85],ExpressionUUID->"50c872db-3501-4f36-9411-4a9f8b17e216"]
}, Closed]],

Cell[CellGroupData[{

Cell["Instability of vertex rest point", "Subsection",
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"146c33ec-1a58-447f-a90c-c7e01fd5977e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InstabilityOfVertexRestPoint", "::", "usage"}], "=", 
    "\"\<InstabilityOfVertexRestPoint[ \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] analyzes the local \
stability of the vertex rest point of the BEP dynamics for a Centipede game \
of length \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), using \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) as test set rule and \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) as tie breaking \
rule (and number of trials = 1). For details, see the paper.\n\nThe function \
returns \!\(\*StyleBox[\"True\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\) if the conducted analysis concludes \
that the vertex rest point is unstable. Otherwise it returns \
\!\(\*StyleBox[\"False\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\).\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \
\!\(\*StyleBox[\"testSetRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the test set rule. Possible values are: \\\"all\\\" (test all), \
\\\"two\\\" (test two) or \\\"adj\\\" (test adjacent).\n- \
\!\(\*StyleBox[\"tieBreakingRule\",FontSlant->\"Italic\"]\) is a string that \
indicates the tie breaking rule. Possible values are: \\\"min\\\" (min if \
tie), \\\"stick\\\" (stick if tie) or \\\"unif\\\" (uniform if tie).\n- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) is an integer that indicates \
the number of nodes in the Centipede game.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InstabilityOfVertexRestPoint", "::", "invalidValueOf_d"}], "=", 
    "\"\<the variable d (number of nodes in the game) in \
LocalStabilityOfVertexRestPoint[testSetRule, tieBreakingRule, \!\(\*StyleBox[\
\"d\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)] cannot take the value `1`. It must \
be an integer strictly greater than 2\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InstabilityOfVertexRestPoint", "[", 
    RowBox[{"testSetRule_", ",", "tieBreakingRule_", " ", ",", "n_", ",", 
     RowBox[{"verbosity_:", "2"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "EM", 
       ",", "Q", ",", "QatPoint", ",", "vertexRules", ",", 
       "characteristicPolynomial", ",", "jordan", ",", "eigenvectors", ",", 
       "eigenvalues", ",", "eigensystem", ",", "negativeEigenvectors", ",", 
       "positiveEigenvectors", ",", "zeroEigenvectors", ",", "p", ",", 
       "projections", ",", "allProjectionsSameSign"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vertexRules", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "1", "]"}], "\[Rule]", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"y", "[", "1", "]"}], "\[Rule]", "1"}], "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], "\[Rule]", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "[", "i", "]"}], "\[Rule]", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"IntegerQ", "[", "n", "]"}], "]"}], " ", "||", 
         RowBox[{"n", "<", "3"}]}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{
            "InstabilityOfVertexRestPoint", "::", "invalidValueOf_d"}], ",", 
            "n"}], "]"}], ";", 
          RowBox[{
          "Print", "[", 
           "\"\<Error parameterizing the length of the game (number of nodes \
must be at least 3)\>\"", "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EM", "=", 
       RowBox[{"MeanDynamics", "[", 
        RowBox[{
        "testSetRule", ",", "tieBreakingRule", ",", "n", ",", "False", ",", 
         "False", ",", "verbosity"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"QatPoint", "=", 
          RowBox[{
           RowBox[{"JacobianOfMeanDynamics", "[", 
            RowBox[{"EM", ",", "verbosity"}], "]"}], "/.", "vertexRules"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Jacobian at the vertex:\\n\>\"", ",", 
           RowBox[{"MatrixForm", "[", "QatPoint", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Characteristic Polynomial: \>\"", ",", 
           RowBox[{"Factor", "[", 
            RowBox[{"CharacteristicPolynomial", "[", 
             RowBox[{"QatPoint", ",", "x"}], "]"}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Q", "=", 
       RowBox[{"PostProjectedJacobian", "[", 
        RowBox[{"EM", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"QatPoint", "=", 
       RowBox[{"Q", "/.", "vertexRules"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"characteristicPolynomial", " ", "=", " ", 
       RowBox[{"Factor", "[", 
        RowBox[{"CharacteristicPolynomial", "[", 
         RowBox[{"QatPoint", ",", "x"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Post-projected Jacobian at the vertex:\\n\>\"", ",", 
           RowBox[{"MatrixForm", "[", "QatPoint", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Characteristic Polynomial of post-projected Jacobian: \>\"", 
           ",", "characteristicPolynomial"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"testSetRule", "\[Equal]", "\"\<adj\>\""}], " ", "&&", " ", 
         RowBox[{"tieBreakingRule", "\[Equal]", "\"\<min\>\""}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "This", " ", "is", " ", "for", " ", "the", " ", 
          "\"\<adjacent, min-if-tie\>\"", " ", "case"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jordan", " ", "=", " ", 
          RowBox[{"JordanDecomposition", "[", "QatPoint", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Jordan Decomposition:\\n\>\"", ",", 
             RowBox[{"Map", "[", 
              RowBox[{"MatrixForm", ",", "jordan"}], "]"}]}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"eigenvectors", "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"First", "[", "jordan", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"eigenvalues", "=", " ", 
          RowBox[{"Diagonal", "[", 
           RowBox[{"Last", "[", "jordan", "]"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", " ", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "This", " ", "is", " ", "for", " ", "the", " ", "other", " ", 
          "cases"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eigensystem", "=", 
          RowBox[{"Eigensystem", "[", "QatPoint", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"eigenvalues", "=", 
          RowBox[{"First", "[", "eigensystem", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"eigenvectors", "=", 
          RowBox[{"FullSimplify", "[", 
           RowBox[{"Last", "[", "eigensystem", "]"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"negativeEigenvectors", "=", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", "<", "0"}], ",", 
            RowBox[{"eigenvectors", "[", 
             RowBox[{"[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"##", "&"}], "[", "]"}]}], "]"}], "&"}], ",", 
         "eigenvalues"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"positiveEigenvectors", "=", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", ">", "0"}], ",", 
            RowBox[{"eigenvectors", "[", 
             RowBox[{"[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"##", "&"}], "[", "]"}]}], "]"}], "&"}], ",", 
         "eigenvalues"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeroEigenvectors", "=", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", "==", "0"}], ",", 
            RowBox[{"eigenvectors", "[", 
             RowBox[{"[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"##", "&"}], "[", "]"}]}], "]"}], "&"}], ",", 
         "eigenvalues"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"NullSpace", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"negativeEigenvectors", ",", "zeroEigenvectors"}], "]"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Eigenvalues: \>\"", ",", " ", "eigenvalues"}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Numerical approximation to eigenvalues = \>\"", ",", 
           RowBox[{"N", "[", 
            RowBox[{"eigenvalues", ",", "6"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"testSetRule", "\[Equal]", "\"\<adj\>\""}], " ", "&&", 
            " ", 
            RowBox[{"tieBreakingRule", "\[Equal]", "\"\<min\>\""}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Generalized Eigenvectors: rows of \\n\>\"", ",", 
              RowBox[{"MatrixForm", "[", "eigenvectors", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Nullspace to Generalized Eigenvectors with negative or zero \
eigenvalue.(If this is just one vector, it is the normal vector to the \
hyperplane):\\n\>\"", ",", "p"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Eigenvectors: rows of \\n\>\"", ",", " ", 
              RowBox[{"MatrixForm", "[", "eigenvectors", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Nullspace to Eigenvectors with negative or zero \
eigenvalue.(If this is just one vector, it is the normal vector to the \
hyperplane):\\n\>\"", ",", "p"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"allProjectionsSameSign", "=", "False"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "p", "]"}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"projections", "=", 
          RowBox[{"FullSimplify", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Outer", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#1", "-", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "s1"}], "]"}]}], ")"}], 
                  "&"}], ",", 
                 RowBox[{"Permutations", "[", 
                  RowBox[{"UnitVector", "[", 
                   RowBox[{"s1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", ";;"}], ",", "All"}], "]"}], "]"}], ".", 
              RowBox[{"p", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", 
                 RowBox[{"1", ";;", "s1"}]}], "]"}], "]"}]}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Outer", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#1", "-", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "s2"}], "]"}]}], ")"}], 
                  "&"}], ",", 
                 RowBox[{"Permutations", "[", 
                  RowBox[{"UnitVector", "[", 
                   RowBox[{"s2", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", ";;"}], ",", "All"}], "]"}], "]"}], ".", 
              RowBox[{"p", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", 
                 RowBox[{
                  RowBox[{"s1", "+", "1"}], ";;", 
                  RowBox[{"s1", "+", "s2"}]}]}], "]"}], "]"}]}]}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"allProjectionsSameSign", "=", 
          RowBox[{"And", "@@", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sign", "[", 
                RowBox[{"First", "[", "projections", "]"}], "]"}], "\[Equal]", 
               RowBox[{"Sign", "[", "#", "]"}]}], "&"}], ",", "projections"}],
             "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Projections of the normal vector on the edges from the \
vertex:\\n\>\"", ",", "projections"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"allProjectionsSameSign", ",", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "\"\<The vertex is unstable\>\"", "]"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{
           "Print", "[", "\"\<The analysis is inconclusive.\>\"", "]"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "allProjectionsSameSign"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[200]:=",ExpressionUUID->"895edc6f-5982-4677-a995-fdb13e435fec"]
}, Closed]],

Cell[CellGroupData[{

Cell["Larger number of trials (only test-all, min-if-tie) ", "Subsection",ExpressionUUID->"146c33ec-1a58-447f-a90c-c7e01fd5977e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "MeanDynamicsTestAllMinIfTieManyTrials", "::", "invalidValueOf_d"}], "=", 
    "\"\<the variable \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) (number \
of nodes in the game) in MeanDynamicsTestAllMinIfTieManyTrials[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\),\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\):\
1, \!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] cannot take the \
value `1`. It must be an integer strictly greater than 1\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "MeanDynamicsTestAllMinIfTieManyTrials", "::", "invalidValueOf_trials"}], 
    "=", "\"\<the variable \!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\) \
in MeanDynamicsTestAllMinIfTieManyTrials[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\),\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*StyleBox[\"trials\",FontSlant->\
\"Italic\",
FontVariations->{\"Underline\"->True}]\):1, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] cannot take the \
value `1`. It must be an integer strictly greater than 0\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamicsTestAllMinIfTieManyTrials", "::", "usage"}], "=", 
    "\"\<MeanDynamicsTestAllMinIfTieManyTrials[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\):1, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the mean \
dynamics of the BEP dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), where agents use \
\!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"all\",FontSlant->\"Italic\"]\) as \
test set rule, \!\(\*StyleBox[\"min\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\"-\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"if\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\"-\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"tie\",FontSlant->\
\"Italic\"]\) as tie breaking rule, and they test each strategy using \
\!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\) number of trials.\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \!\(\*StyleBox[\"d\",FontSlant->\
\"Italic\"]\) is an integer that indicates the number of nodes in the \
Centipede game.\n- \!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\) is an \
optional parameter. It is an integer that indicates the number of trials used \
to test each strategy.\n- \!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\
\) is an optional parameter. It is an integer that controls the number of \
messages that are shown by the function. The higher the value of verbosity, \
the more messages are printed along the execution of any function. 0 prints \
no messages. 10 prints all implemented messages.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "mean", " ", "dynamics"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamicsTestAllMinIfTieManyTrials", "[", 
     RowBox[{"n_", ",", 
      RowBox[{"trials_:", "1"}], ",", 
      RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "MD", 
        ",", "timeComputingMD", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"IntegerQ", "[", "n", "]"}], "]"}], " ", "||", 
          RowBox[{"n", "<", "2"}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{
             "MeanDynamicsTestAllMinIfTieManyTrials", "::", 
              "invalidValueOf_d"}], ",", "n"}], "]"}], ";", 
           RowBox[{
           "Print", "[", 
            "\"\<Error parameterizing the length of the game (number of nodes \
must be at least 2)\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"IntegerQ", "[", "trials", "]"}], "]"}], " ", "||", 
          RowBox[{"trials", "<", "1"}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{
             "MeanDynamicsTestAllMinIfTieManyTrials", "::", 
              "invalidValueOf_trials"}], ",", "trials"}], "]"}], ";", 
           RowBox[{
           "Print", "[", 
            "\"\<Error parameterizing the number of trials (number of trials \
must be an integer greater than 0)\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"timeComputingMD", "=", 
        RowBox[{"First", "@", 
         RowBox[{"Timing", "[", 
          RowBox[{"MD", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FirstMoversInflowTestAllMinIfTieManyTrials", "[", 
               RowBox[{"n", ",", "trials"}], "]"}], "-", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"SecondMoversInflowTestAllMinIfTieManyTrials", "[", 
               RowBox[{"n", ",", "trials"}], "]"}], "-", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"y", "[", "i", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}]}], "]"}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"verbosity", "\[GreaterEqual]", "1"}], "&&", 
          RowBox[{"Not", "[", 
           RowBox[{"StringQ", "[", "MD", "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Time computing the mean dynamics: \>\"", ",", 
            "timeComputingMD"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Mean dynamics of BEP, test-all, min-if-tie, \>\"", ",", "n", 
            ",", "\"\< nodes, and \>\"", ",", " ", "trials", ",", 
            "\"\< trials:\\n\>\"", ",", 
            RowBox[{"MatrixForm", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "i", "]"}], "'"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"y", "[", "i", "]"}], "'"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}], "]"}], 
            ",", "\"\<==\>\"", ",", 
            RowBox[{"MatrixForm", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", "MD", ",", 
               
               RowBox[{"Short", "/@", "MD"}]}], "]"}], "]"}]}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "MD"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Inflows", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FirstMoversInflowTestAllMinIfTieManyTrials", "[", 
     RowBox[{"n_", ",", "trials_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"payoffsX", "=", 
         RowBox[{"PayoffsX", "[", "n", "]"}]}], ",", "eventsAndProbs", ",", 
        "payoffsAndProbabilities", ",", "payoffPMFs", ",", "payoffCDFs", ",", 
        "CDFunctions", ",", "CDStrictFunctions", ",", "PDFunctions", ",", 
        "pv", ",", "p", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pv", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"p", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"eventsAndProbs", "=", 
        RowBox[{"possibleEventsWithProbabilities", "[", 
         RowBox[{"trials", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"y", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"payoffsAndProbabilities", "=", 
        RowBox[{"MapAtColumn", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"payoffsX", ".", "#"}], "&"}], ",", "eventsAndProbs", ",", 
          "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"payoffPMFs", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PMF", "[", 
            RowBox[{"Thread", "[", 
             RowBox[{"List", "[", 
              RowBox[{
               RowBox[{"payoffsAndProbabilities", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1", ",", "#"}], "]"}], "]"}], ",", 
               RowBox[{"payoffsAndProbabilities", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
            "]"}], "&"}], ",", 
          RowBox[{"Range", "[", "s1", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"payoffCDFs", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"AccumulateAndFixColumnInMatrix", "[", 
            RowBox[{"2", ",", "#"}], "]"}], "&"}], ",", "payoffPMFs"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"CDFunctions", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"TurnCumulativeListIntoStrictFunctionOf", ",", 
          RowBox[{"{", 
           RowBox[{"payoffCDFs", ",", "pv"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CDStrictFunctions", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"TurnCumulativeListIntoFunctionOf", ",", 
          RowBox[{"{", 
           RowBox[{"payoffCDFs", ",", "pv"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"PDFunctions", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"TurnListIntoFunctionOf", ",", 
          RowBox[{"{", 
           RowBox[{"payoffPMFs", ",", "pv"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"listOfPayoffProbPairs", ",", "listedIndex"}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"Total", "[", "\[IndentingNewLine]", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{"payoffProbPair", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"PDFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "listedIndex", "]"}], "]"}], "]"}], 
                   "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"First", "[", "listedIndex", "]"}], "]"}], 
                    "\[Rule]", 
                    RowBox[{"First", "[", "payoffProbPair", "]"}]}], "}"}]}], 
                  ")"}], "*", 
                 RowBox[{
                  UnderoverscriptBox["\[Product]", 
                   RowBox[{"j", "=", "1"}], "s1"], 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"j", "\[Equal]", 
                    RowBox[{"First", "[", "listedIndex", "]"}]}], ",", "1", 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"j", "<", 
                    RowBox[{"First", "[", "listedIndex", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CDStrictFunctions", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "[", "j", "]"}], "\[Rule]", 
                    RowBox[{"First", "[", "payoffProbPair", "]"}]}], "}"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CDFunctions", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "[", "j", "]"}], "\[Rule]", 
                    RowBox[{"First", "[", "payoffProbPair", "]"}]}], 
                    "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}]}]}], 
               "\[IndentingNewLine]", "]"}], ",", "listOfPayoffProbPairs"}], 
             "]"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "payoffPMFs"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SecondMoversInflowTestAllMinIfTieManyTrials", "[", 
     RowBox[{"n_", ",", "trials_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"payoffsY", "=", 
         RowBox[{"PayoffsY", "[", "n", "]"}]}], ",", "eventsAndProbs", ",", 
        "payoffsAndProbabilities", ",", "payoffPMFs", ",", "payoffCDFs", ",", 
        "CDFunctions", ",", "CDStrictFunctions", ",", "PDFunctions", ",", 
        "pv", ",", "p", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pv", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"p", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"eventsAndProbs", "=", 
        RowBox[{"possibleEventsWithProbabilities", "[", 
         RowBox[{"trials", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"payoffsAndProbabilities", "=", 
        RowBox[{"MapAtColumn", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"payoffsY", ".", "#"}], "&"}], ",", "eventsAndProbs", ",", 
          "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"payoffPMFs", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PMF", "[", 
            RowBox[{"Thread", "[", 
             RowBox[{"List", "[", 
              RowBox[{
               RowBox[{"payoffsAndProbabilities", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1", ",", "#"}], "]"}], "]"}], ",", 
               RowBox[{"payoffsAndProbabilities", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
            "]"}], "&"}], ",", 
          RowBox[{"Range", "[", "s2", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"payoffCDFs", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"AccumulateAndFixColumnInMatrix", "[", 
            RowBox[{"2", ",", "#"}], "]"}], "&"}], ",", "payoffPMFs"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"CDFunctions", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"TurnCumulativeListIntoStrictFunctionOf", ",", 
          RowBox[{"{", 
           RowBox[{"payoffCDFs", ",", "pv"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CDStrictFunctions", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"TurnCumulativeListIntoFunctionOf", ",", 
          RowBox[{"{", 
           RowBox[{"payoffCDFs", ",", "pv"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"PDFunctions", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"TurnListIntoFunctionOf", ",", 
          RowBox[{"{", 
           RowBox[{"payoffPMFs", ",", "pv"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"listOfPayoffProbPairs", ",", "listedIndex"}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"Total", "[", "\[IndentingNewLine]", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{"payoffProbPair", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"PDFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "listedIndex", "]"}], "]"}], "]"}], 
                   "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"First", "[", "listedIndex", "]"}], "]"}], 
                    "\[Rule]", 
                    RowBox[{"First", "[", "payoffProbPair", "]"}]}], "}"}]}], 
                  ")"}], "*", 
                 RowBox[{
                  UnderoverscriptBox["\[Product]", 
                   RowBox[{"j", "=", "1"}], "s2"], 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"j", "\[Equal]", 
                    RowBox[{"First", "[", "listedIndex", "]"}]}], ",", "1", 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"j", "<", 
                    RowBox[{"First", "[", "listedIndex", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CDStrictFunctions", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "[", "j", "]"}], "\[Rule]", 
                    RowBox[{"First", "[", "payoffProbPair", "]"}]}], "}"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CDFunctions", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "[", "j", "]"}], "\[Rule]", 
                    RowBox[{"First", "[", "payoffProbPair", "]"}]}], 
                    "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}]}]}], 
               "\[IndentingNewLine]", "]"}], ",", "listOfPayoffProbPairs"}], 
             "]"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "payoffPMFs"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Supporting", " ", "functions"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"possibleEvents", "[", 
    RowBox[{"numTypes_", ",", "numDraws_"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Permutations", "/@", 
      RowBox[{"IntegerPartitions", "[", 
       RowBox[{"numDraws", ",", 
        RowBox[{"{", "numTypes", "}"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "numDraws"}], "]"}]}], "]"}]}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"possibleEventsWithProbabilities", "[", 
    RowBox[{"numDraws_", ",", "probabilities_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"events", "=", 
       RowBox[{"possibleEvents", "[", 
        RowBox[{
         RowBox[{"Length", "[", "probabilities", "]"}], ",", "numDraws"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"List", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Multinomial", "@@", "#"}], ")"}], "*", 
           RowBox[{"Apply", "[", 
            RowBox[{"Times", ",", 
             SuperscriptBox["probabilities", "#"]}], "]"}]}]}], "]"}], "&"}], 
       ",", "events"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MapAtColumn", "[", 
    RowBox[{"f_", ",", "l_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MapAt", "[", 
       RowBox[{"f", ",", "#", ",", "c"}], "]"}], "&"}], ",", "l"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PMF", "[", "l_", "]"}], ":=", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"List", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Total", "@", 
           RowBox[{"Map", "[", 
            RowBox[{"Last", ",", "#"}], "]"}]}]}], "]"}], "&"}], ",", 
       RowBox[{"GatherBy", "[", 
        RowBox[{"l", ",", "First"}], "]"}]}], "]"}], ",", "First"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AccumulateAndFixColumnInMatrix", "[", 
    RowBox[{"c_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"new", "=", "m"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "I", " ", "define", " ", "new", " ", "rather", " ", "than", " ", 
        "modifying", " ", "the", " ", "argument"}], ",", " ", 
       RowBox[{
        RowBox[{
        "in", " ", "the", " ", "hope", " ", "that", " ", "the", " ", 
         "function", " ", "will", " ", "be", " ", "automatically", " ", 
         RowBox[{"compiled", ".", " ", "See"}], " ", 
         "\"\<A compiled function can't change the value of its \
argument.\>\"", " ", "in", " ", 
         RowBox[{"http", ":"}]}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
            "questions"}], "/", "1803"}], "/", "how"}], "-", "to", "-", 
         "compile", "-", "effectively"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "This", " ", "function", " ", "prepends", " ", "a", " ", "0", " ", 
        "and", " ", "removes", " ", "the", " ", "last", " ", "element"}], ",",
        " ", 
       RowBox[{
       "which", " ", "is", " ", "assumed", " ", "to", " ", "be", " ", "a", 
        " ", "1.", " ", "The", " ", "motivation", " ", "is", " ", "to", " ", 
        "leave", " ", "everything", " ", "nice", " ", "and", " ", "ready", 
        " ", "for", " ", 
        RowBox[{"TurnListIntoStrictFunctionOf", "."}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"new", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "c"}], "]"}], "]"}], "=", " ", 
       RowBox[{"Most", "[", 
        RowBox[{"FoldList", "[", 
         RowBox[{"Plus", ",", "0", ",", 
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "c"}], "]"}], "]"}]}], "]"}], "]"}]}], ";", 
      "new"}]}], " ", "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TurnListIntoFunctionOf", "[", 
    RowBox[{"l_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", "=", 
       RowBox[{"MapAtColumn", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "\[Equal]", "#"}], ")"}], "&"}], ",", "l", ",", "1"}],
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Reverse", ",", "m"}], "]"}], ",", 
       "\"\<Shouldn't happen!\>\""}], "]"}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TurnCumulativeListIntoFunctionOf", "[", 
    RowBox[{"l_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"MapAtColumn", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "\[LessEqual]", "#"}], ")"}], "&"}], ",", "l", ",", 
           "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[LessEqual]", 
            RowBox[{"First", "[", 
             RowBox[{"First", "[", "l", "]"}], "]"}]}], ",", "0"}], "}"}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Reverse", ",", "m"}], "]"}], ",", "1"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TurnCumulativeListIntoStrictFunctionOf", "[", 
    RowBox[{"l_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"MapAtColumn", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "<", "#"}], ")"}], "&"}], ",", "l", ",", "1"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "<", 
            RowBox[{"First", "[", 
             RowBox[{"First", "[", "l", "]"}], "]"}]}], ",", "0"}], "}"}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Reverse", ",", "m"}], "]"}], ",", "1"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PayoffsX", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"centipedePlus", "=", "3"}], ",", 
       RowBox[{"centipedeMinus", "=", "1"}], ",", "gain", ",", 
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gain", "=", 
       RowBox[{"centipedePlus", "-", "centipedeMinus"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[GreaterEqual]", "i"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "gain"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"j", "-", "1"}], ")"}], "*", "gain"}], "-", 
           "centipedeMinus"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "s1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PayoffsY", "[", "n_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"centipedePlus", "=", "3"}], ",", 
        RowBox[{"centipedeMinus", "=", "1"}], ",", "gain", ",", 
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gain", "=", 
        RowBox[{"centipedePlus", "-", "centipedeMinus"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "\[GreaterEqual]", 
            RowBox[{"i", "+", "1"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "gain"}], "+", 
            "centipedePlus"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"j", "-", "1"}], ")"}], "*", "gain"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "s1"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "FloatingPointApproximateRestPointTestAllMinIfTieManyTrials", "::", 
     "usage"}], "=", 
    "\"\<FloatingPointApproximateRestPointTestAllMinIfTieManyTrials[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\):1, \
\!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\":\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"BarycentersPoint\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\
\):1 ] returns an approximate rest point of the BEP dynamics for a Centipede \
game of length \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), where agents \
use \!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"all\",FontSlant->\"Italic\"]\) as \
test set rule, \!\(\*StyleBox[\"min\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\"-\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"if\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\"-\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"tie\",FontSlant->\
\"Italic\"]\) as tie breaking rule, and they test each strategy using \
\!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\) number of trials. This \
approximate rest point is computed by applying the \
\!\(\*StyleBox[\"Mathematica\",FontSlant->\"Italic\"]\) function FindRoot on \
the appropriate mean dynamics, starting at the initial point provided by the \
user (as third parameter, called \
\!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\) above), or at the \
barycenters point if the user does not provide one. You can find more details \
about FindRoot in the \!\(\*StyleBox[\"Mathematica\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)documentation. \n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \!\(\*StyleBox[\"d\",FontSlant->\
\"Italic\"]\) is an integer that indicates the number of nodes in the \
Centipede game.\n- \!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\) is an \
optional parameter. It is an integer that indicates the number of trials used \
to test each strategy.\n- \!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\
\"]\) is an optional parameter. It is the initial point used in the function \
FindRoot, provided as a list containing \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) + 2 numbers. If this parameter \
is not provided, the initial point is taken to be the barycenters point \
(i.e., the point where every strategy is equally represented in each \
population for a Centipede game of length d.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FloatingPointApproximateRestPointTestAllMinIfTieManyTrials", "[", 
     RowBox[{"n_", ",", 
      RowBox[{"trials_:", "1"}], ",", " ", 
      RowBox[{
       StyleBox["ip_:",
        FontSlant->"Italic"], 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{
       StyleBox["verbosity_:",
        FontSlant->"Italic"], "1"}]}], " ", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
        "initialPoint", ",", "MD", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          StyleBox["ip",
           FontSlant->"Italic"], "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"initialPoint", "=", 
          RowBox[{"BarycentersPoint", "[", "n", "]"}]}], ",", 
         RowBox[{"initialPoint", "=", 
          StyleBox["ip",
           FontSlant->"Italic"]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<We find a rest point of the differential equation numerically \
(with FindRoot), starting at the initial point: \>\"", ",", " ", 
            "initialPoint"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"MD", "=", 
        RowBox[{"MeanDynamicsTestAllMinIfTieManyTrials", "[", 
         RowBox[{"n", ",", "trials", ",", "verbosity"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"ConstantArray", "[", 
              RowBox[{"0", ",", 
               RowBox[{"s1", "-", "1"}]}], "]"}], "\[Equal]", 
             RowBox[{"MD", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", "s1"}], "]"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"ConstantArray", "[", 
              RowBox[{"0", ",", 
               RowBox[{"s2", "-", "1"}]}], "]"}], "\[Equal]", 
             RowBox[{"MD", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"s1", "+", "2"}], ";;", 
                RowBox[{"s1", "+", "s2"}]}], "]"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "1", "]"}], "\[Equal]", 
              RowBox[{"1", "-", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "2", ",", "s1"}], "}"}]}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"y", "[", "1", "]"}], "\[Equal]", 
              RowBox[{"1", "-", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"y", "[", "j", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "2", ",", "s2"}], "}"}]}], "]"}]}]}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"First", "[", "#2", "]"}], "]"}], ",", "#1", ",", 
                "0", ",", "1"}], "}"}], "&"}], ",", 
             RowBox[{"initialPoint", "[", 
              RowBox[{"[", 
               RowBox[{";;", "s1"}], "]"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"y", "[", 
                 RowBox[{"First", "[", "#2", "]"}], "]"}], ",", "#1", ",", 
                "0", ",", "1"}], "}"}], "&"}], ",", 
             RowBox[{"initialPoint", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NDSolveMeanDynamicsTestAllMinIfTieManyTrials", "::", "usage"}], 
    "=", "\"\<NDSolveMeanDynamicsTestAllMinIfTieManyTrials[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\):1, \
\!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\":\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"RandomPoint\",FontSlant->\"Italic\"]\
\), \!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 , \!\(\*StyleBox[\
\"maxTime\",FontSlant->\"Italic\"]\):300, \
\!\(\*StyleBox[\"tolerance\",FontSlant->\"Italic\"]\):10.^-4, \!\(\*StyleBox[\
\"accuracyGoal\",FontSlant->\"Italic\"]\):6 ] numerically integrates the BEP \
dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), where agents use \
\!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"all\",FontSlant->\"Italic\"]\) as \
test set rule, \!\(\*StyleBox[\"min\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\"-\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"if\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\"-\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"tie\",FontSlant->\
\"Italic\"]\) as tie breaking rule, and they test each strategy using \
\!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\) number of trials. The \
numerical integration is conducted using NDSolve (a \
\!\(\*StyleBox[\"Mathematica\",FontSlant->\"Italic\"]\) function), starting \
at the initial point provided by the user (as third parameter, called \
\!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\) above), or at a \
random initial point if the user does not provide one.\n\nThe function \
returns a list of the form \
{\!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"solution\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"finalTime\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"finalPoint\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"outcomes\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"avgOutcome\",FontSlant->\"Italic\"\
]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
overallAvgOutcome\",FontSlant->\"Italic\"]\)}, where:\n- \
\!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\"]\) is the initial point \
used for the integration.\n- \
\!\(\*StyleBox[\"solution\",FontSlant->\"Italic\"]\) is the solution of the \
integration (i.e. a list of interpolating functions). \n- \
\!\(\*StyleBox[\"finalTime\",FontSlant->\"Italic\"]\) is the greatest time \
for which the dynamics have been integrated. \n- \
\!\(\*StyleBox[\"finalPoint\",FontSlant->\"Italic\"]\) is the last point in \
the computed trajectory (i.e. the solution evaluated at \
\!\(\*StyleBox[\"finalTime\",FontSlant->\"Italic\"]\)).\n- \
\!\(\*StyleBox[\"outcomes\",FontSlant->\"Italic\"]\) is the time series of \
the frequency of the different outcomes, derived from the \
\!\(\*StyleBox[\"solution\",FontSlant->\"Italic\"]\). It is a list of \
interpolating functions.\n- \!\(\*StyleBox[\"avgOutcome\",FontSlant->\"Italic\
\"]\) is the time series of the average outcome, derived from the \
\!\(\*StyleBox[\"solution\",FontSlant->\"Italic\"]\). It is an interpolating \
function.\n- \!\(\*StyleBox[\"overallAvgOutcome\",FontSlant->\"Italic\"]\) is \
the average outcome across time, derived from the time series \!\(\*StyleBox[\
\"avgOutcome\",FontSlant->\"Italic\"]\). It is the integration of \
\!\(\*StyleBox[\"avgOutcome\",FontSlant->\"Italic\"]\) along its domain.\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \!\(\*StyleBox[\"d\",FontSlant->\
\"Italic\"]\) is an integer that indicates the number of nodes in the \
Centipede game.\n- \!\(\*StyleBox[\"trials\",FontSlant->\"Italic\"]\) is an \
optional parameter. It is an integer that indicates the number of trials used \
to test each strategy.\n- \!\(\*StyleBox[\"initialPoint\",FontSlant->\"Italic\
\"]\) is an optional parameter. It is the initial point, provided as a list \
containing \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) + 2 numbers. If this \
parameter is not provided, the function takes a random initial point using \
RandomPoints[\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), 1].\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\n- \
\!\(\*StyleBox[\"maxTime\",FontSlant->\"Italic\"]\) is an optional parameter. \
It indicates the maximum final time used when integrating the mean dynamics \
using NDSolve. If the norm of the mean dynamics gets sufficiently small, then \
the integration stops (see below).\n- \
\!\(\*StyleBox[\"tolerance\",FontSlant->\"Italic\"]\) is an optional \
parameter. The integration of the mean dynamics will stop if the norm of the \
mean dynamics is less than the \
\!\(\*StyleBox[\"tolerance\",FontSlant->\"Italic\"]\).\n- \
\!\(\*StyleBox[\"accuracyGoal\",FontSlant->\"Italic\"]\) is an optional \
parameter, which indicates the AccuracyGoal used in NDSolve.\>\""}], " ", 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{" ", 
         RowBox[{
         "The", " ", "only", " ", "differences", " ", "between", " ", "this", 
          " ", "function", " ", "below", " ", "and", " ", 
          "NDSolveMeanDynamics", " ", "are", " ", "a"}], ")"}], " ", "the", 
        " ", "one", " ", "below", " ", "uses", " ", "the", " ", "mean", " ", 
        "dynamics", " ", "computing", " ", 
        RowBox[{"MeanDynamicsTestAllMinIfTieManyTrials", "[", 
         RowBox[{"n", ",", "trials", ",", "verbosity"}], "]"}], " ", "rather",
         " ", "than", " ", 
        RowBox[{"MeanDynamics", "[", 
         RowBox[{
         "testSetRule", ",", "tieBreakingRule", ",", "n", ",", "False", ",", 
          "False", ",", "verbosity"}], "]"}]}], ",", " ", 
       RowBox[{"and", " ", "b"}]}], ")"}], " ", "the", " ", "function", " ", 
     "below", " ", "uses", " ", "Method"}], "->", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
      "}"}], "."}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NDSolveMeanDynamicsTestAllMinIfTieManyTrials", "[", 
    RowBox[{"n_", ",", 
     RowBox[{"trials_:", "1"}], ",", 
     RowBox[{
      StyleBox["ip_:",
       FontSlant->"Italic"], 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"verbosity_:", "1"}], ",", 
     RowBox[{"maxTime_:", "300"}], ",", 
     RowBox[{"tolerance_:", 
      RowBox[{"10.", "^", 
       RowBox[{"-", "4"}]}]}], ",", 
     RowBox[{"accuracyGoal_:", "6"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"initialPoint", ",", 
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", 
       "projectedMD", ",", "vars", ",", "rulesToAddt", ",", "varsWitht", ",", 
       "Dvars", ",", "sol", ",", "finalTime", ",", "interweavedStrategyFreq", 
       ",", "outcomes", ",", "avgOutcome", ",", "i"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         StyleBox["ip",
          FontSlant->"Italic"], "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"initialPoint", "=", 
         RowBox[{"First", "[", 
          RowBox[{"RandomPoints", "[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"initialPoint", "=", 
         StyleBox["ip",
          FontSlant->"Italic"]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "initialPoint", "]"}], "\[NotEqual]", 
         RowBox[{"s1", "+", "s2"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<The initial point must be of dimension \>\"", ",", 
           RowBox[{"s1", "+", "s2"}]}], "]"}], ";", 
         RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rulesToAddt", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "i_Integer", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"y", "[", "i_Integer", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], "[", "t", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"varsWitht", "=", 
       RowBox[{"vars", "/.", "rulesToAddt"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Dvars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], "'"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"y", "[", "i", "]"}], "'"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"projectedMD", "=", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
              RowBox[{
               FractionBox["1", "s1"], 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}], ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
              RowBox[{
               FractionBox["1", "s2"], 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], "}"}]}], 
          "}"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"MeanDynamicsTestAllMinIfTieManyTrials", "[", 
          RowBox[{"n", ",", "trials", ",", 
           RowBox[{"verbosity", "-", "1"}]}], "]"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "NDSolve", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<We solve the differential equation numerically (with NDSolve), \
starting at the initial point: \>\"", ",", " ", "initialPoint"}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"finalTime", "=", "maxTime"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"Dvars", "\[Equal]", 
             RowBox[{"(", 
              RowBox[{"projectedMD", "/.", "rulesToAddt"}], ")"}]}], "]"}], 
           ",", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"varsWitht", "/.", 
               RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "==", "initialPoint"}],
             "]"}], ",", 
           RowBox[{"WhenEvent", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Norm", "[", "Dvars", "]"}], "<", "tolerance"}], "]"}],
              ",", " ", 
             RowBox[{"\"\<StopIntegration\>\"", ";", 
              RowBox[{"finalTime", "=", "t"}]}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "vars", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "accuracyGoal"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{
           "\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"interweavedStrategyFreq", "=", 
       RowBox[{"Riffle", "[", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "s1"}], "]"}], "]"}], ",", 
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outcomes", "=", 
       RowBox[{"Most", "@", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"z", ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"#1", "[", "z", "]"}], "*", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"interweavedStrategyFreq", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ")"}], "[", "z", "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", 
                   RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "+", "1"}], ",", 
                   RowBox[{"Length", "[", "interweavedStrategyFreq", "]"}], 
                   ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "]"}], "&"}], ",", 
          "interweavedStrategyFreq"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"avgOutcome", "=", 
       RowBox[{"Function", "[", 
        RowBox[{"z", ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"n", "+", "1"}], "]"}], ".", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", "z", "]"}], "&"}], ",", "outcomes"}], "]"}]}],
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Tooltip", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", "t", "]"}], "&"}], ",", "sol"}], "]"}], 
                ",", "vars"}], "}"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "vars"}]}], "]"}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "@", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{"Tooltip", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "t", "]"}], "&"}], ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", "s1"}], "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"vars", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", "s1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
                RowBox[{"PlotLegends", "\[Rule]", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", 
                   RowBox[{";;", "s1"}], "]"}], "]"}]}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", "\"\<First mover\>\""}], ",", 
                
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{"Tooltip", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "t", "]"}], "&"}], ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"vars", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], "}"}]}],
                   "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
                RowBox[{"PlotLegends", "\[Rule]", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"s1", "+", "1"}], ";;"}], "]"}], "]"}]}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", "\"\<Second mover\>\""}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\"\<                \>\"", 
            ",", " ", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameMargins", "\[Rule]", "15"}], ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "15"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"verbosity", "\[GreaterEqual]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "@", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{"Tooltip", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "t", "]"}], "&"}], ",", "outcomes"}], 
                    "]"}], ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "outcomes", "]"}], "]"}]}], 
                    "}"}]}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
                RowBox[{"PlotLegends", "\[Rule]", 
                 RowBox[{"Range", "[", 
                  RowBox[{"Length", "[", "outcomes", "]"}], "]"}]}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", "\"\<Outcomes\>\""}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{"avgOutcome", "[", "t", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "finalTime"}], "}"}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", "\"\<Avg. outcome\>\""}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\"\<                \>\"", 
            ",", " ", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameMargins", "\[Rule]", "15"}], ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "15"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"initialPoint", ",", "sol", ",", "finalTime", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "finalTime", "]"}], "&"}], ",", "sol"}], "]"}], 
        ",", "outcomes", ",", "avgOutcome", ",", 
        RowBox[{
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"avgOutcome", "[", "dummy", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"dummy", ",", "0", ",", "finalTime"}], "}"}]}], "]"}], 
         "/", "finalTime"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[
  0.85],ExpressionUUID->"895edc6f-5982-4677-a995-fdb13e435fec"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Introduction of backward induction agents, with the other agents using \
test-all, min-if-tie\
\>", "Subsection",ExpressionUUID->"146c33ec-1a58-447f-a90c-c7e01fd5977e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "MeanDynamicsTestAllMinIfTieWithBIAgents", "::", "invalidValueOf_d"}], 
    "=", "\"\<the variable \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) \
(number of nodes in the game) in MeanDynamicsTestAllMinIfTieWithBIAgents[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\),\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\):0, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] cannot take the \
value `1`. It must be an integer strictly greater than 1\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "MeanDynamicsTestAllMinIfTieWithBIAgents", "::", "invalidValueOf_b"}], 
    "=", "\"\<the variable \!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\) in \
MeanDynamicsTestAllMinIfTieWithBIAgents[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\),\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*StyleBox[\"b\",FontSlant->\"\
Italic\",
FontVariations->{\"Underline\"->True}]\):0, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] cannot take the \
value `1`. It must be a number in the range [0,1).\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamicsTestAllMinIfTieWithBIAgents", "::", "usage"}], "=", 
    "\"\<MeanDynamicsTestAllMinIfTieWithBIAgents[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\):0, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the mean \
dynamics of the BEP dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), where a fraction \
\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\) of agents in each population \
stop at their first opportunity, whilst the rest of the agents use \
\!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"all\",FontSlant->\"Italic\"]\) as \
test set rule and \
\!\(\*StyleBox[\"min\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",FontSlant-\
>\"Italic\"]\)\!\(\*StyleBox[\"if\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"tie\",FontSlant->\"Italic\"]\) as \
tie breaking rule (and number of trials = 1). Variables \
x[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] and \
y[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] in the equations returned by \
this function refer to the population of BEP agents, i.e. \
\!\(\*StyleBox[\"excluding\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\) the backward induction agents. Thus, \
both the sum of x[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] and of \
y[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] are equal to \
1-\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\).\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \!\(\*StyleBox[\"d\",FontSlant->\
\"Italic\"]\) is an integer that indicates the number of nodes in the \
Centipede game.\n- \!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\) is an \
optional parameter. It is a number in the range [0,1) that indicates the \
fraction of backward induction agents in each population.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "mean", " ", "dynamics"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamicsTestAllMinIfTieWithBIAgents", "[", 
     RowBox[{"n_", ",", 
      RowBox[{"b_:", "0"}], ",", 
      RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "MD", 
        ",", "timeComputingMD"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"IntegerQ", "[", "n", "]"}], "]"}], " ", "||", 
          RowBox[{"n", "<", "2"}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{
             "MeanDynamicsTestAllMinIfTieWithBIAgents", "::", 
              "invalidValueOf_d"}], ",", "n"}], "]"}], ";", 
           RowBox[{
           "Print", "[", 
            "\"\<Error parameterizing the length of the game (number of nodes \
must be at least 2)\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"NumericQ", "[", "b", "]"}], "]"}], "||", 
          RowBox[{"b", "<", "0"}], " ", "||", 
          RowBox[{"b", "\[GreaterEqual]", "1"}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{
             "MeanDynamicsTestAllMinIfTieWithBIAgents", "::", 
              "invalidValueOf_b"}], ",", "b"}], "]"}], ";", 
           RowBox[{
           "Print", "[", 
            "\"\<Error parameterizing the fraction of backward induction \
agents. It must be a number in the range [0,1).\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"timeComputingMD", "=", 
        RowBox[{"First", "@", 
         RowBox[{"Timing", "[", 
          RowBox[{"MD", "=", 
           RowBox[{
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "b"}], ")"}], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "i"}], "s2"], 
                    RowBox[{"y", "[", "k", "]"}]}], ")"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"m", "=", "1"}], "i"], 
                    RowBox[{"y", "[", "m", "]"}]}], ")"}], 
                    RowBox[{"s1", "-", "i"}]]}], "+", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], 
                    RowBox[{"i", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{"y", "[", "l", "]"}]}], ")"}], 
                    RowBox[{"i", "-", "k"}]], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"m", "=", "1"}], "k"], 
                    RowBox[{"y", "[", "m", "]"}]}], ")"}], 
                    RowBox[{"s1", "-", "i"}]]}]}]}], ")"}]}], "-", 
                  RowBox[{"x", "[", "i", "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "/.", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y", "[", "1", "]"}], "\[Rule]", 
                 RowBox[{
                  RowBox[{"y", "[", "1", "]"}], "+", "b"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "b"}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], "s1"], 
                    RowBox[{"x", "[", "k", "]"}]}], ")"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "+", 
                    RowBox[{"x", "[", "2", "]"}]}], ")"}], 
                    RowBox[{"s2", "-", "1"}]]}], "+", 
                    SuperscriptBox[
                    RowBox[{"x", "[", "1", "]"}], "s2"]}], ")"}]}], "-", 
                   RowBox[{"y", "[", "1", "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "b"}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"j", "+", "1"}]}], "s1"], 
                    RowBox[{"x", "[", "k", "]"}]}], ")"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"m", "=", "1"}], 
                    RowBox[{"j", "+", "1"}]], 
                    RowBox[{"x", "[", "m", "]"}]}], ")"}], 
                    RowBox[{"s2", "-", "j"}]]}], "+", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], "j"], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{"x", "[", "l", "]"}]}], ")"}], 
                    RowBox[{"j", "-", "k", "+", "1"}]], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"m", "=", "1"}], "k"], 
                    RowBox[{"x", "[", "m", "]"}]}], ")"}], 
                    RowBox[{"s2", "-", "j"}]]}]}]}], ")"}]}], "-", 
                    RowBox[{"y", "[", "j", "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", "2", ",", "s2"}], "}"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "/.", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
                 RowBox[{
                  RowBox[{"x", "[", "1", "]"}], "+", "b"}]}], ")"}]}]}], 
             "\[IndentingNewLine]", "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"j", "=", "1"}], "s1"], 
                RowBox[{"x", "[", "j", "]"}]}], "\[Rule]", 
               RowBox[{"1", "-", "b"}]}], ",", 
              RowBox[{
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"j", "=", "1"}], "s2"], 
                RowBox[{"y", "[", "j", "]"}]}], "\[Rule]", 
               RowBox[{"1", "-", "b"}]}]}], "}"}]}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"verbosity", "\[GreaterEqual]", "1"}], "&&", 
          RowBox[{"Not", "[", 
           RowBox[{"StringQ", "[", "MD", "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Time computing the mean dynamics: \>\"", ",", 
            "timeComputingMD"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Mean dynamics of BEP, test-all, min-if-tie, \>\"", ",", "n", 
            ",", "\"\< nodes, and a fraction \>\"", ",", " ", "b", ",", 
            "\"\< of backward induction agents in each population:\\n\>\"", 
            ",", 
            RowBox[{"MatrixForm", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "i", "]"}], "'"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"y", "[", "i", "]"}], "'"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}], "]"}], 
            ",", "\"\<==\>\"", ",", 
            RowBox[{"MatrixForm", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", "MD", ",", 
               
               RowBox[{"Short", "/@", "MD"}]}], "]"}], "]"}]}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "MD"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "FloatingPointApproximateRestPointTestAllMinIfTieWithBIAgents", "::", 
     "usage"}], "=", 
    "\"\<FloatingPointApproximateRestPointTestAllMinIfTieWithBIAgents[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\):0, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the \
approximate interior rest point of the BEP dynamics for a Centipede game of \
length \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), where a fraction \
\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\) of agents in each population \
stop at their first opportunity, whilst the rest of the agents use \
\!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"all\",FontSlant->\"Italic\"]\) as \
test set rule and \
\!\(\*StyleBox[\"min\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",FontSlant-\
>\"Italic\"]\)\!\(\*StyleBox[\"if\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"tie\",FontSlant->\"Italic\"]\) as \
tie breaking rule (and number of trials = 1). The output of this function \
refers to the population of BEP agents, i.e. \
\!\(\*StyleBox[\"excluding\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\) the backward induction agents. Thus, \
both the sum of x[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] and of \
y[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] will be equal to \
1-\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\).\n\nThis function employs the \
Euler method to find a fixed point of the equation \n\\t \
\!\(\*SubscriptBox[\(x\), \(t + 1\)]\) = \!\(\*SubscriptBox[\(x\), \(t\)]\) + \
step * MeanDynamics(\!\(\*SubscriptBox[\(x\), \(t\)]\)) \n      using \
floating-point arithmetic and starting from the center of the simplices.\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \!\(\*StyleBox[\"d\",FontSlant->\
\"Italic\"]\) is an integer that indicates the number of nodes in the \
Centipede game.\n- \!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\) is an \
optional parameter. It is a number in the range [0,1) that indicates the \
fraction of backward induction agents in each population.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\n- \
\!\(\*StyleBox[\"step\",FontSlant->\"Italic\"]\) is an optional parameter. It \
determines the magnitude of the step used in the Euler method.\>\""}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "FloatingPointApproximateRestPointTestAllMinIfTieWithBIAgents", "[", 
    RowBox[{"n_", ",", 
     RowBox[{"b_:", "0"}], ",", " ", 
     RowBox[{
      StyleBox["verbosity_:",
       FontSlant->"Italic"], "1"}], ",", 
     RowBox[{"step_:", 
      RowBox[{"2.", "^", 
       RowBox[{"-", "4"}]}]}]}], " ", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "EM", 
       ",", "\[CapitalPhi]1", ",", "\[CapitalPhi]2", ",", "P", ",", "vars", 
       ",", "CompiledNextIteration", ",", "Compiledfpoint"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EM", "=", 
       RowBox[{"MeanDynamicsTestAllMinIfTieWithBIAgents", "[", 
        RowBox[{"n", ",", "b", ",", "verbosity"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalPhi]1", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
        RowBox[{
         FractionBox["1", "s1"], 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalPhi]2", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
        RowBox[{
         FractionBox["1", "s2"], 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"P", "=", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[CapitalPhi]1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[CapitalPhi]2"}], "}"}]}], "}"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"CompiledNextIteration", "=", 
       RowBox[{"Compile", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", "vars", "]"}], ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "b"}], ")"}], "*", 
              RowBox[{"ProjectOnSimplex", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "b"}], ")"}], "*", 
              RowBox[{"ProjectOnSimplex", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], "]"}]}]}], "]"}], 
           "+", 
           RowBox[{"step", "*", 
            RowBox[{"P", ".", "EM"}]}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Compiledfpoint", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{"FixedPoint", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"CompiledNextIteration", "@@", "#"}], ")"}], "&"}], ",", 
           
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "b"}], ")"}], "*", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"1.", "/", "s1"}], ",", "s1"}], "]"}], ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"1.", "/", "s2"}], ",", "s2"}], "]"}]}], "]"}]}], ",", 
           RowBox[{"10", "^", "6"}], ",", 
           RowBox[{"SameTest", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{"#1", "-", "#2"}], "]"}], "<", 
               RowBox[{"10", "^", 
                RowBox[{"-", "16"}]}]}], "&"}], ")"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Thread", "[", 
       RowBox[{"vars", "\[Rule]", "Compiledfpoint"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[223]:=",ExpressionUUID->"895edc6f-5982-4677-a995-fdb13e435fec"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Introduction of backward induction agents, with the other agents using \
test-two, min-if-tie\
\>", "Subsection",ExpressionUUID->"146c33ec-1a58-447f-a90c-c7e01fd5977e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "MeanDynamicsTestTwoMinIfTieWithBIAgents", "::", "invalidValueOf_d"}], 
    "=", "\"\<the variable \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) \
(number of nodes in the game) in MeanDynamicsTestTwoMinIfTieWithBIAgents[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\),\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\):0, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] cannot take the \
value `1`. It must be an integer strictly greater than 1\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "MeanDynamicsTestTwoMinIfTieWithBIAgents", "::", "invalidValueOf_b"}], 
    "=", "\"\<the variable \!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\) in \
MeanDynamicsTestTwoMinIfTieWithBIAgents[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\),\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*StyleBox[\"b\",FontSlant->\"\
Italic\",
FontVariations->{\"Underline\"->True}]\):0, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] cannot take the \
value `1`. It must be a number in the range [0,1).\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamicsTestTwoMinIfTieWithBIAgents", "::", "usage"}], "=", 
    "\"\<MeanDynamicsTestTwoMinIfTieWithBIAgents[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\):0, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the mean \
dynamics of the BEP dynamics for a Centipede game of length \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), where a fraction \
\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\) of agents in each population \
stop at their first opportunity, whilst the rest of the agents use \
\!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"two\",FontSlant->\"Italic\"]\) as \
test set rule and \
\!\(\*StyleBox[\"min\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",FontSlant-\
>\"Italic\"]\)\!\(\*StyleBox[\"if\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"tie\",FontSlant->\"Italic\"]\) as \
tie breaking rule (and number of trials = 1). Variables \
x[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] and \
y[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] in the equations returned by \
this function refer to the population of BEP agents, i.e. \
\!\(\*StyleBox[\"excluding\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\) the backward induction agents. Thus, \
both the sum of x[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] and of \
y[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] are equal to \
1-\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\).\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \!\(\*StyleBox[\"d\",FontSlant->\
\"Italic\"]\) is an integer that indicates the number of nodes in the \
Centipede game.\n- \!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\) is an \
optional parameter. It is a number in the range [0,1) that indicates the \
fraction of backward induction agents in each population.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\>\""}], " ", ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "mean", " ", "dynamics"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanDynamicsTestTwoMinIfTieWithBIAgents", "[", 
     RowBox[{"n_", ",", 
      RowBox[{"b_:", "0"}], ",", 
      RowBox[{"verbosity_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"s2", "=", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "MD", 
        ",", "timeComputingMD"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"IntegerQ", "[", "n", "]"}], "]"}], " ", "||", 
          RowBox[{"n", "<", "2"}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{
             "MeanDynamicsTestTwoMinIfTieWithBIAgents", "::", 
              "invalidValueOf_d"}], ",", "n"}], "]"}], ";", 
           RowBox[{
           "Print", "[", 
            "\"\<Error parameterizing the length of the game (number of nodes \
must be at least 2)\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"NumericQ", "[", "b", "]"}], "]"}], "||", 
          RowBox[{"b", "<", "0"}], " ", "||", 
          RowBox[{"b", "\[GreaterEqual]", "1"}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{
             "MeanDynamicsTestTwoMinIfTieWithBIAgents", "::", 
              "invalidValueOf_b"}], ",", "b"}], "]"}], ";", 
           RowBox[{
           "Print", "[", 
            "\"\<Error parameterizing the fraction of backward induction \
agents. It must be a number in the range [0,1).\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"timeComputingMD", "=", 
        RowBox[{"First", "@", 
         RowBox[{"Timing", "[", 
          RowBox[{"MD", "=", 
           RowBox[{
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"s1", "-", "1"}]], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"h", "=", "1"}], 
                    RowBox[{"i", "-", "1"}]], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"h", "+", "1"}]}], "s2"], 
                    RowBox[{"y", "[", "k", "]"}]}], "+", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], "h"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}]}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], "+", 
                    RowBox[{"x", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "+", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"s1", "-", "1"}]], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"h", "=", 
                    RowBox[{"i", "+", "1"}]}], "s1"], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "i"}], "s2"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "i"], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], 
                    RowBox[{"i", "-", "1"}]], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"y", "[", "k", "]"}], 
                    RowBox[{"y", "[", "l", "]"}]}]}]}], "+", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], 
                    RowBox[{"i", "-", "1"}]], 
                    SuperscriptBox[
                    RowBox[{"y", "[", "k", "]"}], "2"]}]}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], "+", 
                    RowBox[{"x", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "-", 
                  RowBox[{"x", "[", "i", "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "/.", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y", "[", "1", "]"}], "\[Rule]", 
                 RowBox[{
                  RowBox[{"y", "[", "1", "]"}], "+", "b"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"s2", "-", "1"}]], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"h", "=", "1"}], 
                    RowBox[{"i", "-", "1"}]], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"h", "+", "2"}]}], "s1"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], "s1"], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], 
                    RowBox[{"h", "+", "1"}]], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}]}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i", "]"}], "+", 
                    RowBox[{"y", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "+", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"s2", "-", "1"}]], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"h", "=", 
                    RowBox[{"i", "+", "1"}]}], "s2"], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", 
                    RowBox[{"i", "+", "1"}]}], "s1"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"i", "+", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "2"}], "i"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"l", "=", "1"}], 
                    RowBox[{"k", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"x", "[", "k", "]"}], 
                    RowBox[{"x", "[", "l", "]"}]}]}]}], "+", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], "i"], 
                    SuperscriptBox[
                    RowBox[{"x", "[", "k", "]"}], "2"]}]}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "[", "i", "]"}], "+", 
                    RowBox[{"y", "[", "h", "]"}]}], ")"}]}], ")"}]}]}], "-", 
                  RowBox[{"y", "[", "i", "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], "/.", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
                 RowBox[{
                  RowBox[{"x", "[", "1", "]"}], "+", "b"}]}], ")"}]}]}], 
             "\[IndentingNewLine]", "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"j", "=", "1"}], "s1"], 
                RowBox[{"x", "[", "j", "]"}]}], "\[Rule]", 
               RowBox[{"1", "-", "b"}]}], ",", 
              RowBox[{
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"j", "=", "1"}], "s2"], 
                RowBox[{"y", "[", "j", "]"}]}], "\[Rule]", 
               RowBox[{"1", "-", "b"}]}]}], "}"}]}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"verbosity", "\[GreaterEqual]", "1"}], "&&", 
          RowBox[{"Not", "[", 
           RowBox[{"StringQ", "[", "MD", "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Time computing the mean dynamics: \>\"", ",", 
            "timeComputingMD"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Mean dynamics of BEP, test-two, min-if-tie, \>\"", ",", "n", 
            ",", "\"\< nodes, and a fraction \>\"", ",", " ", "b", ",", 
            "\"\< of backward induction agents in each population:\\n\>\"", 
            ",", 
            RowBox[{"MatrixForm", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "i", "]"}], "'"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"y", "[", "i", "]"}], "'"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}], "]"}], 
            ",", "\"\<==\>\"", ",", 
            RowBox[{"MatrixForm", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"verbosity", "\[GreaterEqual]", "2"}], ",", "MD", ",", 
               
               RowBox[{"Short", "/@", "MD"}]}], "]"}], "]"}]}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "MD"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "FloatingPointApproximateRestPointTestTwoMinIfTieWithBIAgents", "::", 
     "usage"}], "=", 
    "\"\<FloatingPointApproximateRestPointTestTwoMinIfTieWithBIAgents[ \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\):0, \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\):1 ] returns the \
approximate interior rest point of the BEP dynamics for a Centipede game of \
length \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\), where a fraction \
\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\) of agents in each population \
stop at their first opportunity, whilst the rest of the agents use \
\!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"two\",FontSlant->\"Italic\"]\) as \
test set rule and \
\!\(\*StyleBox[\"min\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\",FontSlant-\
>\"Italic\"]\)\!\(\*StyleBox[\"if\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"-\
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"tie\",FontSlant->\"Italic\"]\) as \
tie breaking rule (and number of trials = 1). The output of this function \
refers to the population of BEP agents, i.e. \
\!\(\*StyleBox[\"excluding\",FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\) the backward induction agents. Thus, \
both the sum of x[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] and of \
y[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\"]\)] will be equal to \
1-\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\).\n\nThis function employs the \
Euler method to find a fixed point of the equation \n\\t \
\!\(\*SubscriptBox[\(x\), \(t + 1\)]\) = \!\(\*SubscriptBox[\(x\), \(t\)]\) + \
step * MeanDynamics(\!\(\*SubscriptBox[\(x\), \(t\)]\)) \n      using \
floating-point arithmetic and starting from the center of the simplices.\n\n\
\!\(\*StyleBox[\"PARAMETERS\",FontWeight->\"Bold\",
FontVariations->{\"Underline\"->True}]\):\n- \!\(\*StyleBox[\"d\",FontSlant->\
\"Italic\"]\) is an integer that indicates the number of nodes in the \
Centipede game.\n- \!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\) is an \
optional parameter. It is a number in the range [0,1) that indicates the \
fraction of backward induction agents in each population.\n- \
\!\(\*StyleBox[\"verbosity\",FontSlant->\"Italic\"]\) is an optional \
parameter. It is an integer that controls the number of messages that are \
shown by the function. The higher the value of verbosity, the more messages \
are printed along the execution of any function. 0 prints no messages. 10 \
prints all implemented messages.\n- \
\!\(\*StyleBox[\"step\",FontSlant->\"Italic\"]\) is an optional parameter. It \
determines the magnitude of the step used in the Euler method.\>\""}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "FloatingPointApproximateRestPointTestTwoMinIfTieWithBIAgents", "[", 
    RowBox[{"n_", ",", 
     RowBox[{"b_:", "0"}], ",", " ", 
     RowBox[{
      StyleBox["verbosity_:",
       FontSlant->"Italic"], "1"}], ",", 
     RowBox[{"step_:", 
      RowBox[{"2.", "^", 
       RowBox[{"-", "4"}]}]}]}], " ", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ",", "EM", 
       ",", "\[CapitalPhi]1", ",", "\[CapitalPhi]2", ",", "P", ",", "vars", 
       ",", "CompiledNextIteration", ",", "Compiledfpoint"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EM", "=", 
       RowBox[{"MeanDynamicsTestTwoMinIfTieWithBIAgents", "[", 
        RowBox[{"n", ",", "b", ",", "verbosity"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalPhi]1", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "s1", "]"}], "-", 
        RowBox[{
         FractionBox["1", "s1"], 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"s1", ",", "s1"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalPhi]2", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "s2", "]"}], "-", 
        RowBox[{
         FractionBox["1", "s2"], 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"s2", ",", "s2"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"P", "=", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[CapitalPhi]1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[CapitalPhi]2"}], "}"}]}], "}"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"y", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"CompiledNextIteration", "=", 
       RowBox[{"Compile", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", "vars", "]"}], ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "b"}], ")"}], "*", 
              RowBox[{"ProjectOnSimplex", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s1"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "b"}], ")"}], "*", 
              RowBox[{"ProjectOnSimplex", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"y", "[", "i", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "s2"}], "}"}]}], "]"}], "]"}]}]}], "]"}], 
           "+", 
           RowBox[{"step", "*", 
            RowBox[{"P", ".", "EM"}]}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Compiledfpoint", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{"FixedPoint", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"CompiledNextIteration", "@@", "#"}], ")"}], "&"}], ",", 
           
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "b"}], ")"}], "*", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"1.", "/", "s1"}], ",", "s1"}], "]"}], ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"1.", "/", "s2"}], ",", "s2"}], "]"}]}], "]"}]}], ",", 
           RowBox[{"10", "^", "6"}], ",", 
           RowBox[{"SameTest", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{"#1", "-", "#2"}], "]"}], "<", 
               RowBox[{"10", "^", 
                RowBox[{"-", "16"}]}]}], "&"}], ")"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Thread", "[", 
       RowBox[{"vars", "\[Rule]", "Compiledfpoint"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 Background->GrayLevel[0.85],
 CellLabel->
  "In[229]:=",ExpressionUUID->"895edc6f-5982-4677-a995-fdb13e435fec"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation (alphabetical order)", "Section",ExpressionUUID->"4009a82b-8634-48ab-b894-d305596c1f3a"],

Cell[BoxData[
 RowBox[{"?", "BarycentersPoint"}]], "Input",ExpressionUUID->"e4d94e08-a9a0-49a8-b6e4-20a795f8ad6f"],

Cell[BoxData[
 RowBox[{"?", "EigenvaluesAtRationalApproximateRestPoint"}]], "Input",Expressi\
onUUID->"5f6e5ccc-c24e-4664-9250-22cd80bae77c"],

Cell[BoxData[
 RowBox[{"?", "ExactRestPoints"}]], "Input",ExpressionUUID->"919d6535-b535-400d-b698-8b7ff2545666"],

Cell[BoxData[
 RowBox[{"?", "FloatingPointApproximateRestPoint"}]], "Input",ExpressionUUID->"17412e27-4c67-40b4-8586-c09c66b09d33"],

Cell[BoxData[
 RowBox[{"?", 
  "FloatingPointApproximateRestPointTestAllMinIfTieManyTrials"}]], "Input",Exp\
ressionUUID->"18c57370-d27e-40ea-aee8-481567601731"],

Cell[BoxData[
 RowBox[{"?", 
  "FloatingPointApproximateRestPointTestAllMinIfTieWithBIAgents"}]], "Input",E\
xpressionUUID->"8d448d92-87de-4ee2-8d96-f82b12456944"],

Cell[BoxData[
 RowBox[{"?", 
  "FloatingPointApproximateRestPointTestTwoMinIfTieWithBIAgents"}]], "Input",E\
xpressionUUID->"7be13048-f02f-47b4-b1b2-963d48c0c439"],

Cell[BoxData[
 RowBox[{"?", "GlobalStabilityOfInteriorRestPoint"}]], "Input",ExpressionUUID->"becbdfd2-f182-459f-97ee-46b0966f8a5e"],

Cell[BoxData[
 RowBox[{"?", "InstabilityOfVertexRestPoint"}]], "Input",ExpressionUUID->"8cd12fd1-7b1b-46e1-b2f9-f5b89835e153"],

Cell[BoxData[
 RowBox[{"?", "JacobianOfMeanDynamics"}]], "Input",ExpressionUUID->"c62a1b3d-6689-48c1-8407-8605ac2105f7"],

Cell[BoxData[
 RowBox[{"?", "LocalStabilityOfInteriorRestPoint"}]], "Input",ExpressionUUID->"b73da2f1-7f56-474f-bf7c-02374457d46d"],

Cell[BoxData[
 RowBox[{"?", "MeanDynamics"}]], "Input",ExpressionUUID->"18435135-ad74-4876-9aa7-d685c594bf33"],

Cell[BoxData[
 RowBox[{"?", "MeanDynamicsTestAllMinIfTieManyTrials"}]], "Input",ExpressionUU\
ID->"21136c97-fb33-4c1c-9209-87e11d56f31f"],

Cell[BoxData[
 RowBox[{"?", "MeanDynamicsTestAllMinIfTieWithBIAgents"}]], "Input",Expression\
UUID->"2681646b-b146-4632-9b80-6d8612220b00"],

Cell[BoxData[
 RowBox[{"?", "MeanDynamicsTestTwoMinIfTieWithBIAgents"}]], "Input",Expression\
UUID->"264b53c5-2a39-4fd7-8515-247eff8c8ff0"],

Cell[BoxData[
 RowBox[{"?", "MeanDynamicsWithoutFirstVariables"}]], "Input",ExpressionUUID->"57aa68c6-930a-4a40-afbc-b862af53f7a8"],

Cell[BoxData[
 RowBox[{"?", "MeshPoints"}]], "Input",ExpressionUUID->"b12eeb83-7c86-4130-bdbc-c07961d93962"],

Cell[BoxData[
 RowBox[{"?", "NDSolveMeanDynamics"}]], "Input",ExpressionUUID->"11259bf6-fb76-45f2-bd2d-2e3edebc1df1"],

Cell[BoxData[
 RowBox[{"?", "NDSolveMeanDynamicsTestAllMinIfTieManyTrials"}]], "Input",Expre\
ssionUUID->"810f18a1-47b9-4c99-b717-7e8d26bb20c9"],

Cell[BoxData[
 RowBox[{"?", "NEigenvaluesAtRationalApproximateRestPoint"}]], "Input",Express\
ionUUID->"7305dbcc-2839-42f4-a85f-87233aa886f1"],

Cell[BoxData[
 RowBox[{"?", 
  "NumericalGlobalStabilityOfInteriorRestPointLyapunov"}]], "Input",Expression\
UUID->"6c2344b0-1604-412c-813b-79d4eb28641a"],

Cell[BoxData[
 RowBox[{"?", "NumericalGlobalStabilityOfInteriorRestPointNDSolve"}]], "Input",\
ExpressionUUID->"2785b9b3-20bd-47be-a15e-29068c5fd31b"],

Cell[BoxData[
 RowBox[{"?", "PostProjectedJacobian"}]], "Input",ExpressionUUID->"63efb794-185c-452b-8d4a-07aa5704e990"],

Cell[BoxData[
 RowBox[{"?", "ProjectedJacobian"}]], "Input",ExpressionUUID->"66d3cbdd-0ced-4715-aa09-e8bda58dabed"],

Cell[BoxData[
 RowBox[{"?", "RandomPoints"}]], "Input",ExpressionUUID->"e7de3199-89e3-4626-a5ba-ae5f1d88ecfe"],

Cell[BoxData[
 RowBox[{"?", "RationalApproximateRestPoint"}]], "Input",ExpressionUUID->"e330d837-7187-4200-88df-ba335f126ebb"],

Cell[BoxData[
 RowBox[{"?", "SimplexMesh"}]], "Input",ExpressionUUID->"7ef7945b-f6cf-4a7c-baee-66e5ac9874b7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples of usage", "Section",ExpressionUUID->"7414cb2e-17b8-4341-8689-80b153edcda0"],

Cell[CellGroupData[{

Cell["Mean dynamics", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"9e4c3019-1f48-4f2d-b705-843878f6f6d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MeanDynamics"}]], "Input",
 PrivateCellOptions->{"InitializationCellStyle"->"InitializationCell"},
 InitializationGroup->
  False,ExpressionUUID->"55972b50-71ad-4df2-840c-eb5a8ce163cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MeanDynamics", "[", 
   RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", " ", ",", "3"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"bd05a4a3-6829-410d-a8a2-38525195e876"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Full", " ", "simplify"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MeanDynamics", "[", 
    RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", " ", ",", "3", ",", "True"}], 
    "]"}], ";"}]}]], "Input",ExpressionUUID->"ad3440c0-9e3e-4b65-866b-\
e6ed785e047e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Full", " ", "simplify", " ", "and", " ", "omit", " ", "last", " ", 
    "variable"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MeanDynamics", "[", 
    RowBox[{
    "\"\<all\>\"", ",", "\"\<min\>\"", " ", ",", "3", ",", "True", ",", 
     "True"}], "]"}], ";"}]}]], "Input",ExpressionUUID->"f0b58740-c1d4-4891-\
b7e5-a60caedbca5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MeanDynamicsWithoutFirstVariables", "[", 
   RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", " ", ",", "3"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"a19fbad9-9aa5-4585-8a13-1969e35be166"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Full", " ", "simplify"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MeanDynamicsWithoutFirstVariables", "[", 
    RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", " ", ",", "3", ",", "True"}], 
    "]"}], ";"}]}]], "Input",ExpressionUUID->"28e7b5e1-910f-489d-8ec7-\
bb62a0f23b8a"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Jacobians", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"8d79524b-d133-4787-ae06-66695923ddfc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "JacobianOfMeanDynamics"}]], "Input",ExpressionUUID->"664becc5-5ae8-4175-ade0-e15cea13866f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobianOfMeanDynamics", "[", 
   RowBox[{"MeanDynamics", "[", 
    RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "3"}], "]"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"7554b34a-218f-49bb-b5ae-73f3002d2d91"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ProjectedJacobian"}]], "Input",ExpressionUUID->"51b49342-ab63-45bb-af9a-b0c133b0c3d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProjectedJacobian", "[", 
   RowBox[{"MeanDynamics", "[", 
    RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "3"}], "]"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"c44ff677-587c-4c3a-adb0-d8d4f89d9c1f"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PostProjectedJacobian"}]], "Input",ExpressionUUID->"51b49342-ab63-45bb-af9a-b0c133b0c3d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PostProjectedJacobian", "[", 
   RowBox[{"MeanDynamics", "[", 
    RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "3"}], "]"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"c44ff677-587c-4c3a-adb0-d8d4f89d9c1f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exact rest points", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"28909755-57a8-452d-a854-0314ae2e2769"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExactRestPoints"}]], "Input",ExpressionUUID->"b221a4bb-90d9-4e47-97e3-3fa5ccb60afc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ExactRestPoints", "[", 
   RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "3"}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Don", "'"}], "t", " ", "use", " ", "FullSimplify", " ", "and", 
    " ", 
    RowBox[{"don", "'"}], "t", " ", "omit", " ", "last", " ", "variables", 
    " ", 
    RowBox[{"(", 
     RowBox[{"default", " ", "setting"}], ")"}]}], " ", "*)"}]}]}], "Input",
 CellLabel->
  "In[235]:=",ExpressionUUID->"775d24ad-61ec-4547-8f6c-c80fb8b32d15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Same", " ", "as", " ", "above"}], ",", " ", 
    RowBox[{
     RowBox[{"but", " ", "with", " ", "verbosity"}], " ", "=", " ", "0"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ExactRestPoints", "[", 
   RowBox[{
   "\"\<all\>\"", ",", "\"\<min\>\"", ",", "3", ",", "False", ",", "False", 
    ",", "0"}], "]"}]}]], "Input",ExpressionUUID->"e6428bd9-7d98-43ab-9c1a-\
f2254dc2c68b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Use", " ", "FullSimplify", " ", "and", " ", 
    RowBox[{"don", "'"}], "t", " ", "omit", " ", "last", " ", "variables"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ExactRestPoints", "[", 
   RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "3", ",", "True"}], "]"}], 
  " "}]], "Input",ExpressionUUID->"b4294e82-8b0c-4902-84a6-24d5294bbfe3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Use", " ", "FullSimplify", " ", "and", " ", "omit", " ", "last", " ", 
    "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ExactRestPoints", "[", 
   RowBox[{
   "\"\<all\>\"", ",", "\"\<min\>\"", ",", "3", ",", "True", ",", "True"}], 
   "]"}], " "}]], "Input",ExpressionUUID->"9a9e1e69-9c80-4d3c-ab41-\
dff61819d232"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Don", "'"}], "t", " ", "use", " ", "FullSimplify", " ", "and", 
    " ", "omit", " ", "last", " ", "variables"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ExactRestPoints", "[", 
   RowBox[{
   "\"\<all\>\"", ",", "\"\<min\>\"", ",", "3", ",", "False", ",", "True"}], 
   "]"}], " "}]], "Input",ExpressionUUID->"8afcdd4b-17d7-4c6e-940f-\
83dd6715bb16"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Approximate rest points", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"9ce207e4-8487-4183-873a-4baed98d6b52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FloatingPointApproximateRestPoint"}]], "Input",ExpressionUUID->"50a9c823-a7eb-45c0-8902-7d33d8857c40"],

Cell[BoxData[{
 RowBox[{"FloatingPointApproximateRestPoint", "[", 
  RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "10"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotOutcomes", "[", "%", "]"}]}], "Input",ExpressionUUID->"42161e99-\
2fa4-4e39-93e2-43cc4547f126"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RationalApproximateRestPoint"}]], "Input",ExpressionUUID->"5466cefc-abe3-4f21-acf3-9f91c6533b82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RationalApproximateRestPoint", "[", 
   RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "10"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"0eb97416-91c3-484c-847e-c2ca1b741753"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Eigenvalues", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"f8ed45a1-5df6-415c-a521-df54c6dd4851"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EigenvaluesAtRationalApproximateRestPoint"}]], "Input",Expressi\
onUUID->"54f0c67f-bbe7-43dd-9c79-b24f29cd2312"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EigenvaluesAtRationalApproximateRestPoint", "[", 
   RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "6"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"2d3918f0-efb0-4e76-8098-40f0a512befc"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NEigenvaluesAtRationalApproximateRestPoint"}]], "Input",Express\
ionUUID->"e48664c1-5a5a-407f-bcb3-892438ac50b8"],

Cell[BoxData[
 RowBox[{"NEigenvaluesAtRationalApproximateRestPoint", "[", 
  RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "12"}], "]"}]], "Input",Expr\
essionUUID->"ef137e65-4b1b-4ec1-b22e-2c65a3f45fe6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Local stability of interior rest point (perturbation theorem)\
\>", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"35d4ae3b-0cee-4b91-9b90-89a9190c9fa3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "LocalStabilityOfInteriorRestPoint"}]], "Input",ExpressionUUID->"02849dfa-bf73-4582-96c7-6032d5fb1146"],

Cell[BoxData[
 RowBox[{"LocalStabilityOfInteriorRestPoint", "[", 
  RowBox[{"\"\<two\>\"", ",", "\"\<stick\>\"", ",", "6"}], "]"}]], "Input",Exp\
ressionUUID->"25e44fa7-d662-47e8-8588-06e727571d49"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Global stability of interior rest point (exact Lyapunov function)\
\>", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"e58618c9-c208-45cc-af3e-4fb1400091ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GlobalStabilityOfInteriorRestPoint"}]], "Input",ExpressionUUID->"6e4f5391-f4be-417c-be55-92e870e0aa9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GlobalStabilityOfInteriorRestPoint", "[", 
   RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "3"}], "]"}], 
  " "}]], "Input",ExpressionUUID->"28e2ecc3-900d-4921-a145-21b82b6d0067"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Creation of points in the simplices", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"e58618c9-c208-45cc-af3e-4fb1400091ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MeshPoints"}]], "Input",ExpressionUUID->"1badf326-8465-4c0a-af66-39b3ce50a171"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"MeshPoints", "[", 
    RowBox[{"20", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<We have created \>\"", ",", 
    RowBox[{"Length", "[", "points", "]"}], ",", " ", "\"\< points\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"points", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "30"}], "]"}], "]"}], "]"}]}], "Input",ExpressionUUID->\
"3e4030d6-731a-4b81-939d-06f00294a1d7"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RandomPoints"}]], "Input",ExpressionUUID->"b7d940fe-a36e-445a-ae18-97c3edf84575"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"RandomPoints", "[", 
    RowBox[{"20", ",", 
     RowBox[{"10", "^", "6"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<We have created \>\"", ",", 
    RowBox[{"Length", "[", "points", "]"}], ",", " ", "\"\< points\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"points", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "30"}], "]"}], "]"}], "]"}]}], "Input",ExpressionUUID->\
"e28f5e23-1188-423d-95ed-10015f249eca"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "BarycentersPoint"}]], "Input",ExpressionUUID->"f54b9c44-f2df-4c49-9355-bc12d7574658"],

Cell[BoxData[
 RowBox[{"BarycentersPoint", "[", "20", "]"}]], "Input",ExpressionUUID->"7b67ea5a-2b1b-4432-8b5d-1eeddfef136e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Numerical global stability of interior rest point (numerical evaluation of an \
approximate Lyapunov function)\
\>", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"6bd999bd-8142-47d1-9f29-dc9536222bf0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "NumericalGlobalStabilityOfInteriorRestPointLyapunov"}]], "Input",Expression\
UUID->"d8ffb0a0-1e8b-4671-bb24-48d047021597"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Numerically", " ", "check", " ", "the", " ", "global", " ", "stability", 
    " ", "of", " ", "the", " ", "interior", " ", "rest", " ", "point", " ", 
    "evaluating", " ", "the", " ", "tentative", " ", "Lyapunov", " ", 
    "function", " ", "on", " ", "a", " ", "grid", " ", "with", " ", "mesh", 
    " ", 
    RowBox[{"1", "/", "4"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"NumericalGlobalStabilityOfInteriorRestPointLyapunov", "[", 
   RowBox[{"\"\<all\>\"", ",", "\"\<stick\>\"", ",", "20", ",", 
    RowBox[{"MeshPoints", "[", 
     RowBox[{"20", ",", "4"}], "]"}]}], "]"}]}]], "Input",ExpressionUUID->\
"42f0fdf7-54c5-4c35-852d-2b9d99ce4a30"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Numerically", " ", "check", " ", "the", " ", "global", " ", "stability", 
    " ", "of", " ", "the", " ", "interior", " ", "rest", " ", "point", " ", 
    "evaluating", " ", "the", " ", "tentative", " ", "Lyapunov", " ", 
    "function", " ", "on", " ", 
    RowBox[{"10", "^", "6"}], " ", "random", " ", "points"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"NumericalGlobalStabilityOfInteriorRestPointLyapunov", "[", 
   RowBox[{"\"\<all\>\"", ",", "\"\<stick\>\"", ",", "20", ",", 
    RowBox[{"RandomPoints", "[", 
     RowBox[{"20", ",", 
      RowBox[{"10", "^", "6"}]}], "]"}]}], "]"}]}]], "Input",ExpressionUUID->\
"42f0fdf7-54c5-4c35-852d-2b9d99ce4a30"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical global stability of interior rest point (NDSolve)", \
"Subsection",
 InitializationGroup->
  False,ExpressionUUID->"4014ac41-5062-4e61-8a80-84c6efef47e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NumericalGlobalStabilityOfInteriorRestPointNDSolve"}]], "Input",\
ExpressionUUID->"44e7ee4c-64cd-4e82-9a4d-7b0f830708db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Numerically", " ", "check", " ", "the", " ", "global", " ", "stability", 
    " ", "of", " ", "the", " ", "interior", " ", "rest", " ", "point", " ", 
    "using", " ", "NDSolve", " ", "starting", " ", "on", " ", "1000", " ", 
    "random", " ", "points"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"NumericalGlobalStabilityOfInteriorRestPointNDSolve", "[", 
   RowBox[{"\"\<adj\>\"", ",", "\"\<stick\>\"", ",", "10", ",", 
    RowBox[{"RandomPoints", "[", 
     RowBox[{"10", ",", "1000"}], "]"}]}], "]"}]}]], "Input",ExpressionUUID->\
"3a13e1b2-9a40-4464-9b37-050331d800b5"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerically solve mean dynamics", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"72ad96c2-56ea-439b-b3e6-9734ed949d08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NDSolveMeanDynamics"}]], "Input",ExpressionUUID->"d2942d15-cc06-4916-b8e8-1923f9648ebc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NDSolveMeanDynamics", "[", 
    RowBox[{"\"\<adj\>\"", ",", "\"\<min\>\"", " ", ",", "20"}], "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"by", " ", "default"}], ",", " ", 
    RowBox[{"the", " ", "initial", " ", "point", " ", "is", " ", "random"}]}],
    "*)"}]}]], "Input",ExpressionUUID->"ae4abd7a-081b-4224-ac3f-343865a276ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialPoint", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"PadRight", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.99", ",", "0.01"}], "}"}], ",", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", "3"}], ")"}], "/", "2"}], "]"}]}], "]"}], ",", 
     RowBox[{"PadRight", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.99", ",", "0.01"}], "}"}], ",", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", "2"}], ")"}], "/", "2"}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Initial point created: \>\"", ",", " ", "initialPoint"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NDSolveMeanDynamics", "[", 
   RowBox[{
   "\"\<adj\>\"", ",", "\"\<min\>\"", " ", ",", "d", ",", "initialPoint"}], 
   "]"}], ";"}]}], "Input",ExpressionUUID->"97245497-3f84-42a4-93e9-\
add113ecc8c6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Instability of the backward induction state (i.e. the vertex rest point)\
\>", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"5e009aeb-48ed-4bbf-b1a7-15644be7efd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InstabilityOfVertexRestPoint"}]], "Input",ExpressionUUID->"69c1e0dd-ceee-4e19-85fd-339f033f19cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InstabilityOfVertexRestPoint", "[", 
   RowBox[{"\"\<adj\>\"", ",", "\"\<min\>\"", ",", "10"}], "]"}], 
  ";"}]], "Input",
 CellLabel->
  "In[251]:=",ExpressionUUID->"7f8b20e1-1347-4d33-b3aa-008232ed2a5b"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"InstabilityOfVertexRestPoint", "[", 
    RowBox[{"\"\<all\>\"", ",", "\"\<min\>\"", ",", "d", ",", "0"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "3", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[252]:=",ExpressionUUID->"ae1e37d0-24b6-4d8a-a846-cd81a2308afa"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Larger number of trials (only test-all, min-if-tie) ", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"72ad96c2-56ea-439b-b3e6-9734ed949d08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MeanDynamicsTestAllMinIfTieManyTrials"}]], "Input",ExpressionUU\
ID->"d2942d15-cc06-4916-b8e8-1923f9648ebc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MeanDynamicsTestAllMinIfTieManyTrials", "[", 
   RowBox[{"4", ",", "20"}], "]"}], ";"}]], "Input",ExpressionUUID->"ae4abd7a-\
081b-4224-ac3f-343865a276ba"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"MeanDynamicsTestAllMinIfTieManyTrials", "[", 
       RowBox[{"d", ",", "1", ",", "0"}], "]"}], "==", 
      RowBox[{"MeanDynamics", "[", 
       RowBox[{
       "\"\<all\>\"", ",", "\"\<min\>\"", ",", "d", ",", "False", ",", 
        "False", ",", "0"}], "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d", "+", "3"}], ")"}], "/", "2"}], "]"}]}], "}"}]}], 
          "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"y", "[", "j", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d", "+", "2"}], ")"}], "/", "2"}], "]"}]}], "}"}]}], 
          "]"}], "\[Equal]", "1"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "20"}], "}"}]}], "]"}]], "Input",ExpressionUUI\
D->"30b217e4-406f-4bb2-ad47-924a730fe453"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "FloatingPointApproximateRestPointTestAllMinIfTieManyTrials"}]], "Input",Exp\
ressionUUID->"63f0fd15-71ee-4ccc-93cc-be12bea65457"],

Cell[BoxData[
 RowBox[{"FloatingPointApproximateRestPointTestAllMinIfTieManyTrials", "[", 
  RowBox[{"4", ",", "10"}], "]"}]], "Input",ExpressionUUID->"97245497-3f84-\
42a4-93e9-add113ecc8c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", 
     RowBox[{"x", "[", "2", "]"}], ",", 
     RowBox[{"x", "[", "3", "]"}], ",", 
     RowBox[{"y", "[", "1", "]"}], ",", 
     RowBox[{"y", "[", "2", "]"}], ",", 
     RowBox[{"y", "[", "3", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"vars", "/.", 
       RowBox[{
       "FloatingPointApproximateRestPointTestAllMinIfTieManyTrials", "[", 
        RowBox[{"4", ",", "trials", ",", 
         RowBox[{"{", "}"}], ",", "0"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"trials", ",", "1", ",", "30"}], "}"}]}], "]"}], 
    "\[Transpose]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "vars"}]}], "]"}]}], "Input",ExpressionUU\
ID->"b8993fc3-efa1-4601-af08-db4cf09eb02a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NDSolveMeanDynamicsTestAllMinIfTieManyTrials"}]], "Input",Expre\
ssionUUID->"50f522b4-255f-4c1a-bde7-65e33474e049"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NDSolveMeanDynamicsTestAllMinIfTieManyTrials", "[", 
   RowBox[{"4", ",", "10"}], "]"}], ";"}]], "Input",ExpressionUUID->"f918f814-\
c64f-4a9f-a0fd-e653c402f88c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NDSolveMeanDynamicsTestAllMinIfTieManyTrials", "[", 
   RowBox[{"4", ",", "10", ",", 
    RowBox[{"{", 
     RowBox[{
     "0.99", ",", "0.01", ",", "0", ",", "0.99", ",", "0.01", ",", "0"}], 
     "}"}]}], "]"}], ";"}]], "Input",ExpressionUUID->"be71c8f6-e5eb-4f8e-b591-\
8df7ae645b26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NDSolveMeanDynamicsTestAllMinIfTieManyTrials", "[", 
   RowBox[{"4", ",", "35", ",", 
    RowBox[{"{", 
     RowBox[{
     "0.99", ",", "0.01", ",", "0", ",", "0.99", ",", "0.01", ",", "0"}], 
     "}"}]}], "]"}], ";"}]], "Input",ExpressionUUID->"bfc382bf-6ec3-4c15-99ee-\
cb9ebf9789d4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Introduction of backward induction agents, with the other agents using \
test-all, min-if-tie\
\>", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"72ad96c2-56ea-439b-b3e6-9734ed949d08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MeanDynamicsTestAllMinIfTieWithBIAgents"}]], "Input",Expression\
UUID->"d2942d15-cc06-4916-b8e8-1923f9648ebc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MeanDynamicsTestAllMinIfTieWithBIAgents", "[", 
   RowBox[{"4", ",", "0.2"}], "]"}], ";"}]], "Input",ExpressionUUID->\
"ae4abd7a-081b-4224-ac3f-343865a276ba"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"MeanDynamicsTestAllMinIfTieWithBIAgents", "[", 
       RowBox[{"d", ",", "0", ",", "0"}], "]"}], "==", 
      RowBox[{"MeanDynamics", "[", 
       RowBox[{
       "\"\<all\>\"", ",", "\"\<min\>\"", ",", "d", ",", "False", ",", 
        "False", ",", "0"}], "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d", "+", "3"}], ")"}], "/", "2"}], "]"}]}], "}"}]}], 
          "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"y", "[", "j", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d", "+", "2"}], ")"}], "/", "2"}], "]"}]}], "}"}]}], 
          "]"}], "\[Equal]", "1"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "20"}], "}"}]}], "]"}]], "Input",ExpressionUUI\
D->"30b217e4-406f-4bb2-ad47-924a730fe453"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "FloatingPointApproximateRestPointTestAllMinIfTieWithBIAgents"}]], "Input",E\
xpressionUUID->"63f0fd15-71ee-4ccc-93cc-be12bea65457"],

Cell[BoxData[
 RowBox[{"FloatingPointApproximateRestPointTestAllMinIfTieWithBIAgents", "[", 
  
  RowBox[{"4", ",", "0.2"}], "]"}]], "Input",ExpressionUUID->"97245497-3f84-\
42a4-93e9-add113ecc8c6"],

Cell[BoxData[
 RowBox[{"FloatingPointApproximateRestPointTestAllMinIfTieWithBIAgents", "[", 
  
  RowBox[{"4", ",", "0.3", ",", "0"}], "]"}]], "Input",ExpressionUUID->\
"aab83e86-509f-4720-9781-7542271f533a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Code", " ", "for", " ", "producing", " ", "a", " ", "graph", " ", "of", 
    " ", "the", " ", "interior", " ", "rest", " ", "points", " ", "as", " ", 
    "a", " ", "function", " ", "of", " ", "the", " ", "fraction", " ", 
    StyleBox["b",
     FontSlant->"Italic"], " ", "of", " ", "BI", " ", 
    RowBox[{"agents", ".", " ", "Variables"}], " ", 
    RowBox[{"x", "[", 
     StyleBox["i",
      FontSlant->"Italic"], "]"}], " ", "and", " ", 
    RowBox[{"y", "[", 
     StyleBox["i",
      FontSlant->"Italic"], "]"}], " ", "shown", " ", "in", " ", "the", " ", 
    "figure", " ", "refer", " ", "to", " ", "the", " ", "population", " ", 
    "of", " ", "BEP", " ", "agents", " ", "only", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"and", " ", "are", " ", "appropriately", " ", "normalized"}], 
      ")"}], "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mesh", "=", 
     RowBox[{"2.", "^", 
      RowBox[{"-", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listOfValuesForb", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", 
       RowBox[{"1", "-", "mesh"}], ",", "mesh"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listOfFixedPoints", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "FloatingPointApproximateRestPointTestAllMinIfTieWithBIAgents", "[", 
         RowBox[{"d", ",", "#", ",", "0"}], "]"}], "&"}], ",", 
       "listOfValuesForb"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{"IntegerPart", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ";", 
    RowBox[{"xVars", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"x", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2", "=", 
     RowBox[{"IntegerPart", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ";", 
    RowBox[{"yVars", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"y", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Rest", "[", 
           RowBox[{"FoldList", "[", 
            RowBox[{"Plus", ",", "0", ",", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Normalize", "[", 
                  RowBox[{"#", ",", "Total"}], "]"}], "&"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"#1", "/.", "listOfFixedPoints"}]}], "]"}], 
              "\[Transpose]"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Filling", "\[Rule]", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"i", "+", "1"}], "\[Rule]", 
                RowBox[{"{", "i", "}"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"s1", "-", "1"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"Rule", "[", 
              RowBox[{"1", ",", "Axis"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"DataRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", "listOfValuesForb", "]"}], ",", 
             RowBox[{"Last", "[", "listOfValuesForb", "]"}]}], "}"}]}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Population \>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
            "\"\<: BEP(\!\(\*SuperscriptBox[\(\[Tau]\), \(all\)]\), 1, \
\!\(\*SuperscriptBox[\(\[Beta]\), \(min\)]\)) agents\>\""}]}], ",", 
          RowBox[{"Frame", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"True", ",", "True", ",", "False", ",", "False"}], 
            "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", "#1"}], "]"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\)\>\"", ",", 
             "None"}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "&"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"xVars", ",", "yVars"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", ",", "\"\<                \>\"", ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameMargins", "\[Rule]", "15"}], ",", 
     RowBox[{"RoundingRadius", "\[Rule]", "15"}]}], "]"}]}]}]], "Input",Expres\
sionUUID->"07f7b923-84fd-44e2-8aa3-11a6fb8e359c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Introduction of backward induction agents, with the other agents using \
test-two, min-if-tie\
\>", "Subsection",
 InitializationGroup->
  False,ExpressionUUID->"72ad96c2-56ea-439b-b3e6-9734ed949d08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MeanDynamicsTestTwoMinIfTieWithBIAgents"}]], "Input",Expression\
UUID->"d2942d15-cc06-4916-b8e8-1923f9648ebc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MeanDynamicsTestTwoMinIfTieWithBIAgents", "[", 
   RowBox[{"4", ",", "0.2"}], "]"}], ";"}]], "Input",ExpressionUUID->\
"ae4abd7a-081b-4224-ac3f-343865a276ba"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"MeanDynamicsTestTwoMinIfTieWithBIAgents", "[", 
       RowBox[{"d", ",", "0", ",", "0"}], "]"}], "==", 
      RowBox[{"MeanDynamics", "[", 
       RowBox[{
       "\"\<two\>\"", ",", "\"\<min\>\"", ",", "d", ",", "False", ",", 
        "False", ",", "0"}], "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d", "+", "3"}], ")"}], "/", "2"}], "]"}]}], "}"}]}], 
          "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"y", "[", "j", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d", "+", "2"}], ")"}], "/", "2"}], "]"}]}], "}"}]}], 
          "]"}], "\[Equal]", "1"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "20"}], "}"}]}], "]"}]], "Input",ExpressionUUI\
D->"30b217e4-406f-4bb2-ad47-924a730fe453"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "FloatingPointApproximateRestPointTestTwoMinIfTieWithBIAgents"}]], "Input",E\
xpressionUUID->"63f0fd15-71ee-4ccc-93cc-be12bea65457"],

Cell[BoxData[
 RowBox[{"FloatingPointApproximateRestPointTestTwoMinIfTieWithBIAgents", "[", 
  
  RowBox[{"4", ",", "0.2"}], "]"}]], "Input",ExpressionUUID->"97245497-3f84-\
42a4-93e9-add113ecc8c6"],

Cell[BoxData[
 RowBox[{"FloatingPointApproximateRestPointTestTwoMinIfTieWithBIAgents", "[", 
  
  RowBox[{"20", ",", "0.5", ",", "0"}], "]"}]], "Input",ExpressionUUID->\
"3eb76ec4-71e7-46b3-abaa-757510d5f101"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mesh", "=", 
    RowBox[{"2.", "^", 
     RowBox[{"-", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Code", " ", "for", " ", "producing", " ", "a", " ", "graph", " ", "of", 
    " ", "the", " ", "interior", " ", "rest", " ", "points", " ", "as", " ", 
    "a", " ", "function", " ", "of", " ", "the", " ", "fraction", " ", 
    StyleBox["b",
     FontSlant->"Italic"], " ", "of", " ", "BI", " ", 
    RowBox[{"agents", ".", " ", "Variables"}], " ", 
    RowBox[{"x", "[", 
     StyleBox["i",
      FontSlant->"Italic"], "]"}], " ", "and", " ", 
    RowBox[{"y", "[", 
     StyleBox["i",
      FontSlant->"Italic"], "]"}], " ", "shown", " ", "in", " ", "the", " ", 
    "figure", " ", "refer", " ", "to", " ", "the", " ", "population", " ", 
    "of", " ", "BEP", " ", "agents", " ", "only", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"and", " ", "are", " ", "appropriately", " ", "normalized"}], 
      ")"}], "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listOfValuesForb", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", 
     RowBox[{"1", "-", "mesh"}], ",", "mesh"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listOfFixedPoints", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "FloatingPointApproximateRestPointTestTwoMinIfTieWithBIAgents", "[", 
       RowBox[{"d", ",", "#", ",", "0"}], "]"}], "&"}], ",", 
     "listOfValuesForb"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s1", "=", 
   RowBox[{"IntegerPart", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "+", "3"}], ")"}], "/", "2"}], "]"}]}], ";", 
  RowBox[{"xVars", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"x", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "s1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", 
   RowBox[{"IntegerPart", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "+", "2"}], ")"}], "/", "2"}], "]"}]}], ";", 
  RowBox[{"yVars", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"y", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Rest", "[", 
         RowBox[{"FoldList", "[", 
          RowBox[{"Plus", ",", "0", ",", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Normalize", "[", 
                RowBox[{"#", ",", "Total"}], "]"}], "&"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"#1", "/.", "listOfFixedPoints"}]}], "]"}], 
            "\[Transpose]"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"i", "+", "1"}], "\[Rule]", 
              RowBox[{"{", "i", "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"s1", "-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Rule", "[", 
            RowBox[{"1", ",", "Axis"}], "]"}]}], "]"}]}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"DataRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "[", "listOfValuesForb", "]"}], ",", 
           RowBox[{"Last", "[", "listOfValuesForb", "]"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<Population \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
          "\"\<: BEP(\!\(\*SuperscriptBox[\(\[Tau]\), \(two\)]\), 1, \
\!\(\*SuperscriptBox[\(\[Beta]\), \(min\)]\)) agents\>\""}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
        ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", "#1"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\)\>\"", ",", 
           "None"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "&"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"xVars", ",", "yVars"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   ",", "\"\<                \>\"", ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", "15"}], ",", 
   RowBox[{"RoundingRadius", "\[Rule]", "15"}]}], "]"}]}], "Input",ExpressionU\
UID->"da2c251b-bb35-44cc-a9e2-4c4d52091e50"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1269, 1075},
WindowMargins->{{Automatic, 0}, {Automatic, 30}},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Input"]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 126, 0, 98, "Title",ExpressionUUID->"91a618f7-3b5e-4fb9-bf02-ee524a0acef3"],
Cell[709, 24, 634, 20, 53, "Subtitle",ExpressionUUID->"30a09403-1cf9-4753-9de6-82c3a66e18b2",
 InitializationGroup->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1380, 49, 81, 0, 67, "Section",ExpressionUUID->"4009a82b-8634-48ab-b894-d305596c1f3a"],
Cell[1464, 51, 2034, 47, 448, "Text",ExpressionUUID->"8359490b-f256-47f9-935c-eabc8ae0a58a"]
}, Closed]],
Cell[CellGroupData[{
Cell[3535, 103, 198, 4, 53, "Section",ExpressionUUID->"3a0f0b5f-5d2b-48b3-a735-41fc074714f2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[3758, 111, 150, 3, 54, "Subsection",ExpressionUUID->"2dcb9602-f293-4fbd-8927-29165a5c5729",
 InitializationCell->True,
 InitializationGroup->True],
Cell[3911, 116, 2120, 53, 215, "Input",ExpressionUUID->"7298d53a-acd3-4dfa-9dfd-b145f7b3c07b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[6068, 174, 155, 3, 38, "Subsection",ExpressionUUID->"2dcb9602-f293-4fbd-8927-29165a5c5729",
 InitializationCell->True,
 InitializationGroup->True],
Cell[6226, 179, 6144, 164, 448, "Input",ExpressionUUID->"7298d53a-acd3-4dfa-9dfd-b145f7b3c07b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[12407, 348, 203, 4, 38, "Subsection",ExpressionUUID->"8580c788-4465-4f77-ae5e-d51feadf8abb",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[12635, 356, 97, 0, 35, "Subsubsection",ExpressionUUID->"1b196b6f-fbd4-4e81-82cd-63c76644ee97"],
Cell[12735, 358, 19416, 427, 2019, "Input",ExpressionUUID->"4d4eb097-fedb-479c-8152-96e322899a23",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[32188, 790, 202, 4, 35, "Subsubsection",ExpressionUUID->"d6f123b3-168d-4f2c-a6b6-5970bccd0a6a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[32415, 798, 139, 3, 30, "Text",ExpressionUUID->"0eedcf7c-8915-4ad9-858c-22c175cf5299",
 InitializationCell->True,
 InitializationGroup->True],
Cell[32557, 803, 6485, 186, 450, "Input",ExpressionUUID->"69ee0df9-4669-4fb5-a75a-bb8452871696",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[39079, 994, 141, 3, 30, "Text",ExpressionUUID->"e7bc30fd-a215-4ff2-a009-13c7bda62096",
 InitializationCell->True,
 InitializationGroup->True],
Cell[39223, 999, 10280, 286, 455, "Input",ExpressionUUID->"b668e1cc-7797-4ca1-803b-92b1a398c69b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[49540, 1290, 143, 3, 30, "Text",ExpressionUUID->"f12cde70-d1a1-4f2e-a1c9-53508bdcbec4",
 InitializationCell->True,
 InitializationGroup->True],
Cell[49686, 1295, 7826, 218, 508, "Input",ExpressionUUID->"bdebfd05-7766-4534-a566-db047d910d52",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[57561, 1519, 202, 4, 29, "Subsubsection",ExpressionUUID->"3d0c2034-5ff4-4bc2-a677-3c4fa3038d0c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[57788, 1527, 139, 3, 30, "Text",ExpressionUUID->"a11fa556-628a-4cbd-95b6-6b6012e58e2b",
 InitializationCell->True,
 InitializationGroup->True],
Cell[57930, 1532, 7180, 189, 301, "Input",ExpressionUUID->"3867e3e1-9488-4dc6-89db-4b86edb7d67b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[65147, 1726, 141, 3, 30, "Text",ExpressionUUID->"afc827b2-8d8e-4050-81b0-09ad9ac2bee7",
 InitializationCell->True,
 InitializationGroup->True],
Cell[65291, 1731, 7904, 207, 348, "Input",ExpressionUUID->"1f8017ea-6769-45e0-9d38-ef20759317a4",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[73232, 1943, 143, 3, 30, "Text",ExpressionUUID->"ad366fe5-8626-421e-8214-196ae5600540",
 InitializationCell->True,
 InitializationGroup->True],
Cell[73378, 1948, 8167, 213, 348, "Input",ExpressionUUID->"2ffaec68-da07-4843-bfad-5e6d96df6f88",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[81594, 2167, 207, 4, 29, "Subsubsection",ExpressionUUID->"2eddc65b-50b7-460f-8d26-0c479f701de0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[81826, 2175, 139, 3, 30, "Text",ExpressionUUID->"b49e8314-86b8-47ae-ad78-bcd70081eb2e",
 InitializationCell->True,
 InitializationGroup->True],
Cell[81968, 2180, 10074, 256, 379, "Input",ExpressionUUID->"ce572374-25eb-47a6-af4d-329b8c34bab3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[92079, 2441, 141, 3, 30, "Text",ExpressionUUID->"daf349c7-1cb9-49bf-a4d8-5a7a4c7cc29c",
 InitializationCell->True,
 InitializationGroup->True],
Cell[92223, 2446, 12041, 303, 567, "Input",ExpressionUUID->"5cfe8e23-be22-4856-9871-0b5719b5fd6d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[104301, 2754, 143, 3, 30, "Text",ExpressionUUID->"11dea85e-ed93-447c-9fc5-8c950b85bec5",
 InitializationCell->True,
 InitializationGroup->True],
Cell[104447, 2759, 11028, 281, 379, "Input",ExpressionUUID->"bea904e1-5481-4e5d-a7de-2c9327246ef1",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[115536, 3047, 144, 3, 38, "Subsection",ExpressionUUID->"bbb933f8-30c3-4f47-83c7-5a4aa2304c17",
 InitializationCell->True,
 InitializationGroup->True],
Cell[115683, 3052, 14281, 311, 1675, "Input",ExpressionUUID->"8d5b138f-de6f-4a09-9825-27418d4ee3d9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[130001, 3368, 180, 3, 38, "Subsection",ExpressionUUID->"ea2e59c7-aa89-4370-b457-cd778de4d818",
 InitializationCell->True,
 InitializationGroup->True],
Cell[130184, 3373, 19178, 421, 2148, "Input",ExpressionUUID->"f09878dc-df6e-450e-a7ae-27b2f26e9eeb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[149399, 3799, 211, 5, 38, "Subsection",ExpressionUUID->"9741be4a-3c29-47c9-896e-9e3a7dbb031f",
 InitializationCell->True,
 InitializationGroup->True],
Cell[149613, 3806, 23092, 509, 2411, "Input",ExpressionUUID->"5c293add-696a-41fa-a1fc-79001887ac42",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[172742, 4320, 173, 3, 38, "Subsection",ExpressionUUID->"d57bf0b2-7a95-4682-82fb-54305dc96b80",
 InitializationCell->True,
 InitializationGroup->True],
Cell[172918, 4325, 11528, 250, 1122, "Input",ExpressionUUID->"ef3ddae7-5ab7-4988-8529-aade0de221fe",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[184483, 4580, 204, 5, 38, "Subsection",ExpressionUUID->"3007b06d-e525-45c6-9e50-b9338c6d4522",
 InitializationCell->True,
 InitializationGroup->True],
Cell[184690, 4587, 27834, 613, 2950, "Input",ExpressionUUID->"71f3c586-8ec3-49fe-903a-a7d8435bb841",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[212561, 5205, 208, 5, 38, "Subsection",ExpressionUUID->"dea0ee0c-8cd9-417f-90b2-211bde3765f7",
 InitializationCell->True,
 InitializationGroup->True],
Cell[212772, 5212, 20894, 444, 2231, "Input",ExpressionUUID->"2b651595-f338-40b9-a1d5-41518a1d1265",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[233703, 5661, 209, 5, 38, "Subsection",ExpressionUUID->"3c94bdab-101e-4ea8-954f-837729b157b9",
 InitializationCell->True,
 InitializationGroup->True],
Cell[233915, 5668, 7890, 185, 553, "Input",ExpressionUUID->"a4367b14-d13a-4ff4-9e7d-07e41b41b398",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[241842, 5858, 253, 6, 38, "Subsection",ExpressionUUID->"5fff5317-0f27-4699-8ff3-5bd42c3fe345",
 InitializationCell->True,
 InitializationGroup->True],
Cell[242098, 5866, 20757, 438, 2736, "Input",ExpressionUUID->"b2c2fb22-6e42-4220-8464-04d0f0df3c52",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[262892, 6309, 196, 4, 38, "Subsection",ExpressionUUID->"51dfba0a-20f4-4ad9-8192-c5e8f39094c2",
 InitializationCell->True,
 InitializationGroup->True],
Cell[263091, 6315, 24137, 518, 2914, "Input",ExpressionUUID->"66820d2c-f57a-4fd4-b57b-7128969015a3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[287265, 6838, 166, 3, 38, "Subsection",ExpressionUUID->"6dcca70e-3035-4ac9-8adb-a747bdd929aa",
 InitializationCell->True,
 InitializationGroup->True],
Cell[287434, 6843, 21750, 486, 1990, "Input",ExpressionUUID->"50c872db-3501-4f36-9411-4a9f8b17e216",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[309221, 7334, 167, 3, 38, "Subsection",ExpressionUUID->"146c33ec-1a58-447f-a90c-c7e01fd5977e",
 InitializationCell->True,
 InitializationGroup->True],
Cell[309391, 7339, 17573, 401, 2189, "Input",ExpressionUUID->"895edc6f-5982-4677-a995-fdb13e435fec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[327001, 7745, 129, 0, 38, "Subsection",ExpressionUUID->"146c33ec-1a58-447f-a90c-c7e01fd5977e"],
Cell[327133, 7747, 62175, 1460, 5791, "Input",ExpressionUUID->"895edc6f-5982-4677-a995-fdb13e435fec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[389345, 9212, 178, 3, 38, "Subsection",ExpressionUUID->"146c33ec-1a58-447f-a90c-c7e01fd5977e"],
Cell[389526, 9217, 22699, 521, 1714, "Input",ExpressionUUID->"895edc6f-5982-4677-a995-fdb13e435fec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[412262, 9743, 178, 3, 38, "Subsection",ExpressionUUID->"146c33ec-1a58-447f-a90c-c7e01fd5977e"],
Cell[412443, 9748, 24560, 564, 1674, "Input",ExpressionUUID->"895edc6f-5982-4677-a995-fdb13e435fec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[437052, 10318, 108, 0, 67, "Section",ExpressionUUID->"4009a82b-8634-48ab-b894-d305596c1f3a"],
Cell[437163, 10320, 114, 1, 32, "Input",ExpressionUUID->"e4d94e08-a9a0-49a8-b6e4-20a795f8ad6f"],
Cell[437280, 10323, 141, 2, 32, "Input",ExpressionUUID->"5f6e5ccc-c24e-4664-9250-22cd80bae77c"],
Cell[437424, 10327, 113, 1, 32, "Input",ExpressionUUID->"919d6535-b535-400d-b698-8b7ff2545666"],
Cell[437540, 10330, 131, 1, 32, "Input",ExpressionUUID->"17412e27-4c67-40b4-8586-c09c66b09d33"],
Cell[437674, 10333, 161, 3, 32, "Input",ExpressionUUID->"18c57370-d27e-40ea-aee8-481567601731"],
Cell[437838, 10338, 163, 3, 32, "Input",ExpressionUUID->"8d448d92-87de-4ee2-8d96-f82b12456944"],
Cell[438004, 10343, 163, 3, 32, "Input",ExpressionUUID->"7be13048-f02f-47b4-b1b2-963d48c0c439"],
Cell[438170, 10348, 132, 1, 32, "Input",ExpressionUUID->"becbdfd2-f182-459f-97ee-46b0966f8a5e"],
Cell[438305, 10351, 126, 1, 32, "Input",ExpressionUUID->"8cd12fd1-7b1b-46e1-b2f9-f5b89835e153"],
Cell[438434, 10354, 120, 1, 32, "Input",ExpressionUUID->"c62a1b3d-6689-48c1-8407-8605ac2105f7"],
Cell[438557, 10357, 131, 1, 32, "Input",ExpressionUUID->"b73da2f1-7f56-474f-bf7c-02374457d46d"],
Cell[438691, 10360, 110, 1, 32, "Input",ExpressionUUID->"18435135-ad74-4876-9aa7-d685c594bf33"],
Cell[438804, 10363, 137, 2, 32, "Input",ExpressionUUID->"21136c97-fb33-4c1c-9209-87e11d56f31f"],
Cell[438944, 10367, 139, 2, 32, "Input",ExpressionUUID->"2681646b-b146-4632-9b80-6d8612220b00"],
Cell[439086, 10371, 139, 2, 32, "Input",ExpressionUUID->"264b53c5-2a39-4fd7-8515-247eff8c8ff0"],
Cell[439228, 10375, 131, 1, 32, "Input",ExpressionUUID->"57aa68c6-930a-4a40-afbc-b862af53f7a8"],
Cell[439362, 10378, 108, 1, 32, "Input",ExpressionUUID->"b12eeb83-7c86-4130-bdbc-c07961d93962"],
Cell[439473, 10381, 117, 1, 32, "Input",ExpressionUUID->"11259bf6-fb76-45f2-bd2d-2e3edebc1df1"],
Cell[439593, 10384, 144, 2, 32, "Input",ExpressionUUID->"810f18a1-47b9-4c99-b717-7e8d26bb20c9"],
Cell[439740, 10388, 142, 2, 32, "Input",ExpressionUUID->"7305dbcc-2839-42f4-a85f-87233aa886f1"],
Cell[439885, 10392, 154, 3, 32, "Input",ExpressionUUID->"6c2344b0-1604-412c-813b-79d4eb28641a"],
Cell[440042, 10397, 150, 2, 32, "Input",ExpressionUUID->"2785b9b3-20bd-47be-a15e-29068c5fd31b"],
Cell[440195, 10401, 119, 1, 32, "Input",ExpressionUUID->"63efb794-185c-452b-8d4a-07aa5704e990"],
Cell[440317, 10404, 115, 1, 32, "Input",ExpressionUUID->"66d3cbdd-0ced-4715-aa09-e8bda58dabed"],
Cell[440435, 10407, 110, 1, 32, "Input",ExpressionUUID->"e7de3199-89e3-4626-a5ba-ae5f1d88ecfe"],
Cell[440548, 10410, 126, 1, 32, "Input",ExpressionUUID->"e330d837-7187-4200-88df-ba335f126ebb"],
Cell[440677, 10413, 109, 1, 32, "Input",ExpressionUUID->"7ef7945b-f6cf-4a7c-baee-66e5ac9874b7"]
}, Closed]],
Cell[CellGroupData[{
Cell[440823, 10419, 91, 0, 53, "Section",ExpressionUUID->"7414cb2e-17b8-4341-8689-80b153edcda0"],
Cell[CellGroupData[{
Cell[440939, 10423, 122, 2, 54, "Subsection",ExpressionUUID->"9e4c3019-1f48-4f2d-b705-843878f6f6d7",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[441086, 10429, 214, 4, 32, "Input",ExpressionUUID->"55972b50-71ad-4df2-840c-eb5a8ce163cd",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[441325, 10437, 200, 4, 32, "Input",ExpressionUUID->"bd05a4a3-6829-410d-a8a2-38525195e876"],
Cell[441528, 10443, 329, 8, 54, "Input",ExpressionUUID->"ad3440c0-9e3e-4b65-866b-e6ed785e047e"],
Cell[441860, 10453, 412, 11, 54, "Input",ExpressionUUID->"f0b58740-c1d4-4891-b7e5-a60caedbca5b"],
Cell[442275, 10466, 221, 4, 32, "Input",ExpressionUUID->"a19fbad9-9aa5-4585-8a13-1969e35be166"],
Cell[442499, 10472, 350, 8, 54, "Input",ExpressionUUID->"28e7b5e1-910f-489d-8ec7-bb62a0f23b8a"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[442910, 10487, 118, 2, 38, "Subsection",ExpressionUUID->"8d79524b-d133-4787-ae06-66695923ddfc",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[443053, 10493, 120, 1, 32, "Input",ExpressionUUID->"664becc5-5ae8-4175-ade0-e15cea13866f"],
Cell[443176, 10496, 246, 5, 32, "Input",ExpressionUUID->"7554b34a-218f-49bb-b5ae-73f3002d2d91"]
}, Closed]],
Cell[CellGroupData[{
Cell[443459, 10506, 115, 1, 32, "Input",ExpressionUUID->"51b49342-ab63-45bb-af9a-b0c133b0c3d2"],
Cell[443577, 10509, 241, 5, 32, "Input",ExpressionUUID->"c44ff677-587c-4c3a-adb0-d8d4f89d9c1f"]
}, Closed]],
Cell[CellGroupData[{
Cell[443855, 10519, 119, 1, 32, "Input",ExpressionUUID->"51b49342-ab63-45bb-af9a-b0c133b0c3d2"],
Cell[443977, 10522, 245, 5, 32, "Input",ExpressionUUID->"c44ff677-587c-4c3a-adb0-d8d4f89d9c1f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[444271, 10533, 126, 2, 38, "Subsection",ExpressionUUID->"28909755-57a8-452d-a854-0314ae2e2769",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[444422, 10539, 113, 1, 30, "Input",ExpressionUUID->"b221a4bb-90d9-4e47-97e3-3fa5ccb60afc"],
Cell[444538, 10542, 553, 15, 52, "Input",ExpressionUUID->"775d24ad-61ec-4547-8f6c-c80fb8b32d15"],
Cell[445094, 10559, 462, 12, 52, "Input",ExpressionUUID->"e6428bd9-7d98-43ab-9c1a-f2254dc2c68b"],
Cell[445559, 10573, 408, 8, 52, "Input",ExpressionUUID->"b4294e82-8b0c-4902-84a6-24d5294bbfe3"],
Cell[445970, 10583, 396, 10, 52, "Input",ExpressionUUID->"9a9e1e69-9c80-4d3c-ab41-dff61819d232"],
Cell[446369, 10595, 433, 11, 52, "Input",ExpressionUUID->"8afcdd4b-17d7-4c6e-940f-83dd6715bb16"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[446851, 10612, 132, 2, 38, "Subsection",ExpressionUUID->"9ce207e4-8487-4183-873a-4baed98d6b52",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[447008, 10618, 131, 1, 32, "Input",ExpressionUUID->"50a9c823-a7eb-45c0-8902-7d33d8857c40"],
Cell[447142, 10621, 268, 5, 54, "Input",ExpressionUUID->"42161e99-2fa4-4e39-93e2-43cc4547f126"]
}, Closed]],
Cell[CellGroupData[{
Cell[447447, 10631, 126, 1, 32, "Input",ExpressionUUID->"5466cefc-abe3-4f21-acf3-9f91c6533b82"],
Cell[447576, 10634, 212, 4, 32, "Input",ExpressionUUID->"0eb97416-91c3-484c-847e-c2ca1b741753"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[447837, 10644, 120, 2, 38, "Subsection",ExpressionUUID->"f8ed45a1-5df6-415c-a521-df54c6dd4851",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[447982, 10650, 141, 2, 32, "Input",ExpressionUUID->"54f0c67f-bbe7-43dd-9c79-b24f29cd2312"],
Cell[448126, 10654, 224, 4, 32, "Input",ExpressionUUID->"2d3918f0-efb0-4e76-8098-40f0a512befc"]
}, Closed]],
Cell[CellGroupData[{
Cell[448387, 10663, 142, 2, 32, "Input",ExpressionUUID->"e48664c1-5a5a-407f-bcb3-892438ac50b8"],
Cell[448532, 10667, 206, 3, 32, "Input",ExpressionUUID->"ef137e65-4b1b-4ec1-b22e-2c65a3f45fe6"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[448787, 10676, 178, 4, 38, "Subsection",ExpressionUUID->"35d4ae3b-0cee-4b91-9b90-89a9190c9fa3",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[448990, 10684, 131, 1, 32, "Input",ExpressionUUID->"02849dfa-bf73-4582-96c7-6032d5fb1146"],
Cell[449124, 10687, 198, 3, 32, "Input",ExpressionUUID->"25e44fa7-d662-47e8-8588-06e727571d49"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[449371, 10696, 182, 4, 38, "Subsection",ExpressionUUID->"e58618c9-c208-45cc-af3e-4fb1400091ef",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[449578, 10704, 132, 1, 32, "Input",ExpressionUUID->"6e4f5391-f4be-417c-be55-92e870e0aa9a"],
Cell[449713, 10707, 217, 4, 32, "Input",ExpressionUUID->"28e2ecc3-900d-4921-a145-21b82b6d0067"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[449979, 10717, 144, 2, 38, "Subsection",ExpressionUUID->"e58618c9-c208-45cc-af3e-4fb1400091ef",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[450148, 10723, 108, 1, 32, "Input",ExpressionUUID->"1badf326-8465-4c0a-af66-39b3ce50a171"],
Cell[450259, 10726, 540, 14, 75, "Input",ExpressionUUID->"3e4030d6-731a-4b81-939d-06f00294a1d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[450836, 10745, 110, 1, 32, "Input",ExpressionUUID->"b7d940fe-a36e-445a-ae18-97c3edf84575"],
Cell[450949, 10748, 569, 15, 75, "Input",ExpressionUUID->"e28f5e23-1188-423d-95ed-10015f249eca"]
}, Closed]],
Cell[CellGroupData[{
Cell[451555, 10768, 114, 1, 32, "Input",ExpressionUUID->"f54b9c44-f2df-4c49-9355-bc12d7574658"],
Cell[451672, 10771, 125, 1, 32, "Input",ExpressionUUID->"7b67ea5a-2b1b-4432-8b5d-1eeddfef136e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[451846, 10778, 227, 5, 38, "Subsection",ExpressionUUID->"6bd999bd-8142-47d1-9f29-dc9536222bf0",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[452098, 10787, 154, 3, 32, "Input",ExpressionUUID->"d8ffb0a0-1e8b-4671-bb24-48d047021597"],
Cell[452255, 10792, 722, 14, 54, "Input",ExpressionUUID->"42f0fdf7-54c5-4c35-852d-2b9d99ce4a30"],
Cell[452980, 10808, 732, 15, 54, "Input",ExpressionUUID->"42f0fdf7-54c5-4c35-852d-2b9d99ce4a30"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[453761, 10829, 170, 3, 38, "Subsection",ExpressionUUID->"4014ac41-5062-4e61-8a80-84c6efef47e1",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[453956, 10836, 150, 2, 32, "Input",ExpressionUUID->"44e7ee4c-64cd-4e82-9a4d-7b0f830708db"],
Cell[454109, 10840, 644, 12, 54, "Input",ExpressionUUID->"3a13e1b2-9a40-4464-9b37-050331d800b5"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[454802, 10858, 140, 2, 38, "Subsection",ExpressionUUID->"72ad96c2-56ea-439b-b3e6-9734ed949d08",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[454967, 10864, 117, 1, 32, "Input",ExpressionUUID->"d2942d15-cc06-4916-b8e8-1923f9648ebc"],
Cell[455087, 10867, 388, 9, 32, "Input",ExpressionUUID->"ae4abd7a-081b-4224-ac3f-343865a276ba"],
Cell[455478, 10878, 1120, 33, 96, "Input",ExpressionUUID->"97245497-3f84-42a4-93e9-add113ecc8c6"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[456647, 10917, 189, 4, 38, "Subsection",ExpressionUUID->"5e009aeb-48ed-4bbf-b1a7-15644be7efd3",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[456861, 10925, 126, 1, 30, "Input",ExpressionUUID->"69c1e0dd-ceee-4e19-85fd-339f033f19cf"],
Cell[456990, 10928, 240, 6, 30, "Input",ExpressionUUID->"7f8b20e1-1347-4d33-b3aa-008232ed2a5b"],
Cell[457233, 10936, 349, 9, 30, "Input",ExpressionUUID->"ae1e37d0-24b6-4d8a-a846-cd81a2308afa"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[457631, 10951, 161, 2, 38, "Subsection",ExpressionUUID->"72ad96c2-56ea-439b-b3e6-9734ed949d08",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[457817, 10957, 137, 2, 30, "Input",ExpressionUUID->"d2942d15-cc06-4916-b8e8-1923f9648ebc"],
Cell[457957, 10961, 190, 4, 32, "Input",ExpressionUUID->"ae4abd7a-081b-4224-ac3f-343865a276ba"],
Cell[458150, 10967, 1493, 40, 117, "Input",ExpressionUUID->"30b217e4-406f-4bb2-ad47-924a730fe453"]
}, Closed]],
Cell[CellGroupData[{
Cell[459680, 11012, 161, 3, 26, "Input",ExpressionUUID->"63f0fd15-71ee-4ccc-93cc-be12bea65457"],
Cell[459844, 11017, 192, 3, 30, "Input",ExpressionUUID->"97245497-3f84-42a4-93e9-add113ecc8c6"],
Cell[460039, 11022, 954, 26, 73, "Input",ExpressionUUID->"b8993fc3-efa1-4601-af08-db4cf09eb02a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[461030, 11053, 144, 2, 30, "Input",ExpressionUUID->"50f522b4-255f-4c1a-bde7-65e33474e049"],
Cell[461177, 11057, 197, 4, 30, "Input",ExpressionUUID->"f918f814-c64f-4a9f-a0fd-e653c402f88c"],
Cell[461377, 11063, 322, 8, 30, "Input",ExpressionUUID->"be71c8f6-e5eb-4f8e-b591-8df7ae645b26"],
Cell[461702, 11073, 322, 8, 30, "Input",ExpressionUUID->"bfc382bf-6ec3-4c15-99ee-cb9ebf9789d4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[462073, 11087, 210, 5, 38, "Subsection",ExpressionUUID->"72ad96c2-56ea-439b-b3e6-9734ed949d08",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[462308, 11096, 139, 2, 32, "Input",ExpressionUUID->"d2942d15-cc06-4916-b8e8-1923f9648ebc"],
Cell[462450, 11100, 193, 4, 32, "Input",ExpressionUUID->"ae4abd7a-081b-4224-ac3f-343865a276ba"],
Cell[462646, 11106, 1495, 40, 117, "Input",ExpressionUUID->"30b217e4-406f-4bb2-ad47-924a730fe453"]
}, Closed]],
Cell[CellGroupData[{
Cell[464178, 11151, 163, 3, 32, "Input",ExpressionUUID->"63f0fd15-71ee-4ccc-93cc-be12bea65457"],
Cell[464344, 11156, 198, 4, 32, "Input",ExpressionUUID->"97245497-3f84-42a4-93e9-add113ecc8c6"],
Cell[464545, 11162, 208, 4, 32, "Input",ExpressionUUID->"aab83e86-509f-4720-9781-7542271f533a"],
Cell[464756, 11168, 5383, 136, 402, "Input",ExpressionUUID->"07f7b923-84fd-44e2-8aa3-11a6fb8e359c"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[470188, 11310, 210, 5, 38, "Subsection",ExpressionUUID->"72ad96c2-56ea-439b-b3e6-9734ed949d08",
 InitializationGroup->False],
Cell[CellGroupData[{
Cell[470423, 11319, 139, 2, 32, "Input",ExpressionUUID->"d2942d15-cc06-4916-b8e8-1923f9648ebc"],
Cell[470565, 11323, 193, 4, 32, "Input",ExpressionUUID->"ae4abd7a-081b-4224-ac3f-343865a276ba"],
Cell[470761, 11329, 1495, 40, 117, "Input",ExpressionUUID->"30b217e4-406f-4bb2-ad47-924a730fe453"]
}, Closed]],
Cell[CellGroupData[{
Cell[472293, 11374, 163, 3, 32, "Input",ExpressionUUID->"63f0fd15-71ee-4ccc-93cc-be12bea65457"],
Cell[472459, 11379, 198, 4, 32, "Input",ExpressionUUID->"97245497-3f84-42a4-93e9-add113ecc8c6"],
Cell[472660, 11385, 209, 4, 32, "Input",ExpressionUUID->"3eb76ec4-71e7-46b3-abaa-757510d5f101"],
Cell[472872, 11391, 5154, 135, 402, "Input",ExpressionUUID->"da2c251b-bb35-44cc-a9e2-4c4d52091e50"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

